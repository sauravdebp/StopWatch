<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.SfGrid.WP</name>
    </assembly>
    <members>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridCell.CurrentCellBorderVisibilityProperty">
            <summary>
            Dependency registration for CurrentCellBorderVisiblity.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridCell.CurrentCellBorderThicknessProperty">
            <summary>
            Dependency registration for CurrentCellBorderThickness.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridCell.CurrentCellBorderBrushProperty">
            <summary>
            Dependency registration for CurrnetCell border brush
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridCell.CurrentCellBorderVisibility">
            <summary>
            Get or sets the CurrentCellBorder visiblity.
            Which is bind to  CurrentCell Boreder visiblity property.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridCell.CurrentCellBorderThickness">
            <summary>
            Gets or sets a thickness for CurrentCell border
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridCell.CurrentCellBorderBrush">
            <summary>
            Gets or sets Brush for CurrnetCell border.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridExpanderCellControl.OnIsExpandedChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Method will called when the property changed.
            </summary>
            <param name="obj"></param>
            <param name="args">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridExpanderCellControl.IsExpanded">
            <summary>
            Gets or sets a value indicating whether this instance Expanded or Collpase.
            </summary>
            <value><see langword="true"/> if this instance ; otherwise, <see langword="false"/>.</value>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridHeaderCellControl.Update">
            <summary>
            Makes Sure headercell property for updation
            </summary>
            <remarks>
            initial sort
            itemsource change checking
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridHeaderCellControl.Column">
            <summary>
            Gets or sets Associated GridColumn.
            </summary>
            <value></value>
            <remarks>Using this Column all other operations will be done</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridHeaderCellControl.ColumnOptionsWidth">
            <summary>
            Gets or sets ColumnOptionsWidth.
            </summary>
            <value></value>
            <remarks>this width will be set for column width rest than for Content presenter</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridHeaderCellControl.SortNumber">
            <summary>
            Gets or sets Order/Number for sort columns.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.UI.Xaml.Grid.GridHeaderCellControl.SortNumberVisibility" -->
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.UI.Xaml.Grid.GridHeaderCellControl.SortDirection" -->
        <member name="P:Syncfusion.UI.Xaml.Grid.GridRowHeaderCell.RowErrorMessage">
            <summary>
            Gets or sets RowErrorMessage showing in ToolTip.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridRowHeaderCell.RowIndex">
            <summary>
            Gets or sets RowIndex of the cell.
            </summary>
            <value></value>
            <remarks>can be used to number the row like excel</remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.VirtualizingCellsControl.SelectionBorderVisiblityProperty">
            <summary>
            Dependency registration for SelectionborderVisiblity
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.VirtualizingCellsControl.HighlightSelectionBorderVisiblityProperty">
            <summary>
            Dependency registration for SelectionborderVisiblity
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.VirtualizingCellsControl.RowHoverBackgroundBrushProperty">
            <summary>
            Dependeny registration for SelectionBackground.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.VirtualizingCellsControl.RowHighlightBorderThicknessProperty">
            <summary>
            Dependeny registration for SelectionBackground.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.VirtualizingCellsControl.RowSelectionBrushProperty">
            <summary>
            Dependeny registration for SelectionBackground.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.VirtualizingCellsControl.UpdateFocusRowPosition">
            <summary>
            Method which helps to update the CurrentFocus border position.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.VirtualizingCellsControl.SelectionBorderVisiblity">
            <summary>
            Gets or sets SelectionBorder visiblity.
            Which is bind to the Selection Border visiblity property
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.VirtualizingCellsControl.HighlightSelectionBorderVisiblity">
            <summary>
            Gets or Sets HighlightSelectionBorder visiblity.
            Which is bind to the Selection Border visiblity property
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.VirtualizingCellsControl.RowHoverBackgroundBrush">
            <summary>
            Gets or sets value for Selection Background.
            Which is bind to the Selection Border Background property.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.VirtualizingCellsControl.RowHighlightBorderThickness">
            <summary>
            Gets or sets value for Highlight Border Thickness.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.VirtualizingCellsControl.RowSelectionBrush">
            <summary>
            Gets or sets value for Selection Background.
            Which is bind to the Selection Border Background property.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.VirtualizingCellsControl.GroupRowSelectionBrush">
            <summary>
            Gets or sets the GroupCaptionRowSelectionBrush
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.VirtualizingCellsControl.CurrentFocusRowVisibility">
            <summary>
            Property which decides whethe Focus border is visible or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.VirtualizingCellsControl.CurrentFocusBorderMargin">
            <summary>
            Preperty which holds the margin value to avoid the overlapping in Indent Cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.CaptionSummaryRowControl.IsExpanded">
            <summary>
            Gets or sets a value indicating whether this instance Expanded or Collapsed
            </summary>
            <value><see langword="true"/> if this instance ; otherwise, <see langword="false"/>.</value>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.AddNewRowControl.UpdateTextBorder">
            <summary>
            Updates the WaterMarkText wrapper clipping.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.AddNewRowControl.OnLoaded(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Method which helps to modify the AddNewRow row initial state and clicpping.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.AddNewRowControl.AddNewRowText">
            <summary>
            Get or Set the text displayed in AddNewROw watermark.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.AddNewRowControl.TextMargin">
            <summary>
            Property which helps to position the AddNewRow text when the row header is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.SfDataGrid.ItemsSourceProperty">
            <summary>
            Dependency Registration for ItemsSource property
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.SfDataGrid.CurrentCellBorderThicknessProperty">
            <summary>
            Dependency Registration of CurrentCellBorder thickness
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.SfDataGrid.CurrentCellBorderBrushProperty">
            <summary>
            Dependency Registration of CurrentCell border brush.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.SfDataGrid.ColumnsProperty">
            <summary>
            Dependency registration of GridColumns property
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.SfDataGrid.AutoGenerateColumnsProperty">
            <summary>
            Dependency registration for AutoGenerateColumns
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.SfDataGrid.SelectedItemProperty">
            <summary>
            Dependency registration for SelectedItem
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.SfDataGrid.SelectedItemsProperty">
            <summary>
            Dependency registration of SelectedItems
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.SfDataGrid.SelectionModeProperty">
            <summary>
            Dependency registration for Selection Mode property.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.SfDataGrid.AllowSelectionOnPointerPressedProperty">
            <summary>
            Depecdency registration of AllowSelectionOnPointerPressed
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.SfDataGrid.RowSelectionBrushProperty">
            <summary>
            Dependency Registration for SelectionBrush
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.SfDataGrid.GroupRowSelectionBrushProperty">
            <summary>
            Dependency Registration for GroupCaptionRowSelectionBrush
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.SfDataGrid.SelectedIndexProperty">
            <summary>
            Dependency registration for SelectedIndex
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.SfDataGrid.GroupColumnDescriptionsProperty">
            <summary>
            Dependency Registration for GroupColumnDescriptions
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.SfDataGrid.GroupSummaryRowsProperty">
            <summary>
            Dependency registration of GroupSummaryRows
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.SfDataGrid.CaptionSummaryRowProperty">
            <summary>
            Dependency Registration of Caption Summary Row.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.SfDataGrid.TableSummaryRowsProperty">
            <summary>
            Dependency Registration of TableSummaryRows
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.SfDataGrid.SummaryGroupComparerProperty">
            <summary>
            Dependency Registration of SummaryGroupComparer
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.SfDataGrid.AllowResizingHiddenColumnsProperty">
            <summary>
            The allow resizing hidden columns property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.SfDataGrid.EditTriggerProperty">
            <summary>
            Dependency Registration for EditTrigger property
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.SfDataGrid.AllowEditingProperty">
            <summary>
            Dependency Registration for AllowEditing property
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.SfDataGrid.CurrentItemProperty">
            <summary>
            Dependency property for CurrentItem
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.IsGroupDropAreaExpandedPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for IsGroupDropAreaExpandedPropertyChanged.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnItemsSourceChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for ItemsSource property.
            </summary>
            <param name="obj"></param>
            <param name="args">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnSortNumberPropertyChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency Call back for Show Sort Numbers
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnColumnSizerChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency Call back for ColumnSizer
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnAutoGenerateColumnsChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call backk for AutoGenerateColumns.
            </summary>
            <param name="obj"></param>
            <param name="args">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnAutoGenerateColumnsModeChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call backk for AutoGenerateColumnsMode.
            </summary>
            <param name="obj"></param>
            <param name="args">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnSelectedItemChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for SelectedItem
            </summary>
            <param name="obj"></param>
            <param name="args">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnSelectionModeChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for SelectionMode.
            If selection mode changed to Single current tow selection only maintained.
            If selection mode changed to None current cell selection only maintained all other selection shoud be cleared.
            For other two modes selection will be maintained.
            </summary>
            <param name="obj"></param>
            <param name="args">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnRowSelectionBackgroundChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for SelectionBackground.
            </summary>
            <param name="obj"></param>
            <param name="args">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnGroupRowSelectionBrushChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Depndency call back for GroupCaptionRowSelectionBrush
            </summary>
            <param name="obj"></param>
            <param name="args">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnSelectedIndexChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for Selected Index.
            User can set the SelectedIndex dynamically.
            </summary>
            <param name="obj"></param>
            <param name="args">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnRowHeightChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back method of Row Height Property.
            Sets the Default row height of all the Rows in SfDataGrid.
            </summary>
            <param name="obj"></param>
            <param name="args">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnHeaderRowHeightChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back method of Header Row Height Property.
            Sets the Default row height of Header Row in SfDataGrid.
            </summary>
            <param name="obj"></param>
            <param name="args">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnCaptionSummaryRowChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back method of CaptionSummaryRow. Which is helpes to upadete the view while settinf the CaptionSummaryRowDynamically
            </summary>
            <param name="obj"></param>
            <param name="args">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnCellStyleChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for CellStyle property.
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnCellStyleSelectorChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for CellStyleSelector property.
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnCellTemplateSelectorChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for CellTemplateSelector property.
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnRowStyleSelectorChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for RowStyleSelector property.
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnRowStyleChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for RowStyle property.
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnHeaderStyleChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for HeaderStyle property.
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnHeaderTemplateChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for HeaderTemplate property.
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Handling the keydown operations of SfDataGrid
            </summary>
            <param name="e">An <see cref="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs">KeyRoutedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnContainerKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Raises the <see cref="E:ContainerKeyDown"/> event.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnManipulationStarted(Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs)">
            <summary>
            Here we handled Manipulation Started event to avoid the selection while manipulating SfDataGrid
            </summary>
            <param name="e">An <see cref="T:Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs">ManipulationStartedRoutedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.SelectRows(System.Int32,System.Int32)">
            <summary>
            Method which is used to Select the Multiple rows by passing the starting index and end index.
            Multiple row will be selected only for Multiple and Extended mode selection.
            This is not applicable for Single and None selection mode.
            </summary>
            <param name="startRowIndex"></param>
            <param name="endRowIndex"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.GetUnBoundCellValue(Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Get UnBoundCell Value
            </summary>
            <param name="column"></param>
            <param name="record"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.GetSelectedCells">
            <summary>
            Method which helps to get the Selected Cells.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.SelectAll">
            <summary>
            Method which is used to Select All the rows in SfDataGrid
            SelectAll method only works for Multiple and Extended mode selection.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.ClearSelections(System.Boolean)">
            <summary>
            Method which is used to clear all the Selection present in Grid.
            </summary>
            <param name="exceptCurrentRow">If set to <see langword="true"/>, then Current row will not clear ; otherwise all the selection will be cleared, .</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.SelectCell(System.Object,Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Method which helps to select a particular cell.
            </summary>
            <param name="rowData">To select specific row.</param>
            <param name="column">To select particular column</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.SelectCells(System.Object,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object,Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Method which is used to Select the range of cells.
            Multiple cells will be selected only for Multiple and Extended mode selection.
            This is not applicable for Single and None selection mode.
            </summary>
            <param name="startRowData">To identify starting row to select.</param>
            <param name="startColumn">To identify starting column to select.</param>
            <param name="endRowData">To identify ending row to select.</param>
            <param name="endColumn">To identify ending column to select.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.UnSelectCell(System.Object,Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Method which helps to unselect a particular cell.
            </summary>
            <param name="rowData">To unselect specific row.</param>
            <param name="column">To unselect particular column</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.UnSelectCells(System.Object,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object,Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Method which is used to Unselect the range of cells.
            Multiple cells will be unselected only for Multiple and Extended mode selection.
            This is not applicable for Single and None selection mode.
            </summary>
            <param name="startRowData">To identify starting row to unselect.</param>
            <param name="startColumn">To identify starting column to unselect.</param>
            <param name="endRowData">To identify ending row to unselect.</param>
            <param name="endColumn">To identify ending column to unselect.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.GroupBy(System.String,Windows.UI.Xaml.Data.IValueConverter)">
            <summary>
            Method which helps to make the Grouping by passing the column name.
            </summary>
            <param name="columnName"></param>
            <param name="converter"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.GroupBy(System.String,System.Int32,Windows.UI.Xaml.Data.IValueConverter)">
            <summary>
            Method which helps to make the Grouping by passing the column name and its position.
            </summary>
            <param name="columnName"></param>
            <param name="converter"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.RemoveGroup(System.String)">
            <summary>
            Methos which helps you to remove the grouping by passing the column name.
            </summary>
            <param name="columnName"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.ExpandAllGroup">
            <summary>
            Method which helps you to Expand all the Groups
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.CollapseAllGroup">
            <summary>
            Method which helps to collapse all the groups.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.ExpandGroupsAtLevel(System.Int32)">
            <summary>
            Method which helps to Expand all the groups in specific level
            </summary>
            <param name="groupLevel"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.CollapseGroupsAtLevel(System.Int32)">
            <summary>
            Method which helps to collapse all the groups in spaecific level
            </summary>
            <param name="groupLevel"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.ExpandGroup(Syncfusion.Data.Group)">
            <summary>
            Expand the Group
            </summary>
            <param name="group"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.CollapseGroup(Syncfusion.Data.Group)">
            <summary>
            Collapse the Group.
            </summary>
            <param name="group"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.RaiseSortColumnsChanging(System.Collections.Generic.IList{Syncfusion.UI.Xaml.Grid.SortColumnDescription},System.Collections.Generic.IList{Syncfusion.UI.Xaml.Grid.SortColumnDescription},System.Collections.Specialized.NotifyCollectionChangedAction,System.Boolean@)">
            <summary>
            Helper method to raise the SortColumnChanging event
            </summary>
            <param name="addedColumns"></param>
            <param name="removedColumns"></param>
            <param name="action"></param>
            <param name="cancelScroll">If set to <see langword="true"/>, then ; otherwise, .</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.RaiseSortColumnsChanged(System.Collections.Generic.IList{Syncfusion.UI.Xaml.Grid.SortColumnDescription},System.Collections.Generic.IList{Syncfusion.UI.Xaml.Grid.SortColumnDescription},System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Helper method to raise the SortColumn changed method
            </summary>
            <param name="addedColumns"></param>
            <param name="removedColumns"></param>
            <param name="action"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.RaiseItemsSourceChangedEvent(Syncfusion.UI.Xaml.Grid.GridItemsSourceChangedEventArgs)">
            <summary>
            Method which is used to raise the ItemsSourceChanged Event
            </summary>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Grid.GridItemsSourceChangedEventArgs">GridItemsSourceChangedEventArgs</see> that contains the event data.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.RaiseSelectionChagingEvent(Syncfusion.UI.Xaml.Grid.GridSelectionChangingEventArgs)">
            <summary>
            Method which is used to raise the SelectionChanging Event
            </summary>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Grid.GridSelectionChangingEventArgs">GridSelectionChangingEventArgs</see> that contains the event data.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.RaiseSelectionChangedEvent(Syncfusion.UI.Xaml.Grid.GridSelectionChangedEventArgs)">
            <summary>
            Method which is used to rasie the selection changed event.
            </summary>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Grid.GridSelectionChangedEventArgs">GridSelectionChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.RaiseCurrentCellActivatingEvent(Syncfusion.UI.Xaml.Grid.CurrentCellActivatingEventArgs)">
            <summary>
            Helper method to raise Current Cell Changing Event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.RaiseCurrentCellActivatedEvent(Syncfusion.UI.Xaml.Grid.CurrentCellActivatedEventArgs)">
            <summary>
            Helper method to raise Current Cell Changed Event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.RaiseCurrentCellBeginEditEvent(Syncfusion.UI.Xaml.Grid.CurrentCellBeginEditEventArgs)">
            <summary>
            Helper method to raise Current Cell Begin Edit Event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.RaiseRecordDeletingEvent(Syncfusion.UI.Xaml.Grid.RecordDeletingEventArgs)">
            <summary>
            Methods which is used to raise RecordDeleting Event
            </summary>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Grid.RecordDeletingEventArgs">RecordDeletingEventArgs</see> that contains the event data.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.RaiseRecordDeletedEvent(Syncfusion.UI.Xaml.Grid.RecordDeletedEventArgs)">
            <summary>
            Method which is used to raise RecordDeleted Event
            </summary>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Grid.RecordDeletedEventArgs">RecordDeletedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.RaiseCurrentCellEndEditEvent(Syncfusion.UI.Xaml.Grid.CurrentCellEndEditEventArgs)">
            <summary>
            Helper method to raise Current Cell End Edit Event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.RaiseCurrentCellValidatingEvent(Syncfusion.UI.Xaml.Grid.CurrentCellValidatingEventArgs)">
            <summary>
            Helper method to raise Current Cell Validating Event
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.RaiseCurrentCellValidatedEvent(Syncfusion.UI.Xaml.Grid.CurrentCellValidatedEventArgs)">
            <summary>
            Helper method to raise Current Cell Validated Event
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.RaiseRowValidatingEvent(Syncfusion.UI.Xaml.Grid.RowValidatingEventArgs)">
            <summary>
            Helper method to raise Row validating event
            </summary>
            <param name="e">An <see cref="T:Syncfusion.UI.Xaml.Grid.RowValidatingEventArgs">RowValidatingEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.RaiseRowValidatedEvent(Syncfusion.UI.Xaml.Grid.RowValidatedEventArgs)">
            <summary>
             Helper method to raise Row validated event
            </summary>
            <param name="e">An <see cref="T:Syncfusion.UI.Xaml.Grid.RowValidatedEventArgs">RowValidatedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.RaiseQueryUnboundValue(Syncfusion.UI.Xaml.Grid.UnBoundActions,System.Object,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Helper method to raise UnboundColumn initializing and updating
            </summary>
            <param name="getAction">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="setAction">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="column"></param>
            <param name="cell"></param>
            <param name="record"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.RaiseQueryColumnDragging(Syncfusion.UI.Xaml.Grid.QueryColumnDraggingEventArgs)">
            <summary>
            Helper method to raise Drag and Drop function.
            </summary>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Grid.QueryColumnDraggingEventArgs">QueryColumnDraggingEventArgs</see> that contains the event data.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.RaiseGroupExpandingEvent(Syncfusion.UI.Xaml.Grid.GroupChangingEventArgs)">
            <summary>
            Helper method to raise the Group Expanding Event
            </summary>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Grid.GroupChangingEventArgs">GroupChangingEventArgs</see> that contains the event data.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.RaiseGroupCollapsingEvent(Syncfusion.UI.Xaml.Grid.GroupChangingEventArgs)">
            <summary>
            Helper method to raise the Group Collapsing Event
            </summary>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Grid.GroupChangingEventArgs">GroupChangingEventArgs</see> that contains the event data.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.RaiseGroupExpandedEvent(Syncfusion.UI.Xaml.Grid.GroupChangedEventArgs)">
            <summary>
            Helper method to raise the Group Expanded Event
            </summary>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Grid.GroupChangedEventArgs">GroupChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.RaiseGroupCollapsedEvent(Syncfusion.UI.Xaml.Grid.GroupChangedEventArgs)">
            <summary>
            Helper method to raise the Group Collapsed Event
            </summary>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Grid.GroupChangedEventArgs">GroupChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.RaiseResizingColumnsEvent(Syncfusion.UI.Xaml.Grid.ResizingColumnsEventArgs)">
            <summary>
            Helper method to raise the Resize Columns Event
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.UpdateColumnCellStyle(System.Int32)">
            <summary>
            update cell style for given column index
            </summary>
            <param name="visibleColumnIndex"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.UpdateCellStyles">
            <summary>
            update style for all cells except header cells
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.UpdateColumnHeaderStyle(System.Int32)">
            <summary>
            update column header cell style
            </summary>
            <param name="visibleColumnIndex"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.UpdateHeaderRowStyle">
            <summary>
            update row header row style
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.UpdateRowStyle">
            <summary>
            update row styles for grid
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnColumnStyleChanged(Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            update style for given column
            </summary>
            <param name="column"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.InitializeCellRendererCollection">
            <summary>
            Method which will initiate the Cell Renderers Collection.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.ResetSelectionValues">
            <summary>
            Method which is helps to reset the selection based values.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.WireViewEvents">
            <summary>
            Method which is helps to hook the CollectionView based events.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.WireDataGridEvents">
            <summary>
            Method which is helps to hook the SfDataGrid based events.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnSizeChanged(System.Object,Windows.UI.Xaml.SizeChangedEventArgs)">
            <summary>
            Called when [size changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.SizeChangedEventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnGridColumnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            GridColumns collection changed event handling
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs">NotifyCollectionChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.UnWireViewEvents">
            <summary>
            Method which is helps to Unhook the CollectionView based events.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.UnWireDataGridEvents">
            <summary>
            Method which is helps to Unhook the SfDataGrid based events.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.EnsureProperties">
            <summary>
            Method to set the values for which is initialize before the Grid comes to View.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.InitializeCollections">
            <summary>
            Method which helps to initialize all the collection in SfDataGrid
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.InitializeTableSummaries">
            <summary>
            Method which helps to initialize the Table Summary rows
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.UpdateRowAndColumnCount(System.Boolean)">
            <summary>
            Method which helps to update the rowcolumn count initially
            </summary>
            <param name="canGenerateVisibleColumns">If set to <see langword="true"/>, then ; otherwise, .</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.UpdateRowCount">
            <summary>
            Method which helps to update the row count while grouping and filtering....
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.UpdateRowCountAndScrollBars">
            <summary>
            Methos which helps to update the view after group operation has done
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnSelectedItemsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Method which is called when the SelectedItems Changed
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs">NotifyCollectionChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.OnCaptionSummaryRowChanged(Syncfusion.UI.Xaml.Grid.GridSummaryRow)">
            <summary>
            Helper methods to update the view when the CaptionSummary row changed.
            </summary>
            <param name="row"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.ExpandAllDetailsView">
            <summary>
            Expands all the records with Details View.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.CollapseAllDetailsView">
            <summary>
            Collapse all the records with Details View.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.ExpandDetailsViewAt(System.Int32)">
            <summary>
            Expands the record at specified record index.
            </summary>
            <param name="recordIndex">Index of the record.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.CollapseDetailsViewAt(System.Int32)">
            <summary>
            Collapses the recoed at specified record index.
            </summary>
            <param name="recordIndex">Index of the record.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SfDataGrid.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or
            resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.GridColumnDragDropController">
            <summary>
            Gets or sets .
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.CellRenderers">
            <summary>
            Property Which will return the collection of Renderers.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.AutoScroller">
            <summary>
            Gets the auto scroller which provides automatic scrolling of content when the user drags the pressed
            mouse to an edge of the control.
            </summary>
            <value>The auto scroller.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.ItemsSource">
            <summary>
            Get or Set the ItemsSource for SfDataGrid
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.CurrentCellBorderThickness">
            <summary>
            Gets or sets a thickness for CurrentCell border.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.CurrentCellBorderBrush">
            <summary>
            Gets or sets Brush for CurrentCell Border
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.SortClickAction">
            <summary>
            Gets or sets sorting action by single or double click.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.AllowTriStateSorting">
            <summary>
            Gets or sets a value indicating whether Grid can able to be Tristate in sorting.
            </summary>
            <value><see langword="true"/> if ; otherwise, <see langword="false"/>.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.ShowSortNumbers">
            <summary>
            Gets or sets a value indicating whether Grid can show order number of SortColumnDescriptions.
            </summary>
            <value><see langword="true"/> if ; otherwise, <see langword="false"/>.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.AllowSorting">
            <summary>
            Gets or sets a value indicating whether Grid can sort or not.
            </summary>
            <value><see langword="true"/> if ; otherwise, <see langword="false"/>.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.SortColumnDescriptions">
            <summary>
            Gets the sort columns.
            </summary>
            <value>The sort columns.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.SortComparers">
            <summary>
            Get the Comparers for Custom Sorting
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.Columns">
            <summary>
            Property which is get or set the Grid Columns
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.AutoGenerateColumns">
            <summary>
            Gets or sets a value indicating whether populate columns auto matically or not
            </summary>
            <value><see langword="true"/> if ; otherwise, <see langword="false"/>.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.AutoGenerateColumnsMode">
            <summary>
            Gets or sets whether columns should be created automatically for all fields in the underlying data source
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.SelectedItem">
            <summary>
            Gets or Set the value for SelectedItem
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.SelectedItems">
            <summary>
            Gets the value of Selected items in SfDataGrid.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.SelectionMode">
            <summary>
            Gets or sets the Selection Mode of SfDataGrid
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.AllowSelectionOnPointerPressed">
            <summary>
            Gets or sets a value indicating whether Selection should present in PointerPressed or Pointer Released.
            </summary>
            <value><see langword="true"/> if ; otherwise, <see langword="false"/>.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.RowSelectionBrush">
            <summary>
            Gets or sets value for SelectionBrush
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.GroupRowSelectionBrush">
            <summary>
            Gets or sets value for GroupCaptionRowSelectionBrush
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.SelectedIndex">
            <summary>
            Gets or sets the SelectedIndex property. 
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.RowStyle">
            <summary>
            Allows to set the custom style for the SfDataGrid's Row.
            </summary>
            <value>Style</value>
            <remarks>Define the custom style and set as RowStyle</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.RowStyleSelector">
            <summary>
            Allows to set the Custom Style for SfDataGrid's Row and Selected Row Style .
            </summary>
            <value>StyleSelector</value>
            <remarks>Style which is to be choosed based on some condition given by the user and it is applied to the Virtualizing cells control</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.CellStyle">
            <summary>
            Gets or sets the style that is used when rendering the data grid cells.
            </summary>
            <value></value>
            <remarks>Whether defined as an inline style or as a resource, the Style defines the appearance of cells in the SfDataGrid, 
            and should specify a TargetType of GridCell. You typically specify setters for individual properties, 
            and might also use a setter for the Template property if you wanted to change the composition of elements. 
            For information that can help you decide whether to define styles inline or as resources, see Inline Styles and Templates.</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.CellStyleSelector">
            <summary>
            Gets or sets the StyleSelector for the GridCell.
            </summary>
            <value>StyleSelector</value>
            <remarks>Style which is to be choosed based on some condition given by the user and it is applied to GridCell </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.CellTemplateSelector">
            <summary>
            Gets or sets the Cell Template Selector for the GridCell.
            </summary>
            <value>DataTemplateSelector</value>
            <remarks>This Describes the cell Template based on Some condition which is given by the user and is to applied on the GridCell. </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.HeaderStyle">
            <summary>
            Gets or sets the style that is used when rendering the row headers.
            </summary>
            <value>Style</value>
            <remarks>Whether defined as an inline style or as a resource, the Style defines the appearance of Header cells in the SfDataGrid, 
            and should specify a TargetType of GridDataHeaderCellControl. You typically specify setters for individual properties, 
            and might also use a setter for the Template property if you wanted to change the composition of elements. 
            For information that can help you decide whether to define styles inline or as resources, see Inline Styles and Templates.</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.HeaderTemplate">
            <summary>
            Gets or sets a template used to display the header of the Columns.
            </summary>
            <value>DataTemplate</value>
            <remarks>This is a dependency property</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.HeaderRowHeight">
            <summary>
            Gets or sets the height of Header Row of DataGrid.
            </summary>
            <value>Double</value>
            <remarks>This is a dependency property, it set the Height of Header row of GirdDataControl.</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.RowHeight">
            <summary>
            Gets or sets the height of all the Rows in SfDataGrid.
            </summary>
            <value>Double</value>
            <remarks>This is a dependency property, it set the Height of all the rows in GirdDataControl.</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.GroupColumnDescriptions">
            <summary>
            Gets the GroupColumn values which is needed for Grouping
            </summary>
            <value></value>
            <remarks>Collection of GroupColumnDescriptions</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.GroupSummaryRows">
            <summary>
            Gets the values of Summary Rows which is needed for GroupSummarys
            </summary>
            <value></value>
            <remarks>Collection of ISummaryRow</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.CaptionSummaryRow">
            <summary>
            Gets or sets value Summary Row which is need for GroupCaption Summary
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.TableSummaryRows">
            <summary>
            Gets the Summary Rows which is need for Grid Table Summary
            </summary>
            <value></value>
            <remarks>Collection of ISummaryRow</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.SummaryGroupComparer">
            <summary>
            Gets or sets Comparer object for Grouped columns sorting.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.ColumnSizer">
            <summary>
            Gets or sets Width according to the Sizer.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.ShowGroupDropArea">
            <summary>
            Gets or sets a value indicating whether ShowGroupDropArea is true / false.
            </summary>
            <value><c>true</c> if [show group drop area]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.AllowResizingColumns">
            <summary>
            Gets or sets a value indicating whether AllowResizingColumns is true / false.
            </summary>
            <value><c>true</c> if [allow resize columns]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.AllowResizingHiddenColumns">
            <summary>
            Gets or sets a value indicating whether [allow resizing hidden columns].
            </summary>
            <value>
            <c>true</c> if [allow resizing hidden columns]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.ShowRowHeader">
            <summary>
            Gets or sets a value indicating whether RowHeader should be Visible or not.
            </summary>
            <value><see langword="true"/> if ; otherwise, <see langword="false"/>.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.RowHeaderWidth">
            <summary>
            Gets or sets RowHeaderWidth.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.AllowDraggingColumns">
            <summary>
            Gets or sets a value indicating whether [allow drag columns].
            </summary>
            <value><c>true</c> if [allow drag columns]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.IsGroupDropAreaExpanded">
            <summary>
            Gets or sets a value indicating the visibility of group drop area
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.AllowGrouping">
            <summary>
            Gets or sets a value indicating whether [allow group].
            </summary>
            <value><c>true</c> if [allow group]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.GroupDropAreaText">
            <summary>
            Gets or sets the group drop area text.
            </summary>
            <value>The group drop area text.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.EditTrigger">
            <summary>
            Gets or Sets a value indicating what Triggers will cause cells to enter Edit Mode
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.AllowEditing">
            <summary>
            Gets or Sets if the DataGrid is Editable
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.AllowDeleting">
            <summary>
            Gets or sets a value indicating whether User can delete Rows by pressing Delete Key
            </summary>
            <value><see langword="true"/> if ; otherwise, <see langword="false"/>.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.AddNewRowPosition">
            <summary>
            Get or Set the AddNewRow position of SfDataGrid
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.CurrentItem">
            <summary>
            Property which holds the Current selected row data value.
            To-Do : As of now CurrentItem doesn't maintaing in CollectionChange, Sorting, Grouping and Filtering operation,
            due to ResetSelectedRows and RefreshSelectedItems methods in SelectionController. We need more time to test if change these methods.
            Hence we planned to implement this behaviour with Cell Selection feature.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.ItemsSourceChanged">
            <summary>
            Occurs when the Items Source are changed
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.SortColumnsChanging">
            <summary>
            Occurs when the sort columns are changing.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.SortColumnsChanged">
            <summary>
            Occurs when the sort columns are changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.SelectionChanged">
            <summary>
            Occurs when Selection changed. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.SelectionChanging">
            <summary>
            Occurs when Selection changing. 
            </summary>
            <remarks>User can cancel the selection by setting args.Cancel is true</remarks>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.RecordDeleting">
            <summary>
            Occurs when Records are deleting from the Grid. 
            </summary>
            <remarks>User can cancel the selection by setting args.Cancel is true</remarks>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.RecordDeleted">
            <summary>
            Occurs when Records are deleted from the Grid. 
            </summary>
            <remarks>User can cancel the selection by setting args.Cancel is true</remarks>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.GroupExpanding">
            <summary>
            Occurs when Group Expanding
            </summary>
            <remarks>User can cancel the expanding operation by setting args.Cancel is true</remarks>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.GroupCollapsing">
            <summary>
            Occurs when Group Collapsing. 
            </summary>
            <remarks>User can cancel the collpasing operation by setting args.Cancel is true</remarks>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.GroupExpanded">
            <summary>
            Occurs when GroupExpanded. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.GroupCollapsed">
            <summary>
            Occurs when GroupCollapssed. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.ResizingColumns">
            <summary>
             Occurs when the Grid columns are resizied
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.QueryUnboundColumnValue">
            <summary>
            Occurs when UnboundColumn intializing and updating. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.QueryColumnDragging">
            <summary>
            Occurs when Column Drag and Drop functioning. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.CurrentCellActivating">
            <summary>
             Occurs when the Current Cell is Activating
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.CurrentCellActivated">
            <summary>
            Occurs when the Current Cell is Activated
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.CurrentCellBeginEdit">
            <summary>
            Occurs when Editing is Initiated
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.CurrentCellEndEdit">
            <summary>
            Occurs When Editing is Completed
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.CurrentCellValidating">
            <summary>
            Occurs when current cell is validating
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.CurrentCellDropDownSelectionChanged">
            <summary>
            Occurs when current cell Selection Changed
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.CurrentCellRequestNavigate">
            <summary>
            Occurs when current cell Request Navigation
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.CurrentCellValueChanged">
            <summary>
            Occurs when current cell value Changed
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.CurrentCellValidated">
            <summary>
            Occurs when current cell is validated
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.RowValidating">
            <summary>
            Occurs when the row lost it focus.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.RowValidated">
            <summary>
            Occurs when the row is validated.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.AutoGenerateRelations">
            <summary>
            Gets or sets a value indicating whether auto generate relations.
            </summary>
            <value>
            <c>true</c> if auto generate relations; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.SelectedDetailsViewGrid">
            <summary>
            Gets the selected child grid whild using GridViewDefinition.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SfDataGrid.HideEmptyGridViewDefinition">
            <summary>
            Indicates whether empty GridViewDefinition should be hidded or not.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.DetailsViewExpanding">
            <summary>
            Occurs when the record is details view expanding.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.DetailsViewExpanded">
            <summary>
            Occurs when the record is details view expanded.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.DetailsViewCollapsing">
            <summary>
            Occurs when the record is details view collapsing.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.DetailsViewCollapsed">
            <summary>
            Occurs when the record is details view collapsed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.SfDataGrid.AutoGeneratingRelations">
            <summary>
            Occurs while auto populating the details view definition
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.DataRowBase.IsSelectedRow">
            <summary>
            Gets or sets a value indicating whether this row is selected or not
            </summary>
            <value><see langword="true"/> if this instance ; otherwise, <see langword="false"/>.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.DataRowBase.IsFocusedRow">
            <summary>
            Get or sets the value indicating row is focused or not.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridCancelEventArgs.OriginalSender">
            <summary>
            Gets the original reporting source that raising this event
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridDetailsViewExpandingEventArgs.Record">
            <summary>
            Gets the record.
            </summary>
            <value>The record.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridDetailsViewExpandingEventArgs.DetailsViewItemsSource">
            <summary>
            Gets or sets the DetailsViewItemsSource.
            </summary>
            <value>Key: RelationalColumn.</value>
            <value>Value: DetailsViewItemsSource.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.GridDetailsViewExpandingEventHandler">
            <summary>
            Provides the delegate for <see cref="!:DetailsViewExpanding"/> event.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridEventArgs.OriginalSender">
            <summary>
            Gets the original reporting source that raising this event
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridDetailsViewExpandedEventArgs.Record">
            <summary>
            Gets the record.
            </summary>
            <value>The record.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridDetailsViewExpandedEventArgs.DetailsViewItemsSource">
            <summary>
            Gets or sets the DetailsViewItemsSource.
            </summary>
            <value>Key: RelationalColumn.</value>
            <value>Value: DetailsViewItemsSource.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.GridDetailsViewExpandedEventHandler">
            <summary>
            Provides the delegate for <see cref="!:DetailsViewExpanded"/> event.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridDetailsViewCollapsingEventArgs.Record">
            <summary>
            Gets the record.
            </summary>
            <value>The record.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.GridDetailsViewCollapsingEventHandler">
            <summary>
            Provides the delegate for <see cref="!:DetailsViewCollapsing"/> event.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridDetailsViewCollapsedEventArgs.Record">
            <summary>
            Gets the record.
            </summary>
            <value>The record.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.GridDetailsViewCollapsedEventHandler">
            <summary>
            Provides the delegate for <see cref="!:DetailsViewCollapsed"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.DetailsViewManager.ExpandAllDetailsView">
            <summary>
            Expands all the records with Details View.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.DetailsViewManager.CollapseAllDetailsView">
            <summary>
            Collapse all the records with Details View.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.DetailsViewManager.ExpandDetailsViewAt(System.Int32)">
            <summary>
            Expands the record at specified record index.
            </summary>
            <param name="recordIndex">Index of the record.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.DetailsViewManager.CollapseDetailsViewAt(System.Int32)">
            <summary>
            Collapses the Details View at specified record index.
            </summary>
            <param name="recordIndex">Index of the record.</param>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.DetailsViewManager.DisableLastColumnResizingProperty">
            <summary>
            if DetailsView is used and DisableLastColumnResizing is true, it will disbale the parent grid last column resizing when parent grid width is less than that of child grid
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.DetailsViewManager.AllowDisposeCollectionView">
            <summary>
            Dispose the details view itemssource (ICollectionView) when the row moves out of the view.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.CoveredCellInfo.Row">
            <summary>
            Gets Row index for the coveredCell.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.CoveredCellInfo.Left">
            <summary>
            Gets Left index for the cell.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.CoveredCellInfo.Right">
            <summary>
            Gets Right index for the cell.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.CoveredCellInfo.Width">
            <summary>
            Gets Width for the cell.
            </summary>
            <value></value>
            <remarks>difference between left and right index of the cell</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.CoveredCellInfo.Name">
            <summary>
            Gets Name of the StackedColumn corresponding to the Cell.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.CoveredCellInfo.RowSpan">
            <summary>
            Gets or sets RowSpan for the cell.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.DataColumnBase.InitializeColumnElement(System.Object,System.Boolean)">
            <summary>
            Prepares the Column element based on the Visible column 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.DataColumnBase.RaisePointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Raise the PointerPressed method in the selection controller
            </summary>
            <param name="args">An <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs">PointerRoutedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.DataColumnBase.RaisePointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Raise the pointer released method in selection controller.
            </summary>
            <param name="args">An <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs">PointerRoutedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.DataColumnBase.RaisePointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Raise the pointer moved method in cell selection controller.
            </summary>
            <param name="args">An <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs">PointerRoutedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.DataColumnBase.OnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs)">
            <summary>
            Raise OnTapped Method in Selection Controller
            </summary>
            <param name="e">TappedRoutedEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.DataColumnBase.OnDoubleTapped(Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs)">
            <summary>
            Raise OnDoubleTapped Method in Selection Controller
            </summary>
            <param name="e">DoubleTappedRoutedEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.DataColumnBase.OnInitializeColumnElement(System.Object,System.Boolean)">
            <summary>
            Prepares the Column element based on the Visible column 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.DataColumnBase.UpdateCellStyle">
            <summary>
            When we scroll the Grid vertically row's will be recycled. 
            While recycling we need to update the style info of all the cell's in old row.
            This property change call back will update the style info of all the cell element when the row index changed.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.DataColumnBase.UpdateBinding(System.Object,System.Boolean)">
            <summary>
            Method which is update the binding and style information of the 
            cell when we recycle the cell for scrolling.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.DataColumnBase.IsCurrentCell">
            <summary>
            Gets or sets a value indicating whether the current cell selection is visible or not..
            </summary>
            <value><see langword="true"/> if this instance ; otherwise, <see langword="false"/>.</value>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.DataColumn.OnInitializeColumnElement(System.Object,System.Boolean)">
            <summary>
            Prepares the Column element based on the Visible column 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.DataColumn.UpdateCellStyle">
            <summary>
            When we scroll the Grid vertically row's will be recycled. 
            While recycling we need to update the style info of all the cell's in old row.
            This property change call back will update the style info of all the cell element when the row index changed.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.DataColumn.UpdateBinding(System.Object,System.Boolean)">
            <summary>
            Method which is update the binding and style information of the 
            cell when we recycle the cell for scrolling.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.DataRow.UpdateRenderer(Syncfusion.UI.Xaml.Grid.DataColumnBase)">
            <summary>
            Update Renderer and UnloadUIElement if needed
            </summary>
            <param name="dataColumn"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.DataRow.UpdateUnBoundColumn">
            <summary>
            Update the value of UnBoundColumn
            </summary>
            <param name="dr"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.RowGenerator.UpdateBinding(Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Updates the Binding Information for the DataColumn, when Editor APIs are Changed
            </summary>
            <param name="dataContext">The data context.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.RowGenerator.RefreshStackedHeaders">
            <summary>
            Refreshing StackedHeaders after the changes in GridColumn collection
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.RowGenerator.CreateStackedCoveredCells(Syncfusion.UI.Xaml.Grid.SpannedDataRow,Syncfusion.UI.Xaml.Grid.StackedHeaderRow,System.Int32)">
            <summary>
            Create CoveredCells for the StackedHeaders
            </summary>
            <param name="sdr"></param>
            <param name="header"></param>
            <param name="rowIndex"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.RowGenerator.UpdateGroupExpander(Syncfusion.UI.Xaml.Grid.SpannedDataRow,Syncfusion.Data.Group)">
            <summary>
            Method which helps to update the expander position and expanded state
            </summary>
            <param name="row"></param>
            <param name="group"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.RowGenerator.UpdateCoveredRow(Syncfusion.UI.Xaml.Grid.SpannedDataRow,Syncfusion.Data.NodeEntry)">
            <summary>
            Method which helps to update the GroupCaption column index
            </summary>
            <param name="row"></param>
            <param name="group"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.RowGenerator.UpdateStackedheaderCoveredRow(Syncfusion.UI.Xaml.Grid.SpannedDataRow,System.Int32)">
            <summary>
            Update StackedHeader Covered Row after Grouping and UnGrouping
            </summary>
            <param name="row"></param>
            <param name="increasedIndexValue"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.RowGenerator.CheckForSelection(Syncfusion.UI.Xaml.Grid.DataRowBase)">
            <summary>
            Method which will ensure whether the row is selected or not.
            </summary>
            <param name="rowIndex">Corresponding Row Index</param>
            <returns>Whether row is selected or not</returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SpannedDataColumn.OnInitializeColumnElement(System.Object,System.Boolean)">
            <summary>
            Prepares the Column element based on the Visible column 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SpannedDataColumn.UpdateCellStyle">
            <summary>
            When we scroll the Grid vertically row's will be recycled. 
            While recycling we need to update the style info of all the cell's in old row.
            This property change call back will update the style info of all the cell element when the row index changed.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.SpannedDataColumn.UpdateBinding(System.Object,System.Boolean)">
            <summary>
            Method which is update the binding and style information of the 
            cell when we recycle the cell for scrolling.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GroupDropArea.GroupDropAreaText">
            <summary>
            Gets or sets the group drop area text.
            </summary>
            <value>The group drop area text.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GroupDropAreaItem.SortDirection">
            <summary>
            Gets or sets Path direction (Ascending/Descending).
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.AddNewRowInitiatingEventArgs">
            <summary>
            EventArgs for AddNewRowIntiating event.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.AddNewRowInitiatingEventArgs.NewObject">
            <summary>
            Get the new object created for AddNewRow
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.AddNewRowInitiatingEventHandler">
            <summary>
            Delegate for AddNewRowInitiating event.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.AutoScrollerValueChangedEventArgs">
            <summary>
            Provides data about AutoScroller update
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.AutoScrollerValueChangedEventArgs.IsLineLeft">
            <summary>
            Indicates Scrolling Left
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.AutoScrollerValueChangedEventArgs.IsLineRight">
            <summary>
            Indicates Scrolling Right
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.AutoScrollerValueChangedEventArgs.IsLineUp">
            <summary>
            Indicates Scrolling Up
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.AutoScrollerValueChangedEventArgs.IsLineDown">
            <summary>
            Indicates Scrolling down
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.AutoScrollOrientation">
            <summary>
            Specifies horizontal or vertical autoscrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.AutoScrollOrientation.None">
            <summary>
            No autoscrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.AutoScrollOrientation.Horizontal">
            <summary>
            Only horizontal autoscrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.AutoScrollOrientation.Vertical">
            <summary>
            Only vertical autoscrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.AutoScrollOrientation.Both">
            <summary>
            Both horizontal and vertical autoscrolling.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.AutoGenerateColumnsMode">
            <summary>
            Used to specify how columns are auto generated. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.AutoGenerateColumnsMode.Reset">
            <summary>
            Creates columns for all fields in a datasource, Retain the columns added by the user.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.AutoGenerateColumnsMode.RetainOld">
            <summary>
            Creates columns for all fields in a datasource if the grid doesn't contain any columns else retain old colmns.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.AutoGenerateColumnsMode.ResetAll">
            <summary>
            Creates columns for all fields in a datasource, and removing all old columns. 
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.AutoGenerateColumnsMode.None">
            <summary>
            Keep the columns that are defined in DataGrid.Columns
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.GridSelectionMode">
            <summary>
            Selection mode enum.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridSelectionMode.None">
            <summary>
            No items can be selected.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridSelectionMode.Single">
            <summary>
            Single selection is maintained. By clicking the corresponding row selection will happened.
            If you click on the other rows old selection will be cleared.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridSelectionMode.Multiple">
            <summary>
            Multiple items can be selected.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridSelectionMode.Extended">
            <summary>
            Multiple items can be selected, by using the SHIFT, CTRL, and
            arrow keys to make selections
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.GridLengthUnitType">
            <summary>
            ColumnSizer Enum
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.GridQueryBounds">
            <summary>
            Bound for Height and Width Enum
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridQueryBounds.Height">
            <summary>
            Queries height of cell.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridQueryBounds.Width">
            <summary>
            Queries width of cell.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.RowType">
            <summary>
            RowType enum
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.FocusManagerHelper.WantsKeyInputProperty">
            <summary>
            The handle template element property
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.FocusManagerHelper.GetFocusedUIElement(Windows.UI.Xaml.UIElement)">
            <summary>
            Generic method to get the child object
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.RowValidatingEventArgs.ErrorMessages">
            <summary>
            Gets or sets the Error messanges for validation.
            </summary>
            <value>Column's Mapping as Key and Error message as Value</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.RowValidatedEventArgs.ErrorMessages">
            <summary>
            Gets or sets the Error messanges for validation.
            </summary>
            <value>Column's Mapping as Key and Error message as Value</value>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.RecordDeletingEventHandler">
            <summary>
            Delegate for Record Deleting Event
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Grid.RecordDeletingEventArgs">RecordDeletingEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.RecordDeletingEventArgs">
            <summary>
            Class containing arguments for RecordsDeleting Event
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.RecordDeletingEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="N:Syncfusion.UI.Xaml.Grid.RecordDeletingEventArgs">RecordDeletingEventArgs</see> namespace. 
            </summary>
            <param name="originalSource"></param>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.RecordDeletingEventArgs.Items">
            <summary>
            Gets or sets the Deleting Items in the SfDataGrid.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.RecordDeletedEventHandler">
            <summary>
            Delegate for Record Deleted Event
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Grid.RecordDeletedEventArgs">RecordDeletedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.RecordDeletedEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="N:Syncfusion.UI.Xaml.Grid.RecordDeletedEventArgs">RecordDeletedEventArgs</see> namespace. 
            </summary>
            <param name="originalSource"></param>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.RecordDeletedEventArgs.Items">
            <summary>
            Gets or sets the Deleted Items in the SfDataGrid.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.RecordDeletedEventArgs.SelectedIndex">
            <summary>
            Gets or sets the CurrentCellIndex in the SfDataGrid.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridHandledEventArgs.Handled">
            <summary>
            Indicates whether the event has been handled and no further processing of the event should happen.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridIndexResolver.ResolveToRowIndex(Syncfusion.UI.Xaml.Grid.SfDataGrid,System.Int32)">
            <summary>
            Will return RowIndex when passing the resolved RecordIndex
            </summary>
            <param name="dataGrid"></param>
            <param name="recordIndex"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.GridItemsSourceChangedEventHandler">
            <summary>
            Delegate for ItemsSourceChanged Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Grid.GridItemsSourceChangedEventArgs">GridItemsSourceChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.GridItemsSourceChangedEventArgs">
            <summary>
            Class which contains the arguments for ItemsSourceChanged Event.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridItemsSourceChangedEventArgs.OldItemsSource">
            <summary>
            Property Which gets old ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridItemsSourceChangedEventArgs.NewItemsSource">
            <summary>
            Property Which gets new ItemsSource.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.ResizingColumnsEventArgs.ColumnIndex">
            <summary>
            Return the Column Index.
            </summary>
            <value>The index of the column.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.ResizingColumnsEventArgs.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.GridSelectionChangingEventHandler">
            <summary>
            Delegate for Selection Changing Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Grid.GridSelectionChangingEventArgs">GridSelectionChangingEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.GridSelectionChangingEventArgs">
            <summary>
            Class which contains the arguments for SelectionChanging Event.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSelectionChangingEventArgs.AddedItems">
            <summary>
            List of items which are going to add in SelectedItems
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSelectionChangingEventArgs.RemovedItems">
            <summary>
            List of items which are removed from SelectedItems.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.GridSelectionChangedEventHandler">
            <summary>
            Delegate for SelectionChanged event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.UI.Xaml.Grid.GridSelectionChangedEventArgs">GridSelectionChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.GridSelectionChangedEventArgs">
            <summary>
            Class which contains the Sarguments for SelectionChanged event.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSelectionChangedEventArgs.AddedItems">
            <summary>
            List of items which are added to SelectedItems
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSelectionChangedEventArgs.RemovedItems">
            <summary>
            List of items which are removed from SelectedItems.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSortColumnsChangedEventArgs.AddedItems">
            <summary>
            Gets the added items.
            </summary>
            <value>The added items.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSortColumnsChangedEventArgs.RemovedItems">
            <summary>
            Gets the removed items.
            </summary>
            <value>The removed items.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSortColumnsChangedEventArgs.Action">
            <summary>
            Gets the action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSortColumnsChangingEventArgs.AddedItems">
            <summary>
            Gets the added items.
            </summary>
            <value>The added items.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSortColumnsChangingEventArgs.RemovedItems">
            <summary>
            Gets the removed items.
            </summary>
            <value>The removed items.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSortColumnsChangingEventArgs.Action">
            <summary>
            Gets the action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSortColumnsChangingEventArgs.CancelScroll">
            <summary>
            Gets or sets a value indicating whether SfDataGrid should scroll to current selected item while sorting.
            </summary>
            <value><see langword="true"/> if ; otherwise, <see langword="false"/>.</value>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Helpers.StackedHeadersHelper.IntersectedChildColumn(Syncfusion.UI.Xaml.Grid.SfDataGrid,System.Collections.Generic.List{System.Int32},Syncfusion.UI.Xaml.Grid.StackedHeaderRow,Syncfusion.UI.Xaml.Grid.StackedColumn)">
            <summary>
            Gets the common Column in the same StackedHeaderRow
            </summary>
            <param name="childColumns"></param>
            <param name="header"></param>
            <param name="column"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Helpers.StackedHeadersHelper.GetHeightIncremeantationLimit(Syncfusion.UI.Xaml.Grid.SfDataGrid,Syncfusion.UI.Xaml.Grid.CoveredCellInfo,System.Int32)">
            <summary>
            Get RowSpan for the given covered cell and rowIndex
            </summary>
            <param name="currHeaderCell"></param>
            <param name="rowindex"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Helpers.StackedHeadersHelper.GetChildSequence(Syncfusion.UI.Xaml.Grid.SfDataGrid,Syncfusion.UI.Xaml.Grid.StackedColumn,System.Int32)">
            <summary>
            Get ChildSequence no respect to the GridColumns for ChildColumns in StackedHeaderRow
            </summary>
            <param name="column"></param>
            <param name="rowIndex"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Helpers.StackedHeadersHelper.GetStackedColumn(Syncfusion.UI.Xaml.Grid.SfDataGrid,System.String,System.Int32)">
            <summary>
            Gets StackedColumn corresponding to the given name and index
            </summary>
            <param name="columnName"></param>
            <param name="rowIndex"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Helpers.StackedHeadersHelper.CheckChildSequence(Syncfusion.UI.Xaml.Grid.SfDataGrid,System.Collections.Generic.List{System.Int32},Syncfusion.UI.Xaml.Grid.StackedHeaderRow,Syncfusion.UI.Xaml.Grid.StackedColumn)">
            <summary>
            Gets the childColumns for the given StackedColumn
            </summary>
            <param name="childColumns"></param>
            <param name="header"></param>
            <param name="column"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.InitializePopup">
            <summary>
            Initialize the Draggable popup
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.OnDraggablePopupClosed(System.Object,System.Object)">
            <summary>
            Calls on Popup closed
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.OnPopupContentPositionChanged(System.Double,System.Double,Windows.Foundation.Point,Windows.Foundation.Point)">
            <summary>
            Calls on popup position changed
            </summary>
            <param name="HorizontalDelta"></param>
            <param name="VerticalDelta"></param>
            <param name="mousePoint"></param>
            <param name="mousePointOverGrid"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.ShowDragIndication(Windows.Foundation.Rect,Windows.Foundation.Point,Windows.Foundation.Point)">
            <summary>
            Calls for show drag indicator for popup
            </summary>
            <param name="gridRect"></param>
            <param name="mousePoint"></param>
            <param name="mousePointOverGrid"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.GetArrowIndicatorLocation(Windows.Foundation.Rect,Windows.Foundation.Point,Syncfusion.UI.Xaml.Grid.GridColumn,Windows.Foundation.Point,System.Boolean@,System.Boolean@,System.Int32@)">
            <summary>
            Gets Arrow Indicator Location for Draggable popup
            </summary>
            <param name="gridRect"></param>
            <param name="mousePoint"></param>
            <param name="column"></param>
            <param name="mousePointOverGrid"></param>
            <param name="isPointerInGroupArea">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="canShowIndicators">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="indicatorColumnIndex"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.HidePopup">
            <summary>
            Hides the Draggable Popup
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.CloseDragIndication">
            <summary>
            Close the Drag arrow indication
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.PopupContentDroppedOnGroupDropArea(Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Popup dropped on Group Drop Area
            </summary>
            <param name="column"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.PopupContentDroppedOnHeaderRow(System.Int32,System.Int32)">
            <summary>
            Popup dropped on Header row
            </summary>
            <param name="oldIndex"></param>
            <param name="newColumnIndex"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.PopupContentDroppedOnGrid(Windows.Foundation.Point)">
            <summary>
            Popup dropped on DataGrid
            </summary>
            <param name="point"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.SuspendReverseAnimation(System.Boolean)">
            <summary>
            Suspends the reverse animation for the popup
            </summary>
            <param name="suspend">If set to <see langword="true"/>, then ; otherwise, .</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.OnPopupContentDropped(Windows.Foundation.Point,Windows.Foundation.Point)">
            <summary>
            Popup on dropped
            </summary>
            <param name="point"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.CanGroupColumn(Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Returns whether the column can be grouped or not
            </summary>
            <param name="column"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.CanDropColumn(Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Returns whether the column can be drop or not
            </summary>
            <param name="column"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.GetGroupDropAreaRect">
            <summary>
            Returns GroupDropAreaRect
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.GetPopupRect">
            <summary>
            Returns Popup Rect
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.GetHeaderRowRect">
            <summary>
            Returns HeaderRow Rect
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.CanResizeColumn(Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Returns whether the column can be resize or not
            </summary>
            <param name="column"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.SetPopupPosition(System.Int32)">
            <summary>
            Sets the popup position
            </summary>
            <param name="index"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.ShowPopup(System.Int32,Windows.Foundation.Rect,Windows.UI.Xaml.Input.Pointer)">
            <summary>
            Initiate the Popup to Drag And Drop.
            </summary>
            <param name="gridColumnIndex"></param>
            <param name="rect"></param>
            <param name="pointer"></param>
            <remarks></remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.PointToGridRegion(Windows.Foundation.Point)" -->
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.CanShowPopup(Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Decide the column can show popup or not.
            </summary>
            <param name="column"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.CreatePopupContent(Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Creates the Content for Draggable Popup.
            </summary>
            <param name="column"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.OnColumnHiddenChanged(Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Indicates the Hidden Property value changed for GridColumn.
            </summary>
            <param name="column"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or
            resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.PopupContentControl">
            <summary>
            Gets PopupContentControl for Drag and Drop.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.PopupMinWidth">
            <summary>
            Gets or sets Minimum Width for Draggable Popup.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.PopupMaxWidth">
            <summary>
            Gets or sets Maximum Width for Draggable Popup.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.PopupMinHeight">
            <summary>
            Gets or sets Minimum Height for Draggable Popup.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumnDragDropController.PopupMaxHeight">
            <summary>
            Gets or sets Maximum Height for Draggable Popup.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnResizingController.EnsureVSMOnColumnCollectionChanged(System.Int32,System.Int32)">
            <summary>
            Ensures the VSM for hidden columns OnGridColumnCollectionChanged
            </summary>
            <param name="OldStartingIndex"></param>
            <param name="NewStartingIndex"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnResizingController.HitTest(Windows.Foundation.Point,Windows.UI.Core.CoreCursorType@)">
            <summary>
            Returns the VisibleLine on the pointer hitting point
            </summary>
            <param name="point"></param>
            <param name="cursor"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.UI.Xaml.Grid.GridColumnResizingController.ComputeResizingWidth(Syncfusion.UI.Xaml.Grid.GridColumn,System.Double)" -->
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnResizingController.DoActionOnMouseMove(Windows.UI.Input.PointerPoint,Syncfusion.UI.Xaml.Grid.GridHeaderCellControl)">
            <summary>
            performs mouse move action on GridHeaderCellControl
            </summary>
            <param name="e">An <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs">PointerRoutedEventArgs</see> that contains the event data.</param>
            <param name="headerCell"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnResizingController.DoActionOnMouseUp(Windows.UI.Xaml.Input.PointerRoutedEventArgs,Syncfusion.UI.Xaml.Grid.GridHeaderCellControl)">
            <summary>
            Perfoms MouseUp operation on GridHeaderCellControl
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
            <param name="headerCell"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnResizingController.SetPointerCursor(Windows.UI.Core.CoreCursorType)">
            <summary>
            Sets the Cursor for the Pointer
            </summary>
            <param name="cursor"></param>
            <param name="headerCell"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnResizingController.OnPopupContentResizing(System.Boolean,System.Double)">
            <summary>
            Calls on popup resizing by touch
            </summary>
            <param name="IsinLeft">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="delta"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnResizingController.OnPopupContentResized(System.Boolean,System.Double)">
            <summary>
            calls popup resized by touch
            </summary>
            <param name="IsinLeft">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="delta"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnResizingController.ResizingColumn(System.Int32,System.Double)">
            <summary>
            perform Resizing column for given index and sets the width 
            </summary>
            <param name="index"></param>
            <param name="width"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnResizingController.SetColumnWidth(System.Int32,System.Double)">
            <summary>
            sets the width for column for given column index
            </summary>
            <param name="index"></param>
            <param name="width"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnResizingController.ProcessResizeStateManager(Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Applies the Hidden State VSM if the Column in hidden.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.AutoScroller">
            <summary>
            Provides automatic scrolling of content when the user drags the pressed
            mouse to an edge of the control.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.AutoScroller.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Grid.AutoScroller"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.AutoScroller.OnAutoScrollingChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.UI.Xaml.Grid.AutoScroller.AutoScrollingChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.AutoScroller.ResetInsideScrollMargins">
            <summary>
            Resets the <see cref="!:InsideScrollMargins"/> property to its default value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.AutoScroller.HScrollBar">
            <summary>
            Gets the state describing for the horizontal scroll bar.
            </summary>
            <value>The horizontal scroll bar state.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.AutoScroller.VScrollBar">
            <summary>
            Gets the state describing for the vertical scroll bar.
            </summary>
            <value>The vertical scroll bar state.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.AutoScroller.AutoScrolling">
            <summary>
            Disables or specifies the direction for automatic scrolling when the user drags
            the mouse cursor out of the scrolling area.
            </summary>
            <remarks>
            <list type="">
            <item>ScrollBars.None will disable scrolling.</item>
            <item>ScrollBars.Horizontal will enable horizontal scrolling.</item>
            <item>ScrollBars.Vertical will enable vertical scrolling.</item>
            <item>ScrollBars.Horizontal|ScrollBars.Vertical will enable both horizontal and vertical scrolling.</item>
            </list>
            </remarks>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Grid.AutoScroller.AutoScrollingChanged">
            <summary>
            Occurs when the AutoScrolling property is changed.
            </summary>
            <remarks>
            If you want to prevent autoscrolling, you should handle this event
            and reset the AutoScrolling property.
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.AutoScroller.AutoScrollBounds">
            <summary>
            Gets or sets the outer scrolling area. Typically the client area of the control.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.AutoScroller.InsideScrollBounds">
            <summary>
            Gets the inside scrolling area. The control will scroll if the user drags
            the mouse outside this area.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.AutoScroller.InsideScrollMargin">
            <summary>
            Gets or Sets the default margin for the scrolling area when the user moves the mouse to the margin 
            between InsideScrollBounds and AutoScrollBounds
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.AutoScroller.IntervalTime">
            <summary>
            sets the timer interval for auto scrolling.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridAddNewRowController.AddNew">
            <summary>
            Method which initiates the CurrentAddItem through View.AddNew() method.
            Method will called when the cell begin editing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridAddNewRowController.CancelAddNew">
            <summary>
            Method which helps to Cancell the CurrentAddItem, adding to the sourcecollection.
            Method will be called when press esc key twice.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridAddNewRowController.CommitAddNew(System.Boolean)">
            <summary>
            Method which helps to Commits the CurrentAddItem to the sourcecollection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridAddNewRowController.SetAddNewMode(System.Boolean)">
            <summary>
            Method which helps to Set the mode for AddNewRow water mark.
            </summary>
            <param name="inEdit"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridAddNewRowController.ResetAddNewRow(System.Boolean)">
            <summary>
            Method which helps to reset the AddNewRow after commiting or canceling.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridAddNewRowController.GetAddNewRowIndex">
            <summary>
            Method which helps to get the AddNewROw index in DataGrid.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.AddNewRowOperationHandle">
            <summary>
            Class which used as argument in SelectionController when performing AddNewRow operation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.AddNewRowOperationHandle.AddNewRowOperation">
            <summary>
            Get the AddNewRow position.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.AddNewRowOperationHandle.OperationArgs">
            <summary>
            Get the event argument regarding AddNewRow operation.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.AddNewRowOperation">
            <summary>
            Enum which descripes the Operation done in AddNewRow
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridQueryableCollectionViewWrapper.GetExpressionFunc(System.String)">
            <summary>
            Returns Expression Func for UnBoundColumns for Sorting and Grouping.
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridQueryableCollectionViewWrapper.GetUnboundFunc(System.String)">
            <summary>
            Gets UnBound Func Value for sorting and grouping
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridPagedCollectionViewWrapper.GetExpressionFunc(System.String)">
            <summary>
            Returns Expression Func for UnBoundColumns for Sorting and Grouping.
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridPagedCollectionViewWrapper.RefreshFilter">
            <summary>
            To handle the Excel Like Check box filtering.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridPagedCollectionViewWrapper.GetUnboundFunc(System.String)">
            <summary>
            Gets UnBound Func Value for sorting and grouping
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnSizer.InitializeColumnWPropertyChangedDelegate(Syncfusion.UI.Xaml.Grid.Columns)">
            <summary>
            Initialize Delegate for GridColumn
            </summary>
            <param name="columns"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnSizer.RefreshAll">
            <summary>
            Refresh ColumnWidth for each column
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnSizer.OnColumnPropertyChanged(Syncfusion.UI.Xaml.Grid.GridColumn,System.String)">
            <summary>
            Refresh all column width
            </summary>
            <remarks>invokes when ColumnSizer,Width changed for GridColumn</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnSizer.SetSizerWidth(System.Double)">
            <summary>
            Set Width according to ColumnSizer
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnSizer.SetNoneWidth(System.Collections.Generic.IEnumerable{Syncfusion.UI.Xaml.Grid.GridColumn})">
            <summary>
            Set Width for column when ColumnSizer is set to None
            </summary>
            <param name="remainingColumns"></param>
            <remarks></remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.UI.Xaml.Grid.GridColumnSizer.SetColumnWidth(Syncfusion.UI.Xaml.Grid.GridColumn,System.Double)" -->
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnSizer.SetSizeToHeaderWidth(Syncfusion.UI.Xaml.Grid.GridColumn,System.Boolean)">
            <summary>
            Calculate Width for column when ColumnSizer is SizeToHeader
            </summary>
            <param name="column"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnSizer.SetSizeToCellsWidth(Syncfusion.UI.Xaml.Grid.GridColumn,System.Boolean)">
            <summary>
            Calculate Width for Column When Column Sizer is SizeToCells
            </summary>
            <param name="column"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnSizer.GetWidthBasedOnIndexHeader(Syncfusion.UI.Xaml.Grid.GridColumn,System.Double)">
            <summary>
            Calculate width for header based on given column
            </summary>
            <param name="column"></param>
            <param name="resultWidth"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnSizer.GetWidthBasedOnIndexCell(Syncfusion.UI.Xaml.Grid.GridColumn,System.Double)">
            <summary>
            Calculate width for Cells based on given column
            </summary>
            <param name="column"></param>
            <param name="resultWidth"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnSizer.MeasureHeaderText(Windows.Foundation.Size,System.String,Syncfusion.UI.Xaml.Grid.GridQueryBounds,Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Measure Size For HeaderCell
            </summary>
            <param name="rectangle"></param>
            <param name="displayText"></param>
            <param name="queryBound"></param>
            <param name="column"></param>
            <returns></returns>
            <remarks>calculation based on text diplayed on header</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnSizer.MeasureText(Windows.Foundation.Size,System.String,Syncfusion.UI.Xaml.Grid.GridQueryBounds,System.Boolean,Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Measure Size for Cell
            </summary>
            <param name="rectangle"></param>
            <param name="displayText"></param>
            <param name="queryBound"></param>
            <param name="cell">If set to <see langword="true"/>, then ; otherwise, .</param>
            <returns></returns>
            <remarks>calculation based on text diplayed on Cell</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnSizer.CheckForStarColumn(Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Check for Existance of ColumnSizer Star for given Column
            </summary>
            <param name="col"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnSizer.CheckAutoWithLastColumnFill(Syncfusion.UI.Xaml.Grid.GridColumn,Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Checks for AutoWithLastColumnFill column
            </summary>
            <param name="column"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnSizer.SetStarWidth(System.Double,System.Collections.Generic.IEnumerable{Syncfusion.UI.Xaml.Grid.GridColumn})">
            <summary>
            Set Star Width for Columns
            </summary>
            <param name="remainingColWidth"></param>
            <param name="remCols"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnSizer.OnUnBoundPropertiesChanged(Syncfusion.UI.Xaml.Grid.GridUnBoundColumn)">
            <summary>
            Refresh UnBoundColumn value
            </summary>
            <param name="column"></param>
            <remarks>invokes when Unbound Expression,Format changedS</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumnSizer.InitializeUnboundColumnPropertiesDelegate(Syncfusion.UI.Xaml.Grid.Columns)">
            <summary>
            Initialize UnBoundColumnProperties delegate
            </summary>
            <param name="columns"></param>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridColumn.AllowEditingProperty">
            <summary>
            Dependency registration for AllowEditing Property
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridColumn.AllowFocusProperty">
            <summary>
            Dependency registration for AllowFocus Property
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridColumn.PaddingProperty">
            <summary>
            Dependency registration for Padding Property
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumn.OnUpdateBindingInfo(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Updates the Binding for the GridColumn
            </summary>
            <param name="d">The command.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumn.OnGridColumnSizerChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for GridColumnSizer property.
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumn.OnHeaderTemplateChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for HeaderTemplate property.
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumn.OnCellStyleChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for CellStyle property.
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumn.OnCellStyleSelectorChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for CellStyleSelector property.
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumn.OnHeaderStyleChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for HeaderStyle property.
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumn.OnWidthChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for Width property.
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumn.OnIsHiddenChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for IsHidden property.
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumn.OnMaximumWidthChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for MaximumWidth property.
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumn.OnAllowSortChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for AllowSorting property.
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumn.OnMappingNameChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Mapping Name is changed for GridColumns.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridColumn.OnMinimumWidthChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for MinimumWidth property.
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumn.AllowEditing">
            <summary>
            Gets or sets whether the visible column can be Edited.
            </summary>
            <value>DataTemplate</value>
            <remarks>This is a Dependency property</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumn.AllowFocus">
            <summary>
            Gets or sets whether the visible column is enabled or not
            </summary>
            <value>DataTemplate</value>
            <remarks>This is a Dependency property</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumn.Padding">
            <summary>
            Gets or sets Padding for the Column
            </summary>
            <value>DataTemplate</value>
            <remarks>This is a Dependency property</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumn.CellStyle">
            <summary>
            Gets or sets the style that is used when rendering the data grid cells of the defined Column.
            </summary>
            <value>Style</value>
            <remarks>Whether defined as an inline style or as a resource, the Style defines the appearance of cells in the SfDataGrid, 
            and should specify a TargetType of GridCell. You typically specify setters for individual properties, 
            and might also use a setter for the Template property if you wanted to change the composition of elements. 
            For information that can help you decide whether to define styles inline or as resources, see Inline Styles and Templates.</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumn.CellStyleSelector">
            <summary>
            Gets or sets the StyleSelector for the GridCell of the defined Column.
            </summary>
            <value>StyleSelector</value>
            <remarks>Style which is to be choosed based on some condition given by the user and it is applied to GridCell of the defined Column</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumn.HeaderStyle">
            <summary>
            Gets or sets the style that is used when rendering the row header of the defined column.
            </summary>
            <value>Style</value>
            <remarks>Whether defined as an inline style or as a resource, the Style defines the appearance of Header cells in the SfDataGrid, 
            and should specify a TargetType of GridDataHeaderCellControl. You typically specify setters for individual properties, 
            and might also use a setter for the Template property if you wanted to change the composition of elements. 
            For information that can help you decide whether to define styles inline or as resources, see Inline Styles and Templates.</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumn.HeaderTemplate">
            <summary>
            Gets or sets a template used to display the header of the current Column.
            </summary>
            <value>DataTemplate</value>
            <remarks>This is a dependency property</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumn.TextAlignment">
            <summary>
            Gets or Sets Horizontal Alignment Property for the Text
            </summary>
            <value>DataTemplate</value>
            <remarks>This is a Dependency Property</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumn.HorizontalHeaderContentAlignment">
            <summary>
            Gets or Sets Horizontal Content Alignment Property for Header
            </summary>
            <value>DataTemplate</value>
            <remarks>This is a Dependency Property</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumn.AllowSorting">
            <summary>
            Gets or sets a value indicating whether the GridColumn can Sort or not.
            </summary>
            <value><see langword="true"/> if ; otherwise, <see langword="false"/>.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumn.ColumnSizer">
            <summary>
            Gets or sets ColumnSizer.
            </summary>
            <value></value>
            <remarks>Width set for column according to the value</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumn.Width">
            <summary>
            Gets or sets Width.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumn.IsHidden">
            <summary>
            Gets or sets a value indicating whether this instance has to Hide or Not.
            </summary>
            <value><see langword="true"/> if this instance ; otherwise, <see langword="false"/>.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumn.ActualWidth">
            <summary>
            Gets ActualWidth.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumn.MaximumWidth">
            <summary>
            Gets or sets MaximumWidth.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumn.MinimumWidth">
            <summary>
            Gets or sets MinimumWidth.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumn.AllowDragging">
            <summary>
             Gets or sets a value indicating whether [allow drag].
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumn.AllowGrouping">
            <summary>
            Gets or sets a value indicating whether [allow group].
            </summary>
            <value><c>true</c> if [allow group]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumn.AllowResizing">
            <summary>
             Gets or sets a value indicating whether [allow resize].
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumn.FilterPredicates">
            <summary>
            Gets or sets the filters.
            </summary>
            <value>The filters.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridColumn.FilterBehavior">
            <summary>
            Gets or sets the Filter Behavior.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Columns.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Grid.GridColumns">GridColumns</see> class. 
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridTemplateColumn.HorizontalAlignmentProperty">
            <summary>
            The horizontal alignment property
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridTemplateColumn.OnCellTemplateSelectorChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for CellTemplateSelector property.
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridTemplateColumn.OnCellTemplateChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Dependency call back for CellTemplate property.
            </summary>
            <param name="d"></param>
            <param name="e">An <see cref="T:Windows.UI.Xaml.DependencyPropertyChangedEventArgs">DependencyPropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridTemplateColumn.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment.
            </summary>
            <value>
            The horizontal alignment.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridTemplateColumn.CellTemplate">
            <summary>
            Gets or sets the Cell Template describes the all the GirdCells of the defined Column.
            </summary>
            <value>DataTemplate</value>
            <remarks>This is a Dependency property</remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridTemplateColumn.CellTemplateSelector">
            <summary>
            Gets or sets the Cell Template Selector for the GridCell of the defined Column.
            </summary>
            <value>DataTemplateSelector</value>
            <remarks>This Describes the cell Template based on Some condition which is given by the user and is to applied on the GridCell of the defined Column. </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridTextColumnBase.TextTrimming">
            <summary>
            Gets or sets the Text Trimming for Grid Column.
            </summary>
            <value>
            The text trimming.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridTextColumnBase.TextWrapping">
            <summary>
            Gets or Sets how GridColumn should wrap the Text
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridTextColumn.IsSpellCheckEnabled">
            <summary>
            Gets or Sets whether spell check is enabled or not
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridComboBoxColumn.SelectedValuePathProperty">
            <summary>
            Dependency Registration for SelectedValuePath
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridComboBoxColumn.ItemsSourceProperty">
            <summary>
            Dependency Registration for ItemsSource
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridComboBoxColumn.DisplayMemberPathProperty">
            <summary>
            Dependency Registration for ItemsSource
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridComboBoxColumn.SelectedValuePath">
            <summary>
            Gets or sets the path that is used to get the SelectedValue from the SelectedItem.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridComboBoxColumn.ItemsSource">
            <summary>
            Gets or sets a collection used to generate the content.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridComboBoxColumn.DisplayMemberPath">
            <summary>
            Gets or sets a collection used to generate the content.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridComboBoxColumn.ItemTemplate">
            <summary>
            Gets or sets Item Template for GridComboBox Column
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridImageColumn.StretchProperty">
            <summary>
            Dependency Registration for Stretch
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridImageColumn.StretchDirectionProperty">
            <summary>
            Dependency Registration for Stretch
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.UI.Xaml.Grid.GridImageColumn.Stretch" -->
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.UI.Xaml.Grid.GridImageColumn.StretchDirection" -->
        <member name="F:Syncfusion.UI.Xaml.Grid.GridNumericColumn.BlockCharactersOnTextInputProperty">
            <summary>
            The block characters on text input property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridNumericColumn.FormatStringProperty">
            <summary>
            The format string property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridNumericColumn.ParsingModeProperty">
            <summary>
            The parsing mode property
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridNumericColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Grid.GridNumericColumn"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridNumericColumn.BlockCharactersOnTextInput">
            <summary>
            Gets or sets a value indicating whether [block characters on text input].
            </summary>
            <value>
            <c>true</c> if [block characters on text input]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridNumericColumn.FormatString">
            <summary>
            Gets or sets the format string.
            </summary>
            <value>
            The format string.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridNumericColumn.ParsingMode">
            <summary>
            Gets or sets the parsing mode.
            </summary>
            <value>
            The parsing mode.
            </value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridUpDownColumn.BlockCharactersOnTextInputProperty">
            <summary>
            The block characters on text input property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridUpDownColumn.StepProperty">
            <summary>
            The step property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridUpDownColumn.MinValueProperty">
            <summary>
            The min value property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridUpDownColumn.MaxValueProperty">
            <summary>
            The max value property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridUpDownColumn.NumberDecimalDigitsProperty">
            <summary>
            The number decimal digits property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridUpDownColumn.AutoReverseProperty">
            <summary>
            The auto reverse property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridUpDownColumn.FormatStringProperty">
            <summary>
            The format string property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.GridUpDownColumn.ParsingModeProperty">
            <summary>
            The parsing mode property
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridUpDownColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Grid.GridUpDownColumn"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridUpDownColumn.BlockCharactersOnTextInput">
            <summary>
            Gets or sets a value indicating whether [block characters on text input].
            </summary>
            <value>
            <c>true</c> if [block characters on text input]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridUpDownColumn.Step">
            <summary>
            Gets or sets the step.
            </summary>
            <value>
            The step.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridUpDownColumn.MinValue">
            <summary>
            Gets or sets the min value.
            </summary>
            <value>
            The min value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridUpDownColumn.MaxValue">
            <summary>
            Gets or sets the max value.
            </summary>
            <value>
            The max value.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridUpDownColumn.NumberDecimalDigits">
            <summary>
            Gets or sets the number decimal digits.
            </summary>
            <value>
            The number decimal digits.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridUpDownColumn.AutoReverse">
            <summary>
            Gets or sets a value indicating whether [auto reverse].
            </summary>
            <value>
              <c>true</c> if [auto reverse]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridUpDownColumn.FormatString">
            <summary>
            Gets or sets the format string.
            </summary>
            <value>
            The format string.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridUpDownColumn.ParsingMode">
            <summary>
            Gets or sets the parsing mode.
            </summary>
            <value>
            The parsing mode.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridUpDownColumn.SmallChange">
            <summary>
            Gets or sets a Small Change.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridUpDownColumn.LargeChange">
            <summary>
            Gets or sets a Large Change.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridHyperlinkColumn.HorizontalAlignment">
            <summary>
            Gets or Sets Horizontal alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridHyperlinkColumn.VerticalAlignment">
            <summary>
            Gets or Sets Vertical alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridDataGroupColumn.ColumnName">
            <summary>
            Gets or sets the Column Name for grouping
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridDataGroupColumn.Converter">
            <summary>
            Gets or sets the converter for Custom grouping.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.OnViewCurrentChanged(System.Object,System.Object)">
            <summary>
            Method which helps to Syncronnize the CurrentItem between view and DataGrid.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.SortComparers_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Event Hooks whenever the Sort comparer's Collection changed.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs">NotifyCollectionChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.OnRecordCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Event Hooks whenever collection changed while sorting is present
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs">NotifyCollectionChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.MakeSort(Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            All Sorting Operation Done Here Except for TriState Condition
            </summary>
            <param name="column"></param>
            <param name="direction"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.RefreshDataRow(System.Int32,System.Boolean)">
            <summary>
            Method which helps to refresh the rows from the corresponding row index.
            </summary>
            <param name="fromRowIndex"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.ResetRowIndex(Syncfusion.UI.Xaml.Grid.DataRowBase)">
            <summary>
            reseting row index except header
            </summary>
            <param name="dr"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.RefreshView">
            <summary>
            Method which helps to update the View.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.ShowSortNumbers">
            <summary>
            Helps to make numbering for sorted column
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.CollapseSortNumber">
            <summary>
            Collapse the sort number visibility when ShowSortNumber property sets false
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.ChangeSortIconVisibility(Syncfusion.UI.Xaml.Grid.GridColumn,System.Object,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Change SortIcon Visibility On Collection changed
            </summary>
            <param name="column"></param>
            <param name="e">An <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs">NotifyCollectionChangedEventArgs</see> that contains the event data.</param>
            <remarks>Icon Visibility Changed according the collection change</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.GroupBy(System.String,Windows.UI.Xaml.Data.IValueConverter)">
            <summary>
            Method which is helps to made the group by passing the column name
            </summary>
            <param name="columnName"></param>
            <param name="converter"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.InitializeGrouping">
            <summary>
            Add the initial Groupdescription to GropDropArea
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.GroupBy(System.String,System.Int32,Windows.UI.Xaml.Data.IValueConverter)">
            <summary>
            Method which is helps to made the group by passing the column name
            </summary>
            <param name="columnName"></param>
            <param name="converter"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.RemoveGroup(System.String)">
            <summary>
            Method which is helps to remove the grouping by passing the corresponding column name.
            </summary>
            <param name="columnName"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.ExpandGroupsAtLevel(System.Collections.Generic.List{Syncfusion.Data.Group},System.Int32)">
            <summary>
            Method which helps to expand all the groups in Specific level
            </summary>
            <param name="groups"></param>
            <param name="groupLevel"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.CollapseGroupsAtLevel(System.Collections.Generic.List{Syncfusion.Data.Group},System.Int32)">
            <summary>
            Method which helps to collapse all the groups in Specific level
            </summary>
            <param name="groups"></param>
            <param name="groupLevel"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.ExpandGroup(Syncfusion.Data.Group)">
            <summary>
            Method which helps to expand the specific group by paasing the corresponding group
            </summary>
            <param name="group"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.CollapseGroup(Syncfusion.Data.Group)">
            <summary>
            Method which helps to collapse the specific group by paasing the corresponding group
            </summary>
            <param name="group"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.ResetColumns">
            <summary>
            Method which helps to reset the column count and column indexes when group added or removed
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.Suspend">
            <summary>
            Method helps to suspand all the collection change update when doing grouping operatrions 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.Resume">
            <summary>
            Method helps to suspand all the collection change update when doing grouping operatrions 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.GetSortColumnsNotInGroupColumns">
            <summary>
            Method which helps to get the SortColumn which are not in the GroupedColumns
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.GetSortDescriptionNotInGroupDescription">
            <summary>
            Method which helps to get the unavailable sort description which property names is not in group description
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.CheckForExistingGroupDescription(System.String)">
            <summary>
            Check whether the GroupDescription is already present in Groupdescriptions or not
            </summary>
            <param name="columnName"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.CheckForExistingGroupColumn(System.String)">
            <summary>
            Check whethe the corresponding column name already present in GropColumns  or not.
            </summary>
            <param name="columnName"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.OnGroupColumnDescriptionsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Method which helps to update the view when  change the GroupColumn collection
            </summary>
            <param name="e">An <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs">NotifyCollectionChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.OnGroupDescriptionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Method which helps to update the view when  change the GroupDescription collection
            </summary>
            <param name="e">An <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs">NotifyCollectionChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.OnRecordPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Method which helps to update the TableSummary Values when  change the Record Property Change
            </summary>
            <param name="e">An <see cref="T:System.ComponentModel.PropertyChangedEventArgs">PropertyChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.OnTableSummaryRowsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Method which helps to update the view when  change the Table Summary Rows collection
            </summary>
            <param name="e">An <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs">NotifyCollectionChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.OnSummaryRowsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Method which helps to update the view when  change the SummaryRows collection
            </summary>
            <param name="e">An <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs">NotifyCollectionChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridModel.OnCaptionSummaryRowChanged(Syncfusion.UI.Xaml.Grid.GridSummaryRow)">
            <summary>
            Method which helps to update the view when change the Caption Summary Row
            </summary>
            <param name="row"></param>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSummaryColumn.CustomAggregate">
            <summary>
            Gets or sets the Custom Aggregate for Custom summaries
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSummaryColumn.Format">
            <summary>
            Gets or sets the Format should show in summary
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSummaryColumn.MappingName">
            <summary>
            Gets or sets the Column Maping name
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSummaryColumn.Name">
            <summary>
            Gets or sets Name of Summary Column
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSummaryColumn.SummaryType">
            <summary>
            Gets or sets Summary Type
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSummaryRow.Name">
            <summary>
            Gets or sets Name of Summary Row
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSummaryRow.ShowSummaryInRow">
            <summary>
            Gets or sets a value indicating whether Summary Should show in row or column
            </summary>
            <value><see langword="true"/> if ; otherwise, <see langword="false"/>.</value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSummaryRow.SummaryColumns">
            <summary>
            Gets the Summary Column Collection.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSummaryRow.Title">
            <summary>
            Gets or sets the Title
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridUnBoundColumn.ComputedValue(System.Object)">
            <summary>
            Gets Computed value for expression in UnBoundColumn
            </summary>
            <param name="record"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.CalulationExtensions.GetCompiledExpression(System.Object,System.Boolean,System.String,Syncfusion.UI.Xaml.Grid.ExpressionError@)">
            <summary>
            Gets Compiled Expression
            </summary>
            <param name="source"></param>
            <param name="caseSensitive">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="formula"></param>
            <param name="error"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.CalulationExtensions.GetSimpleExpression(System.Object,System.Boolean,System.String,System.Linq.Expressions.ParameterExpression,Syncfusion.UI.Xaml.Grid.ExpressionError@)">
            <summary>
            Get SimpleExpression
            </summary>
            <param name="source"></param>
            <param name="caseSensitive">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="formula"></param>
            <param name="paramExp"></param>
            <param name="error"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.CalulationExtensions.CompileToExpression(System.Object,System.Linq.Expressions.ParameterExpression,System.Boolean,System.String@,System.Char[],System.Char[],Syncfusion.UI.Xaml.Grid.ExpressionError@)">
            <summary>
            Compile to Expression
            </summary>
            <param name="source"></param>
            <param name="paramExp"></param>
            <param name="caseSensitive">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="formula"></param>
            <param name="operations"></param>
            <param name="allOperations"></param>
            <param name="error"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.CalulationExtensions.CoerceType(System.Linq.Expressions.Expression@,System.Linq.Expressions.Expression@,Syncfusion.UI.Xaml.Grid.ExpressionError@)">
            <summary>
            Casting the type according to the expression
            </summary>
            <param name="leftExp"></param>
            <param name="rightExp"></param>
            <param name="error"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.CalulationExtensions.GetExpression(System.Object,System.Boolean,System.Linq.Expressions.ParameterExpression,System.String,System.String,System.Char,Syncfusion.UI.Xaml.Grid.ExpressionError@)">
            <summary>
            Gets Expression
            </summary>
            <param name="source"></param>
            <param name="caseSensitive">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="paramExp"></param>
            <param name="left"></param>
            <param name="right"></param>
            <param name="operand"></param>
            <param name="error"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.CalulationExtensions.GetFunctionName(System.Char)">
            <summary>
            Gets function name
            </summary>
            <param name="c"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.CalulationExtensions.GetExpressionPiece(System.Object,System.Boolean,System.Linq.Expressions.ParameterExpression,System.String,Syncfusion.UI.Xaml.Grid.ExpressionError@)">
            <summary>
            Gets Expression piece
            </summary>
            <param name="source"></param>
            <param name="caseSensitive">If set to <see langword="true"/>, then ; otherwise, .</param>
            <param name="paramExp"></param>
            <param name="piece"></param>
            <param name="error"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.CalulationExtensions.TokenizeStrings(System.String,Syncfusion.UI.Xaml.Grid.ExpressionError@)">
            <summary>
            Tokenize the strings
            </summary>
            <param name="formula"></param>
            <param name="error"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridVirtualizingCollectionView.GetExpressionFunc(System.String)">
            <summary>
            Returns Expression Func for UnBoundColumns for Sorting and Grouping.
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridVirtualizingCollectionView.GetUnboundFunc(System.String)">
            <summary>
            Gets UnBound Func Value for sorting and grouping
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GroupColumnDescription.ColumnName">
            <summary>
            Gets or sets the Column Name for grouping
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GroupColumnDescription.Converter">
            <summary>
            Gets or sets the converter for Custom grouping.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.SortColumnDescription.SortDirectionProperty">
            <summary>
            DependencyProperty for <see cref="!:GridDataSortColumn.SortDirection"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SortColumnDescription.ColumnName">
            <summary>
            Gets or sets the name of the column.
            </summary>
            <value>The name of the column.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SortColumnDescription.SortDirection">
            <summary>
            Gets or sets the sort direction.
            </summary>
            <value>The direction.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.VisualContainer.VerticalScrollBarOffsetProperty">
            <summary>
            The vertical offset property
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Grid.VisualContainer.HortizontalScrollBarOffsetProperty">
            <summary>
            The hortizontal offset property
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.VisualContainer.WireEvents">
            <summary>
            Wires the events.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.VisualContainer.UnWireEvents">
            <summary>
            UnWires the scroll viewer events.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.VisualContainer.OnContainerKeyDown(System.Object,Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Containers the key down.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.VisualContainer.OnContainerOnManipulationDelta(System.Object,Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs)">
            <summary>
            Containers the on manipulation delta.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.VisualContainer.OnContainerPointerWheelChanged(System.Object,Windows.UI.Xaml.Input.PointerRoutedEventArgs)">
            <summary>
            Called when [container pointer wheel changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.PointerRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.VisualContainer.OnScrollOwnerLoaded(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Called when Scroll owner loaded.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.VisualContainer.PointToCellRowColumnIndex(Windows.Foundation.Point)">
            <summary>
            Determines the cell under the mouse location.
            </summary>
            <param name="p">The point in client coordinates.</param>
            <returns>
            The cells row and column index under the mouse location.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.VisualContainer.RangeToRect(Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisRegion,Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisRegion,Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,System.Boolean,System.Boolean)">
            <summary>
            For internal use.
            </summary>
            <param name="rowRegion">Scroll axis region for row.</param>
            <param name="columnRegion">Scroll axis region for column.</param>
            <param name="range">Cell range.</param>
            <param name="allowEstimatesForOutOfViewRows">If set to true, allows estimate for out of view rows.</param>
            <param name="allowEstimatesForOutOfViewColumns">If set to true, allows estimate for out of view columns.</param>
            <returns>Visible rectangle for the given range.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.VisualContainer.GetClipRect(Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisRegion,Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisRegion)">
            <summary>
            Gets the clipping bounds for the specified row and column region.
            </summary>
            <param name="rowRegion">The row region.</param>
            <param name="columnRegion">The column region.</param>
            <returns>A <see cref="T:Windows.Foundation.Rect"/> with clipping bounds.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.VisualContainer.OnItemSourceChanged">
            <summary>
            Clearing Children
            </summary>
            <remarks>
            Row Generator items are cleared when itemsSource Changed so Child should be clear
            </remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.VisualContainer.VerticalScrollBarOffset">
            <summary>
            Gets or sets the vertical offset.
            </summary>
            <value>
            The vertical offset.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.VisualContainer.HortizontalScrollBarOffset">
            <summary>
            Gets or sets the hortizontal offset.
            </summary>
            <value>
            The hortizontal offset.
            </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectedCellsInfo.#ctor">
            <summary>
            Default constructor to insitialize the column collection as 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectedCellsInfo.HasColumn(Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Checks whether the given column is present in selected column collection.
            </summary>
            <param name="column"> GridColumn to find. </param>
            <returns> True if column is present, false if not. </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSelectedCellsInfo.RowData">
            <summary>
            Gets or sets information describing the row.
            </summary>
            <value>Information describing the row. </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSelectedCellsInfo.ColumnCollection">
            <summary>
            Gets a collection of selected columns.
            </summary>
            <value> A Collection of selected columns. </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSelectedCellsInfo.CoveredRowIndex">
            <summary>
            Gets or sets the zero-based index of the covered row.
            </summary>
            <value> The row index when the row is not a data row. </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSelectedCellsInfo.IsDataRow">
            <summary>
            Gets a value indicating whether this object is data row.
            </summary>
            <value> True if this object is data row, false if not. </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellInfo.#ctor(Syncfusion.UI.Xaml.Grid.GridColumn,System.Object,System.Int32)">
            <summary>
            Constructor to intialize the column, rowdata and row index for summary row.
            </summary>
            <param name="column"> Selected column. </param>
            <param name="rowData"> Information describing the row. </param>
            <param name="rowIndex"> (Optional) zero-based index of the summary row. </param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridCellInfo.Column">
            <summary>
            Gets or sets the column.
            </summary>
            <value> The GridColumn. </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridCellInfo.RowData">
            <summary>
            Gets or sets information describing the row.
            </summary>
            <value> Information describing the row. </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridCellInfo.IsDataRowCell">
            <summary>
            Gets a value indicating whether this object is data row cell.
            </summary>
            <value> True if this object is data row cell, false if not. </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.IGridSelectionController">
            <summary>
            Interface which contains the API's and Methods for Selections in SfDataGrid 
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.IGridSelectionController.HandleGridOperations(Syncfusion.UI.Xaml.Grid.GridOperationsHandle)">
            <summary>
            Method which is called while doing Sorting,Filtering,Grouping,Paging and Pasting operations.
            </summary>
            <param name="args">argument contains the Operation type and Operation arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.IGridSelectionController.HandlePointerOperations(Syncfusion.UI.Xaml.Grid.GridPointerEventArgs,Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Method which is called when doing Pointer operations like Pressed,Released,Tapped and Double Tapped.
            </summary>
            <param name="args">args containd the Pointer operation type, Pointer event args</param>
            <param name="rowColumnIndex">Row column index of the cell which has been clicked.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.IGridSelectionController.HandleSelectionPropertyChanges(Syncfusion.UI.Xaml.Grid.SelectionPropertyChangeHandle)">
            <summary>
            Method which called when Selection properties like SelectedIndex,SelectedItem and SelectionMode property changed.
            </summary>
            <param name="handle">Handle which contains the values of changed property</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.IGridSelectionController.HandleCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,Syncfusion.UI.Xaml.Grid.CollectionChangedReason)">
            <summary>
            Method which called when the collections like SelectedItems, Columns and DataSource changed.
            </summary>
            <param name="e">Collection Changed Event Args</param>
            <param name="reason">Which collection has changed</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.IGridSelectionController.HandleGroupExpandCollapse(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Method which called when the Group Expand or Collapsed
            </summary>
            <param name="index">Group Row Index</param>
            <param name="count">Number of rows collapsed or Expanded</param>
            <param name="isExpanded">Whether Expanded or collapsed</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.IGridSelectionController.SelectRows(System.Int32,System.Int32)">
            <summary>
            Method which helps to select the rows between start and end index
            </summary>
            <param name="startRowIndex">Row start index</param>
            <param name="endRowIndex">Row end index</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.IGridSelectionController.SelectAll">
            <summary>
            Method which helps to select all the rows.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.IGridSelectionController.ClearSelections(System.Boolean)">
            <summary>
            Method which helps to clear the selection in Grid.
            </summary>
            <param name="exceptCurrentRow">Flag which decides whether Current row selection should remove or not</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.IGridSelectionController.MoveCurrentCell(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,System.Boolean)">
            <summary>
            Method whcih helps to move the Current row selection to certain Row Column index.
            </summary>
            <param name="rowColumnIndex">Corresponding Row and Column index where the selection to move.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.IGridSelectionController.HandleDetailsViewGridKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Method which handles the DetailsViewGrid key down.
            </summary>
            <param name="args">Corresponding KeyEvent argument</param>
            <returns>return whether the key down handled by grid or not.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.IGridSelectionController.HandleKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Method which helps to handle the selection in DataGrid.
            </summary>
            <param name="args">Corresponding Key Event Args</param>
            <returns>return whether the key down handled by grid or not.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.IGridSelectionController.SelectedRows">
            <summary>
            Property which contains the collection of Selected RowIndexes in SfDataGrid.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.IGridSelectionController.RowSelectionBrush">
            <summary>
            Property which Get or set the Brush value for Selection in DataRow
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.IGridSelectionController.GroupRowSelectionBrush">
            <summary>
            Property which Get or set the Brush value for Selection in Group Header and Summaries.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.IGridSelectionController.RowHoverBackgroundBrush">
            <summary>
            Property which Get or Set the Brush value for RowHover Highliting.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.IGridSelectionController.CurrentCellManager">
            <summary>
            Property which helps to Get the CurrentCell Manager of SfDataGrid
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.HandleGridOperations(Syncfusion.UI.Xaml.Grid.GridOperationsHandle)">
            <summary>
            Method which is called while doing Sorting,Filtering,Grouping,Paging and Pasting operations.
            </summary>
            <param name="args"> Argument contains the Operation type and Operation arguments. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.HandlePointerOperations(Syncfusion.UI.Xaml.Grid.GridPointerEventArgs,Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Method which is called when doing Pointer operations like Pressed,Released,Tapped and Double Tapped.
            </summary>
            <param name="args"> args containd the Pointer operation type, Pointer event args </param>
            <param name="rowColumnIndex"> Row column index of the cell which has been clicked. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.HandleSelectionPropertyChanges(Syncfusion.UI.Xaml.Grid.SelectionPropertyChangeHandle)">
            <summary>
            Method which called when Selection properties like CurrenttItem and SelectionMode property changed.
            </summary>
            <param name="handle"> Handle which contains the values of changed property. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.HandleCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,Syncfusion.UI.Xaml.Grid.CollectionChangedReason)">
            <summary>
            Method which called when the collections like Columns and DataSource changed.
            </summary>
            <param name="e">Collection Changed Event Args</param>
            <param name="reason">Which collection has changed</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.HandleGroupExpandCollapse(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Method which called when the Group Expand or Collapsed
            </summary>
            <param name="index">Group Row Index</param>
            <param name="itemsCount">Number of rows collapsed or Expanded</param>
            <param name="isExpanded">Whether Expanded or collapsed</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.SelectAll">
            <summary>
            Method which helps to Select all cells in grid.
            </summary>
            <param></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ClearSelections(System.Boolean)">
            <summary>
            Method which helps to clear the selection in Grid.
            </summary>
            <param name="exceptCurrentCell"> Flag which decides whether Current cell selection should remove or not. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ClearRowHeader">
            <summary>
            Method which clears the Current row and changes the RowHeader Visual state
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.MoveCurrentCell(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,System.Boolean)">
            <summary>
            Method which helps to move the current cell selection to corresponding RowColumnIndex.
            </summary>
            <param name="rowColumnIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.HandleDetailsViewGridKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Method which handles the DetailsViewGrid key down.
            </summary>
            <param name="args"> Corresponding KeyEvent argument. </param>
            <returns> Return whether the key down handled by grid or not. </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.HandleKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Method which helps to handle the selection in DataGrid.
            </summary>
            <param name="args"> Corresponding Key Event Args. </param>
            <returns> Return whether the key down handled by grid or not. </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessSourceCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,Syncfusion.UI.Xaml.Grid.CollectionChangedReason)">
            <summary>
            Method which handles the selection when DataGrid ItemsSource collection changed.
            </summary>
            <param name="e"> Collection changed event argument. </param>
            <param name="reason"> Collection changed reason. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessDataReorder(System.Object,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Method which handle the selection when data is reorderd.
            </summary>
            <param name="value"></param>
            <param name="action"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs,Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Method which handle the selection on PointerPressed operation.
            </summary>
            <param name="args"> Pointer event arguments. </param>
            <param name="rowColumnIndex"> Cell row and column index. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs,Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Method which handles the selection in pointer released operation.
            </summary>
            <param name="args"> Corresponding pointer event argument. </param>
            <param name="rowColumnIndex"> Corrensponding cell rowcolumn index. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessOnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs,Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Method which handles the editing operation when Edit Trigger is set as OnTapped
            </summary>
            <param name="e"> Tapped event args. </param>
            <param name="currentRowColumnIndex"> Corresponding cell row column index. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessOnDoubleTapped(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Method which handels the Editing operation when the EditTrigger is set as OnDoubleTapped.
            </summary>
            <param name="currentRowColumnIndex"> Current cell row column index. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Method which handles all the Key navigation operations.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.CreateCurrentCellManager">
            <summary>
            Method which creates the current cell manager for SfDataGrid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessSortChanged(Syncfusion.UI.Xaml.Grid.SortColumnChangedHandle)">
            <summary>
            Method which handles the selection when Sort the columns.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessFilterApplied">
            <summary>
            Method which handles the selection while filter applied.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessFilterPopupOpened">
            <summary>
            Method which handles the selection and EndEdit process when Filter popup opens.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessPageChanged">
            <summary>
            Method which handles the selection when Page Changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessTableSummaryChanged">
            <summary>
            Method which handles the selection when TableSummary position is Changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessSelectionModeChanged(Syncfusion.UI.Xaml.Grid.SelectionPropertyChangeHandle)">
            <summary>
            Method which handles the selection when Selection Mode property changed
            </summary>
            <param name="handle"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessAddNewRow(Syncfusion.UI.Xaml.Grid.AddNewRowOperationHandle)">
            <summary>
            Method which handles the selection when the operation done related to AddNewRow.
            </summary>
            <param name="handle"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessCurrentItemChanged(Syncfusion.UI.Xaml.Grid.SelectionPropertyChangeHandle)">
            <summary>
            Method which helps to do the Selection operation when CurrentItem changed.
            </summary>
            <param name="handle"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessGroupChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Method which handles the selection when the column grouped.
            </summary>
            <param name="args"> Group column collection changed event argument .</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessGroupExpanded(System.Int32,System.Int32)">
            <summary>
            Method which handles the selection when the Group expanded.
            </summary>
            <param name="insertIndex">Expanded group row header index.</param>
            <param name="count">Expanded row count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessGroupCollapsed(System.Int32,System.Int32)">
            <summary>
            Method which handles the selection when the Group collapsed.
            </summary>
            <param name="removeAtIndex">Expanded group row header index.</param>
            <param name="count">Collapsedrow count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessDetailsViewGridPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs,Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Method whhich helps to handle the selection in DetailsView grid when perform Pointer pressed operations.
            </summary>
            <param name="args"></param>
            <param name="rowColumnIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessDetailsViewGridPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs,Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Method whhich helps to handle the selection in DetailsView grid when perform Pointer pressed operations.
            </summary>
            <param name="args"></param>
            <param name="rowColumnIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessDetailsViewGridPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs,Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Method whhich helps to handle the selection in DetailsView grid when perform Pointer moved operations.
            </summary>
            <param name="args"></param>
            <param name="rowColumnIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ClearDetailsViewGridSelections(Syncfusion.UI.Xaml.Grid.DetailsViewDataGrid)">
            <summary>
            Method which helps to clear the selection in Details view grid.
            </summary>
            <param name="detailsViewDataGrid"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessDetailsViewKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs,System.Int32,Windows.System.VirtualKey)">
            <summary>
            Method which decides whether the index is in Details view grid. and proceed the Key navigation operation in Details view grid.
            </summary>
            <param name="args"></param>
            <param name="rowIndex"></param>
            <param name="processKey"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessDetailsViewIndex(Windows.UI.Xaml.Input.KeyRoutedEventArgs,System.Int32,Windows.System.VirtualKey,System.Int32@)">
            <summary>
            Method which handles the Key navigation in DetailsViewGrid.
            </summary>
            <param name="args"></param>
            <param name="rowIndex"></param>
            <param name="processKey"></param>
            <param name="returnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.InitializeSelectionProperties">
            <summary>
            Method which initiate the Selection Properties in the selection controller.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ResetFlags">
            <summary>
            Method which reset the flags in the selection controller.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.GetGridCellInfo(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Method helps to get cell info from the particular rowcolumn index.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.OnPropertyChanged(System.String)">
            <summary>
            Method which helps to raise the property cchanged event.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.SuspendUpdates">
            <summary>
            Method which helps to suspend the other updates when doing selection operation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ResumeUpdates">
            <summary>
            Method which resumes the selection updates.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.GetDataColumn(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Returns the DataColumn for the given RowColumnIndex
            </summary>
            <param name="rowColumnIndex">Corresponding RowColumnIndex Value</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.GetGridColumn(System.Int32)">
            <summary>
            Returns the GridColumn for the given RowColumnIndex
            </summary>
            <param name="columnIndex">Corresponding ColumnIndex Value</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.AddCells(System.Collections.Generic.List{System.Object})">
            <summary>
            Method which helps to add the new items to Selected cells.
            </summary>
            <param name="Items">Corresponding Items to Add</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.RemoveCells(System.Collections.Generic.List{System.Object})">
            <summary>
            Method which helps to remove the new items to Selected cells.
            </summary>
            <param name="Items">Corresponding Items to Remove</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.GetIndexes(System.Collections.Generic.List{System.Object})">
            <summary>
            Method which helps to get the indexes of corresponding items.
            </summary>
            <param name="Items">Corresponding Items to get Indexes</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.MoveSelectionToAddNewRow">
            <summary>
            Method which helps to move the selection to AddNewRow.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.MoveSelectionToFirstLine">
            <summary>
            Method which helps to move the selection to FirstLine.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.UpdateSelectedCells">
            <summary>
            Method which is used to reset the selected cells.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ExpandOrCollapseGroup(Syncfusion.Data.Group,System.Boolean)">
            <summary>
            Method which helps to Expand or Collapse the group.
            </summary>
            <param name="group"></param>
            <param name="isExpanded"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.CheckIsLastRow(Syncfusion.UI.Xaml.Grid.SfDataGrid)">
            <summary>
            Method which helps to check whether the row is last row.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.CheckCanRemoveSameCell">
            <summary>
            Method which decides whether we can remove the selection in same row.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessSelection(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.Grid.SelectionReason,System.Boolean)">
            <summary>
            Method which helps to process the selection on corresponding rowColumn index.
            </summary>
            <param name="newRowColumnIndex"> RowColumnIndex to process the selection. </param>
            <param name="reason"> SelectionReason to process. </param>
             <param name="needWholeRowSelect"> Whether need to select whole row. </param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.UpdateSelection(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,System.Boolean)">
            <summary>
            Method which helps to update the selection to corresponding rowColumn index.
            </summary>
            <param name="rowColumnIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessShiftSelection(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.System.VirtualKey,System.Boolean)">
            <summary>
            Method which perform the selection when we select the cells using Shift key.
            </summary>
            <param name="newRowColumnIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.RemoveSelection(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,System.Collections.Generic.List{System.Object})">
            <summary>
            Method which helps to remove the selection in corresponding rowColumn index.
            </summary>
            <param name="rowColumnIndex"></param>
            <param name="removedItems"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.AddSelection(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,System.Collections.Generic.List{System.Object})">
            <summary>
            Method which helps to add the selection in corresponding rowColumn index.
            </summary>
            <param name="rowColumnIndex"></param>
            <param name="addedItems"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ShowCellSelection(Syncfusion.UI.Xaml.Grid.DataColumnBase)">
            <summary>
            Method which shows the Cell Selection background in corresponding column.
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.HideCellSelection(Syncfusion.UI.Xaml.Grid.DataColumnBase)">
            <summary>
            Method which hides the Cell Selection background in corresponding column.
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.HideAllSelection(System.Boolean)">
            <summary>
            Method which hides all the cell selection background in all cells.
            </summary>
            <param name="exceptCurrentCell">To maintain the selection in Current Cell.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ClearGroupSelections(Syncfusion.Data.Group)">
            <summary>
            Method which helps to clear the cell selection in the corresponding Group.
            </summary>
            <param name="group"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ScrollInViewFromBottom(System.Int32)">
            <summary>
            Method which helps to scroll the row in View from bottom.
            </summary>
            <param name="rowIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ScrollInViewFromTop(System.Int32)">
            <summary>
            Method which helps to view the row from top.
            </summary>
            <param name="rowIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.GetNextCellIndex(System.Int32)">
            <summary>
            Method which return the next cell index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.GetPreviousCellIndex(System.Int32)">
            <summary>
            Method which return the previous cell index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.GetFocusedColumnIndex(System.Int32,Syncfusion.UI.Xaml.Grid.MoveDirection)">
            <summary>
            Method which return the next focused column index.
            </summary>
            <param name="index"></param>
            <param name="direction">To check whether in Right or Left.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.GetNextRowIndex(System.Int32)">
            <summary>
            Method which returns the next row index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.GetPreviousRowIndex(System.Int32)">
            <summary>
            Method which return the previous index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.GetRowColumnIndex(System.Object,Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Method which return the RowColumnIndex for the corresponding RowData and Column.
            </summary>
            <param name="rowData"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.AllowFocus(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Method which helps to find the corresponding cell is focusible or not.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.UpdateCurrentCell">
            <summary>
            Method which helps to refresh the CurrentCell.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.GetRecordAtRowIndex(System.Int32)">
            <summary>
            Method which returns the record in the row index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.RaiseSelectionChanging(System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            Method which helps to raise the selection changing event.
            </summary>
            <param name="addedItems"></param>
            <param name="removedItems"></param>
            <param name="addedIndexes"></param>
            <param name="removedIndexes"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.RaiseSelectionChanged(System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            Method which helps to Raise the SelectionChanged event.
            </summary>
            <param name="addedItems"></param>
            <param name="removedItems"></param>
            <param name="addedIndexes"></param>
            <param name="removedIndexes"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.GetSelectedCells">
            <summary>
            Method which helps to get list of selected cells as GridCellInfo.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.SelectCell(System.Object,Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Method which helps to select a particular cell.
            </summary>
            <param name="rowData">To select specific row.</param>
            <param name="column">To select particular column</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.SelectCells(System.Object,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object,Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Method which is used to Select the range of cells.
            Multiple cells will be selected only for Multiple and Extended mode selection.
            This is not applicable for Single and None selection mode.
            </summary>
            <param name="startRowData">To identify starting row to select.</param>
            <param name="startColumn">To identify starting column to select.</param>
            <param name="endRowData">To identify ending row to select.</param>
            <param name="endColumn">To identify ending column to select.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.UnSelectCell(System.Object,Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Method which helps to unselect a particular cell.
            </summary>
            <param name="rowData">To unselect specific row.</param>
            <param name="column">To unselect particular column</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.UnSelectCells(System.Object,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object,Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Method which is used to Unselect the range of cells.
            Multiple cells will be unselected only for Multiple and Extended mode selection.
            This is not applicable for Single and None selection mode.
            </summary>
            <param name="startRowData">To identify starting row to unselect.</param>
            <param name="startColumn">To identify starting column to unselect.</param>
            <param name="endRowData">To identify ending row to unselect.</param>
            <param name="endColumn">To identify ending column to unselect.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ProcessPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs,Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Method which handles the selection in pointer moved operation.
            </summary>
            <param name="args"> Corresponding pointer event argument. </param>
            <param name="rowColumnIndex"> Corrensponding cell rowcolumn index. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.ChangeSelectedCells(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,System.Boolean)">
            <summary>
            Method which helps to add the selection to corresponding rowColumn index from pressed index.
            </summary>
            <param name="rowColumnIndex"></param>
            <param name="needToSelectWholeRow"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.AutoScrollerValueChanged(System.Object,Syncfusion.UI.Xaml.Grid.AutoScrollerValueChangedEventArgs)">
            <summary>
            Event handler which handles the selection in pointer moved out of grid.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.SelectedCells">
            <summary>
            Gets the selected cells information.
            </summary>
            <value> Collection of GridSelectedCellsInfo. </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.SelectedRows">
            <summary>
            Property which contains the collection of Selected RowIndexes in SfDataGrid.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.RowSelectionBrush">
            <summary>
            Property which Get or set the Brush value for Selection in DataRow
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.GroupRowSelectionBrush">
            <summary>
            Property which Get or set the Brush value for Selection in Group Header and Summaries.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.RowHoverBackgroundBrush">
            <summary>
            Property which Get or Set the Brush value for RowHover Highliting.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridCellSelectionController.CurrentCellManager">
            <summary>
            Gets the CurrentCellManager properties and functionalities.
            </summary>
            <value></value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCurrentCellManager.GetDataColumnBase(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Returns the DataColumn for the given RowColumnIndex
            </summary>
            <param name="rowColumnIndex">Corresponding RowColumnIndex Value</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCurrentCellManager.CanSelectRow(System.Int32)">
            <summary>
            Method which helps to decide whether we can select the current row or not. 
            This method used when we need to select the focused row.
            </summary>
            <param name="rowIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCurrentCellManager.CanSelectCell(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Method which helps to decide whether we can select the current cell or not. 
            This method used when we need to select the already selected cell.
            </summary>
            <param name="rowIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCurrentCellManager.BeginEdit">
            <summary>
            Triggers BeginEdit, and causes the CellRenderer to load its actual Renderer for Editing
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCurrentCellManager.EndEdit(System.Boolean)">
            <summary>
            Ends Edit for the corresponding Renderer and loads TextBlocl
            </summary>
            <param name="previousRowColumnIndex">RowColumnIndex for the Cell to End Edit</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCurrentCellManager.ScrollInViewFromRight(System.Int32)">
            <summary>
            Method which call the Invalidate measure and Scroll in view if the column is not present in Visible region.
            </summary>
            <param name="columnIndex"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridCurrentCellManager.ScrollInViewFromLeft(System.Int32)">
            <summary>
            Method which call the Invalidate measure and Scroll in view if the column is not present in Visible region.
            </summary>
            <param name="columnIndex"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectedCellsCollection.#ctor">
            <summary> 
            Default constructor to initialize the Selected Cells list as empty. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectedCellsCollection.IndexOf(Syncfusion.UI.Xaml.Grid.GridCellInfo)">
            <summary> 
            Returns zero-based index of the given selected cell. 
            </summary>
            <param name="cellInfo"> Information describing the selected cell. </param>
            <returns> An int. </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectedCellsCollection.IndexOf(Syncfusion.UI.Xaml.Grid.GridSelectedCellsInfo)">
            <summary> 
            Returns zero-based index of the given selected cells list. 
            </summary>
            <param name="item"> Information describing the selected cells. </param>
            <returns> An int. </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectedCellsCollection.Insert(System.Int32,Syncfusion.UI.Xaml.Grid.GridCellInfo)">
            <summary> 
            Inserts the specific cell into the Selected Cells list at given index.
            </summary>
            <param name="index"> Zero-based index of the Selected Cells list. </param>
            <param name="cellInfo"> Information describing the selected cell. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectedCellsCollection.Insert(System.Int32,Syncfusion.UI.Xaml.Grid.GridSelectedCellsInfo)">
            <summary> 
            Inserts the specific cells into the Selected Cells list at given index. 
            </summary>
            <param name="index"> Zero-based index of the Selected Cells list. </param>
            <param name="newItem"> The selected cells to insert into list. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectedCellsCollection.RemoveAt(System.Int32)">
            <summary> 
            Removes the item at described index. 
            </summary>
            <param name="index"> Zero-based index of the Selected Cells list. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectedCellsCollection.Add(Syncfusion.UI.Xaml.Grid.GridCellInfo)">
            <summary>
            Adds the specific cell into the Selected Cells list.
            </summary>
            <param name="cellInfo"> Information describing the selected cell. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectedCellsCollection.Add(Syncfusion.UI.Xaml.Grid.GridSelectedCellsInfo)">
            <summary>
            Adds the specific cells into the Selected Cells list.
            </summary>
            <param name="newItem"> The selected cells to add into the list. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectedCellsCollection.Clear">
            <summary>
            Clears this object to its blank/initial state.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectedCellsCollection.Contains(Syncfusion.UI.Xaml.Grid.GridCellInfo)">
            <summary>
            Determine whether the specific cell contains in Selected Cells list.
            </summary>
            <param name="cellInfo"> Information describing the selected cell. </param>
            <returns> True if the selected cell is in this list, false if not. </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectedCellsCollection.Contains(Syncfusion.UI.Xaml.Grid.GridSelectedCellsInfo)">
            <summary>
            Determine whether the specific cells contains in Selected Cells list.
            </summary>
            <param name="cellInfo"> Information describing the selected cell. </param>
            <returns> True if the selected cell is in this list, false if not. </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectedCellsCollection.CopyTo(Syncfusion.UI.Xaml.Grid.GridSelectedCellsInfo[],System.Int32)">
            <summary>
            Copies the list of cells into the given array, starting at the specified index of the target array.
            </summary>
            <param name="array"> The One-dimensional array in the type of GridSelectedCellsInfo. </param>
            <param name="arrayIndex"> Zero-based index of the array. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectedCellsCollection.Remove(Syncfusion.UI.Xaml.Grid.GridCellInfo)">
            <summary>
            Removes the specific cell from the Selected Cells list.
            </summary>
            <param name="cellInfo"> Information describing the selected cell. </param>
            <returns> True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectedCellsCollection.Remove(Syncfusion.UI.Xaml.Grid.GridSelectedCellsInfo)">
            <summary>
            Removes the specific cells from the Selected Cells list.
            </summary>
            <param name="oldItem"> The old item to remove. </param>
            <returns> True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectedCellsCollection.GetEnumerator">
            <summary>
            Gets the enumerator Selected Cells list
            </summary>
            <returns> The enumerator that iterates to the list. </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSelectedCellsCollection.Item(System.Int32)">
            <summary>
            Indexer to get or set items within this collection using array index syntax.
            </summary>
            <param name="index"> Zero-based index of the entry to access. </param>
            <returns> The indexed item. </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSelectedCellsCollection.Count">
            <summary>
            Gets the number of elements actually contained in list.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSelectedCellsCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether this object is read only.
            </summary>
            <value> True if this object is read only, false if not. </value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.SelectAll">
            <summary>
            Method which helps to select all the rows.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ClearSelections(System.Boolean)">
            <summary>
            Method which helps to clear the selection in Grid.
            </summary>
            <param name="exceptCurrentRow">Flag which decides whether Current row selection should remove or not</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.MoveCurrentCell(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,System.Boolean)">
            <summary>
            Method whcih helps to move the Current row selection to certain Row Column index.
            </summary>
            <param name="rowColumnIndex">Corresponding Row and Column index where the selection to move.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.SelectRows(System.Int32,System.Int32)">
            <summary>
            Property which contains the collection of Selected RowIndexes in SfDataGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.HandleCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,Syncfusion.UI.Xaml.Grid.CollectionChangedReason)">
            <summary>
            Method which called when the collections like SelectedItems, Columns and DataSource changed.
            </summary>
            <param name="e">Collection Changed Event Args</param>
            <param name="reason">Which collection has changed</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.HandleDetailsViewGridKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Method which handles the DetailsViewGrid key down.
            </summary>
            <param name="args">Corresponding KeyEvent argument</param>
            <returns>return whether the key down handled by grid or not.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.HandleKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Method which helps to handle the selection in DataGrid.
            </summary>
            <param name="args">Corresponding Key Event Args</param>
            <returns>return whether the key down handled by grid or not.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.HandlePointerOperations(Syncfusion.UI.Xaml.Grid.GridPointerEventArgs,Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Method which is called when doing Pointer operations like Pressed,Released,Tapped and Double Tapped.
            </summary>
            <param name="args">args containd the Pointer operation type, Pointer event args</param>
            <param name="rowColumnIndex">Row column index of the cell which has been clicked.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.HandleGridOperations(Syncfusion.UI.Xaml.Grid.GridOperationsHandle)">
            <summary>
            Method which is called while doing Sorting,Filtering,Grouping,Paging and Pasting operations.
            </summary>
            <param name="args">argument contains the Operation type and Operation arguments</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.HandleSelectionPropertyChanges(Syncfusion.UI.Xaml.Grid.SelectionPropertyChangeHandle)">
            <summary>
            Method which called when Selection properties like SelectedIndex,SelectedItem and SelectionMode property changed.
            </summary>
            <param name="handle">Handle which contains the values of changed property</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.HandleGroupExpandCollapse(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Method which called when the Group Expand or Collapsed
            </summary>
            <param name="index">Group Row Index</param>
            <param name="count">Number of rows collapsed or Expanded</param>
            <param name="isExpanded">Whether Expanded or collapsed</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs,Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Method which handle the selection on PointerPressed operation.
            </summary>
            <param name="args">Pointer event arguments.</param>
            <param name="rowColumnIndex">Cell row and column index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs,Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Method which handles the selection in pointer released operation.
            </summary>
            <param name="args">Corresponding pointer event argument</param>
            <param name="rowColumnIndex">Corrensponding cell rowcolumn index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessOnTapped(Windows.UI.Xaml.Input.TappedRoutedEventArgs,Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Method which handles the editing operation when Edit Trigger is set as OnTapped
            </summary>
            <param name="e">Tapped event args</param>
            <param name="currentRowColumnIndex">Corresponding cell row column index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessOnDoubleTapped(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Method which handels the Editing operation when the EditTrigger is set as OnDoubleTapped.
            </summary>
            <param name="currentRowColumnIndex">Current cell row column index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Method which handles all the Key navigation operations.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessPageChanged">
            <summary>
            Method which handles the selection when Page Changed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessFilterApplied">
            <summary>
            Method which handles the selection while filter applied.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessSortChanged(Syncfusion.UI.Xaml.Grid.SortColumnChangedHandle)">
            <summary>
            Method which handles the selection when Sort the columns.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessGroupChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Method which handles the selection when the column grouped.
            </summary>
            <param name="args">Group column collection changed event argument.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessOnPaste(System.Collections.Generic.List{System.Object})">
            <summary>
            Method which handles the selection while pasting the records in DataGrid.
            </summary>
            <param name="records"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessSelectionModeChanged(Syncfusion.UI.Xaml.Grid.SelectionPropertyChangeHandle)">
            <summary>
            Method which handles the selection when Selection Mode property changed
            </summary>
            <param name="handle"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessNavigationModeChanged(Syncfusion.UI.Xaml.Grid.SelectionPropertyChangeHandle)">
            <summary>
            Method which handles the selection when NavigationMode changed.
            </summary>
            <param name="handle"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessCurrentItemChanged(Syncfusion.UI.Xaml.Grid.SelectionPropertyChangeHandle)">
            <summary>
            Method which helps to do the Selection operation when CurrentItem changed.
            </summary>
            <param name="handle"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessSelectedIndexChanged(Syncfusion.UI.Xaml.Grid.SelectionPropertyChangeHandle)">
            <summary>
            Method which handles the selection when Selection Index property changed
            </summary>
            <param name="handle"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessSelectedItemChanged(Syncfusion.UI.Xaml.Grid.SelectionPropertyChangeHandle)">
            <summary>
            Method which handles the selection when Selection Item property changed
            </summary>
            <param name="handle"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessSourceCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs,Syncfusion.UI.Xaml.Grid.CollectionChangedReason)">
            <summary>
            Method which handles the selection when DataGrid ItemsSource collection changed.
            </summary>
            <param name="e">Collection changed event argument.</param>
            <param name="reason">Collection changed reason.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessSelectedItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Method which handles the selection when SelectedItems collection changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessGroupExpanded(System.Int32,System.Int32)">
            <summary>
            Method which handles the selection when the Group expanded.
            </summary>
            <param name="insertIndex">Expanded group row header index.</param>
            <param name="count">Expanded row count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessGroupCollapsed(System.Int32,System.Int32)">
            <summary>
            Method which handles the selection when the Group collapsed.
            </summary>
            <param name="removeAtIndex">Expanded group row header index.</param>
            <param name="count">Collapsedrow count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.CreateCurrentCellManager">
            <summary>
            Method which creates the current cell manager for SfDataGrid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessAddNewRow(Syncfusion.UI.Xaml.Grid.AddNewRowOperationHandle)">
            <summary>
            Method which handles the selection when the operation done related to AddNewRow.
            </summary>
            <param name="handle"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.InitializeSelectionProperties">
            <summary>
            Method which initiate the Selection Properties in the selection controller.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.RemoveRows">
            <summary>
            Method to remove the Selected Rows from Source Collection in the DataGrid.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ExpandOrCollapseGroup(Syncfusion.Data.Group,System.Boolean)">
            <summary>
            Method which Expand or Collapse the group when press Right and Left key.
            </summary>
            <param name="group">Corresponding group</param>
            <param name="isExpanded"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessShiftSelection(System.Int32,System.Boolean)">
            <summary>
            Method which perform the selection when we select the rows using Shift key.
            </summary>
            <param name="rowIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.CheckCanRemoveSameRow">
            <summary>
            Method which decides whether we can remove the selection in same row.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.GetNextRowIndex(System.Int32)">
            <summary>
            Method which returns the next row index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.GetPreviousRowIndex(System.Int32)">
            <summary>
            Method which return the previous index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.SuspendUpdates">
            <summary>
            Method which helps to suspend the other updates when doing selection operation.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ResumeUpdates">
            <summary>
            Method which resumes the selection updates.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.AddSelection(System.Int32,System.Collections.Generic.List{System.Object},Syncfusion.UI.Xaml.Grid.SelectionReason)">
            <summary>
            Method which helps to add the selection in corresponding row index.
            </summary>
            <param name="rowIndex"></param>
            <param name="addedItems"></param>
            <param name="reason"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.RemoveSelection(System.Int32,System.Collections.Generic.List{System.Object},Syncfusion.UI.Xaml.Grid.SelectionReason,System.Boolean)">
            <summary>
            Method which helps to remove the selection in corresponding row index.
            </summary>
            <param name="rowIndex"></param>
            <param name="removedItems"></param>
            <param name="reason"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.OnPropertyChanged(System.String)">
            <summary>
            Method which helps to raise the property cchanged event.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.RaiseSelectionChanging(System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            Method which helps to raise the selection changing event.
            </summary>
            <param name="addedItems"></param>
            <param name="removedItems"></param>
            <param name="addedIndexes"></param>
            <param name="removedIndexes"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.RaiseSelectionChanged(System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            Method which helps to Raise the SelectionChanged event.
            </summary>
            <param name="addedItems"></param>
            <param name="removedItems"></param>
            <param name="addedIndexes"></param>
            <param name="removedIndexes"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.GetRecordAtRowIndex(System.Int32)">
            <summary>
            Method which returns the record in the row index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ClearRowHeader">
            <summary>
            Method which clears the Current row and changes the RowHeader Visual state
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.HideAllRowSelectionBorder(System.Boolean)">
            <summary>
            Method which hides the selection border in all rows.
            </summary>
            <param name="exceptCurrentRow"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ShowAllRowSelectionBorder">
            <summary>
            Method which shows the selection border in all rows.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ScrollInViewFromBottom(System.Int32)">
            <summary>
            Method which helps to scroll the row in View from bottom.
            </summary>
            <param name="rowIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ScrollInViewFromTop(System.Int32)">
            <summary>
            Method which helps to view the row from top.
            </summary>
            <param name="rowIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ResetSelectedRows">
            <summary>
            Method which is used to reset the Selected Row index when the records reseted while Sorting, Filtering and Grouping.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.RefreshSelectedItems">
            <summary>
            Method which is used to reset the selected items when we Filter the records.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessSelection(System.Int32,Syncfusion.UI.Xaml.Grid.SelectionReason)">
            <summary>
            Method which helps to process the selection on corresponding row index.
            </summary>
            <param name="rowIndex"></param>
            <param name="reason"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessDetailsViewIndex(Windows.UI.Xaml.Input.KeyRoutedEventArgs,System.Int32,Windows.System.VirtualKey,System.Int32@)">
            <summary>
            Method which handles the Key navigation in DetailsViewGrid.
            </summary>
            <param name="args"></param>
            <param name="rowIndex"></param>
            <param name="processKey"></param>
            <param name="returnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessDetailsViewKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs,System.Int32,Windows.System.VirtualKey)">
            <summary>
            Method which decides whether the index is in Details view grid. and proceed the Key navigation operation in Details view grid.
            </summary>
            <param name="args"></param>
            <param name="rowIndex"></param>
            <param name="processKey"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessDetailsViewGridPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs,Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Method whhich helps to handle the selection in DetailsView grid when perform Pointer moved operations.
            </summary>
            <param name="args"></param>
            <param name="rowColumnIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessDetailsViewGridPointerPressed(Windows.UI.Xaml.Input.PointerRoutedEventArgs,Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Method whhich helps to handle the selection in DetailsView grid when perform Pointer pressed operations.
            </summary>
            <param name="args"></param>
            <param name="rowColumnIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessDetailsViewGridPointerReleased(Windows.UI.Xaml.Input.PointerRoutedEventArgs,Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Method whhich helps to handle the selection in DetailsView grid when perform Pointer pressed operations.
            </summary>
            <param name="args"></param>
            <param name="rowColumnIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ClearDetailsViewGridSelections(Syncfusion.UI.Xaml.Grid.DetailsViewDataGrid)">
            <summary>
            Method which helps to clear the selection in Details view grid.
            </summary>
            <param name="detailsViewDataGrid"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessPointerMoved(Windows.UI.Xaml.Input.PointerRoutedEventArgs,Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Method which handles the selection in pointer moved operation.
            </summary>
            <param name="args"> Corresponding pointer event argument. </param>
            <param name="rowColumnIndex"> Corrensponding cell rowcolumn index. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.ProcessDragSelection(Windows.UI.Xaml.Input.PointerRoutedEventArgs,Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Method which helps to process the drag selection on corresponding row column index.
            </summary>
            <param name="args"></param>
            <param name="rowColumnIndex"></param>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.GridSelectionController.AutoScrollerValueChanged(System.Object,Syncfusion.UI.Xaml.Grid.AutoScrollerValueChangedEventArgs)">
            <summary>
            Event handler which handles the selection in pointer moved out of grid.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSelectionController.SelectedRows">
            <summary>
            Property which contains the collection of Selected RowIndexes in SfDataGrid.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSelectionController.RowSelectionBrush">
            <summary>
            Property which Get or set the Brush value for Selection in DataRow
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSelectionController.GroupRowSelectionBrush">
            <summary>
            Property which Get or set the Brush value for Selection in Group Header and Summaries.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSelectionController.RowHoverBackgroundBrush">
            <summary>
            Property which Get or Set the Brush value for RowHover Highliting.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridSelectionController.CurrentCellManager">
            <summary>
            Property which helps to Get the CurrentCell Manager of SfDataGrid
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.SelectionPropertyChangeHandle">
            <summary>
            Class which used as argument of Selection Property changes.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SelectionPropertyChangeHandle.NewValue">
            <summary>
            New modified vale
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SelectionPropertyChangeHandle.OldValue">
            <summary>
            old value of the property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.SelectionPropertyChangeHandle.PropertyName">
            <summary>
            Changed property name.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridPointerEventArgs.Operation">
            <summary>
            Type of PointerOperation. 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridPointerEventArgs.OriginalEventArgs">
            <summary>
            Pointer Event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridOperationsHandle.Operation">
            <summary>
            Type of Grid Operation
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.GridOperationsHandle.OperationArgs">
            <summary>
            Grid Operation arguments.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Helper.SelectionHelper.CheckControlKeyPressed">
            <summary>
            Check whether the Control key is pressed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Helper.SelectionHelper.CheckShiftKeyPressed">
            <summary>
            Check whether the Shift key is pressed
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Helper.SelectionHelper.GetNextPageIndex(Syncfusion.UI.Xaml.Grid.SfDataGrid)">
            <summary>
            Method which returns the Next page index.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Helper.SelectionHelper.GetPreviousPageIndex(Syncfusion.UI.Xaml.Grid.SfDataGrid)">
            <summary>
            Method which returen the previous page index.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Helper.SelectionHelper.GetLastRowIndex(Syncfusion.UI.Xaml.Grid.SfDataGrid,Syncfusion.UI.Xaml.Grid.SfDataGrid)">
            <summary>
            Method which returns the Last row index in DataGrid. This method was used in Detail View.
            </summary>
            <param name="dataGrid"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Helper.SelectionHelper.GetFirstRowIndex(Syncfusion.UI.Xaml.Grid.SfDataGrid)">
            <summary>
            Method whcih returns the First row index in DataGrid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Helper.SelectionHelper.GetLastRowIndex(Syncfusion.UI.Xaml.Grid.SfDataGrid)">
            <summary>
            Method whcih returns the last row index in DataGrid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Helper.SelectionHelper.CheckGroupExpanded(Syncfusion.UI.Xaml.Grid.SfDataGrid,Syncfusion.Data.Group)">
            <summary>
            Method which helps to find whether the group is expanded or not.
            </summary>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Helper.SelectionHelper.GetPointPosition(Windows.UI.Xaml.Input.PointerRoutedEventArgs,Windows.UI.Xaml.UIElement)">
            <summary>
            Method which return the mouse position in DataGrid.
            </summary>
            <param name="args"></param>
            <param name="relativeTo"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Helper.SelectionHelper.ShowRowSelection(Syncfusion.UI.Xaml.Grid.SfDataGrid,System.Int32)">
            <summary>
            Method which shows the Selection border in corresponding row index.
            </summary>
            <param name="rowIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Helper.SelectionHelper.HideRowSelection(Syncfusion.UI.Xaml.Grid.SfDataGrid,System.Int32)">
            <summary>
            Method which hides the selection border in corresponding row index.
            </summary>
            <param name="rowIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Helper.SelectionHelper.ShowRowFocusBorder(Syncfusion.UI.Xaml.Grid.SfDataGrid,System.Int32)">
            <summary>
            Method which helps to show the Focus borderin corresponding row.
            </summary>
            <param name="rowIndex"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Helper.SelectionHelper.HideRowFocusBorder(Syncfusion.UI.Xaml.Grid.SfDataGrid)">
            <summary>
            Method which helps to hide the focus border.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Helper.SelectionHelper.UpdateRowHeaderState(Syncfusion.UI.Xaml.Grid.SfDataGrid,System.Boolean)">
            <summary>
            Method which helps to Update the row header visual state.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.BoolToVisiblityConverter.Windows#UI#Xaml#Data#IValueConverter#Convert(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the bool value to Visiblity
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="language"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.BoolToVisiblityConverter.Windows#UI#Xaml#Data#IValueConverter#ConvertBack(System.Object,System.Type,System.Object,System.String)">
            <summary>
            Converts the visibity value to bool
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="language"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRenderer`2">
            <summary>
            GridVirtualizingCellRenderer is an abstract base class for cell renderers
            that need live UIElement visuals displayed in a cell. You can derive from
            this class and provide the type of the UIElement you want to show inside cells
            as type paramater. The class provides strong typed virtual methods for 
            initializing content of the cell and arranging the cell visuals. See 
            <see cref="!:GridVirtualizingCellRendererBase&lt;T&gt;"/> for more details.
            <para/>
            The idea behind this class is to provide a place where we can 
            add general code that should be shared for all cell renderers in the tree derived
            from GridVirtualizingCellRendererBase. While this class does at
            the moment not add meaningfull functionality to GridVirtualizingCellRendererBase
            we created this extra layer of inheritance to make it easy to share 
            code for the GridVirtualizingCellRendererBase base class between grid and
            common assemblies and keep grid control specific code
            out of the base class. It is currently not possible with C# to the base class as 
            template type parameter.
            </summary>
            <typeparam name="T">The type of the UIElement that should be placed inside cells</typeparam>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase">
            <summary>
            The <see cref="T:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase"/> class provides a default implementation of 
            the <see cref="T:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer"/> interface for a cell renderer.
            You should derive from this class to implement custom cell renderer classes. 
            There is however no dependency on GridCellRendererBase inside of the control. 
            <para/>
            If you want to implement a renderer with support for live UIElements 
            inside the cell you should derive from the <see cref="!:VirtualizingCellRendererBase&lt;T&gt;"/>
            or grid adapted VirtualizingCellRendererBase classes.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer">
            <summary>
            Defines the interface for all cell renderer.
            A default implementation of this interface is provided by the GridCellRendererBase class
            from which you should derive custom cell renderer classes. There is however no dependency on GridCellRendererBase.
            We should access the renderer by using this interface only. Do not create any objects for renderer.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.GetControlValue">
            <summary>
            Return the current cell value, only if the renderer's HasCurrentCellState is true
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.SetControlValue(System.Object)">
            <summary>
            Set the current cell value, only if the renderer's HasCurrentCellState is true
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.ShouldGridTryToHandleKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Let Renderer decide whether the parent grid should be allowed to handle keys and prevent
            the key event from being handled by the visual UIElement for this renderer. If this method
            returns true the parent grid will handle arrow keys and set the Handled flag in the event
            data. Keys that the grid does not handle will be ignored and be routed to the UIElement 
            for this renderer.
            </summary>
            <param name="e">A <see cref="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs"/> object.</param>
            <returns>True if the parent grid should be allowed to handle keys; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.Arrange(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Windows.Foundation.Rect)">
            <summary>
            Renderer will arrange the UIElement using this method
            </summary>
            <param name="cellRowColumnIndex">Row Column Index of the cell</param>
            <param name="uiElement">Corresponding UiElement</param>
            <param name="cellRect">Cell Rect for arranging the UIElement</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.Measure(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Windows.Foundation.Size)">
            <summary>
            Method which is used to Measure the Cell UIElement
            </summary>
            <param name="cellRowColumnIndex">Row Column Index of the cell</param>
            <param name="uiElement">Corresponding UiElement</param>
            <param name="availableSize">Corresponding Size for measuring the  UIElement size</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.PrepareUIElements(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object,System.Boolean)">
            <summary>
            Method which is used to create and initiate the UIElement for Cell
            </summary>
            <param name="cellRowColumnIndex">Row Column Index of the cell</param>
            <param name="record">Corresponding Record of the Row </param>
            <param name="column">Corresponding Grid Column</param>
            <param name="cellContainer">Corresponding Cell Element</param>
            <param name="isInEdit">Corresponding cell is in edit mode</param>
            <returns>Cell UIElement</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.UnloadUIElements(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement)">
            <summary>
            Method which is used for Unload the UIElement of the cell.(For Recyclling Purpose)
            </summary>
            <param name="cellRowColumnIndex">Cell Row Column Index</param>
            <param name="uiElemnt">Corresponding Cell UIElement</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.UpdateBindingInfo(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object,System.Boolean)">
            <summary>
            Method which is used to Update the Binding Information of the Cell UIElement
            </summary>
            <param name="cellRowColumnIndex">Row Column Index of the cell</param>
            <param name="uiElement">Corresponding UiElement</param>
            <param name="column">Corresponding column for update the binding info</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.UpdateCellStyle(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Method which is used to update the style info of the Cell
            </summary>
            <param name="cellRowColumnIndex">Row Column Index of the cell</param>
            <param name="uiElement">Corresponding UiElement</param>
            <param name="column">Corresponding column for update the style info</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.SetCurrentCellState(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,System.Boolean,System.Boolean)">
            <summary>
            Update the current cell information in renderer while current cell was activated.
            </summary>
            <param name="currentCellIndex">CurrentCell Index</param>
            <param name="currentCellElement">CurrentCell UIElement</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.ResetCurrentCellState">
            <summary>
            Reset the current cell information in renderer while current cell was deactivated.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.SetFocus(System.Boolean)">
            <summary>
            Sets Focus to the Editor UI Element, When it comes to view via Scrolling.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.BeginEdit(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Current cell enters into edit mode 
            </summary>
            <param name="cellRowColumnIndex">Row Column Index of the cell</param>
            <param name="currentCellElement">Corresponding Cell Element</param>
            <param name="column">Corresponding Grid Column</param>
            <param name="record">Corresponding Record of the Row </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.EndEdit(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            current cell Leave the edit mode. 
            </summary>
            <param name="cellRowColumnIndex">Row Column Index of the cell</param>
            <param name="currentCellElement">Corresponding Cell Element</param>
            <param name="column">Corresponding Grid Column</param>
            <param name="record">Corresponding Record of the Row </param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.IsEditable">
            <summary>
            Gets or sets a value that indicates whether the cell is editable.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.IsFocusible">
            <summary>
            Gets or sets a value that indicates whether the cell is focusable.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.IsDropDownable">
            <summary>
            Gets or sets a value that indicates whether the cell can be dropped down.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.DataGrid">
            <summary>
            The DataGrid
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.HasCurrentCellState">
            <summary>
            Get whether the current cell was activated or not
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.OnPrepareUIElements(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object,System.Boolean)">
            <summary>
            Called from <see cref="!:IGridCellRenderer.OnPrepareUIElements"/> to
            prepare the cells UIElement children.
            VirtualizingCellRendererBase overrides this method and
            creates new UIElements and wires them with the parent cells control.
            </summary>
            <param name="cellRowColumnIndex">Row Column Index of the cell</param>
            <param name="record">Record for the coresponding row</param>
            <param name="column">Corresponding Grid Column</param>
            <param name="cellContainer">Corresponding Cell Element</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.OnPreviewTextInput(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Called when text is entered in the Data Control
            </summary>
            <param name="e">KeyRoutedEventArgs</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.OnArrange(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Windows.Foundation.Rect)">
            <summary>
            Called from <see cref="M:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.Arrange(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Windows.Foundation.Rect)"/> to
            arrange the cells UIElement children. 
            </summary>
            <param name="cellRowColumnIndex">Row Column Index of the cell</param>
            <param name="uiElement">Corresponding UiElement</param>
            <param name="cellRect">Cell Rect for arranging the UIElement</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.OnMeasure(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Windows.Foundation.Size)">
            <summary>
            Called from <see cref="M:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.Measure(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Windows.Foundation.Size)"/> to
            Measure the cells UIElement children. 
            </summary>
            <param name="cellRowColumnIndex">Row Column Index of the cell</param>
            <param name="uiElement">Corresponding UiElement</param>
            <param name="availableSize">Corresponding Size for measuring the  UIElement size</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.OnUnloadUIElements(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement)">
            <summary>
            Called from <see cref="M:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.UnloadUIElements(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement)"/> after a cell is scrolled out of view.
            VirtualizingCellRendererBase overrides this method and
            creates either removes the cell renderer visuals from the parent canvas
            or hide them and reuse it later in same canvas depending on whether
            <see cref="!:AllowRecycle"/> was set.
            </summary>
            <param name="cellRowColumnIndex">Row Coloumn Index of the cell</param>
            <param name="uiElement">UIElement to unload</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.OnUpdateBindingInfo(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object,System.Boolean)">
            <summary>
            Called from <see cref="M:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.UpdateBindingInfo(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object,System.Boolean)"/> to
            Update the binding of the Cell UIElement corresponding to GridColumn.
            In our control we are reusing the cell elements for horizontal scrolling.
            Hence we need to update the binding details of the cell UIElement.
            </summary>
            <param name="cellRowColumnIndex">Row Column Index of the cell</param>
            <param name="uiElement">Corresponding UiElement</param>
            <param name="column">Corresponding column for update the binding info</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.OnUpdateStyleInfo(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Called from <see cref="!:IGridCellRenderer.OnUpdateStyleInfo"/> to
            update the cell appearance as per the customer need through API's and Selectors.
            In our control we are reusing the cell elements for scrolling.
            Hence we need to update the styles of the cell UIElement.
            </summary>
            <param name="cellRowColumnIndex">Row Column Index of the cell</param>
            <param name="uiElemnt">Corresponding UiElement</param>
            <param name="column">Corresponding column for update the style info</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.ShouldGridTryToHandleKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Let Renderer decide whether the parent grid should be allowed to handle keys and prevent
            the key event from being handled by the visual UIElement for this renderer. If this method
            returns true the parent grid will handle arrow keys and set the Handled flag in the event
            data. Keys that the grid does not handle will be ignored and be routed to the UIElement 
            for this renderer.
            </summary>
            <param name="e">A <see cref="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs"/> object.</param>
            <returns>True if the parent grid should be allowed to handle keys; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.SetFocus(Windows.UI.Xaml.UIElement,System.Boolean)">
            <summary>
            Method to Set the focus on Current UI Element
            </summary>
            <param name="uiElement">Current cell renderer element</param>
            <param name="needToFocus">Need to set focus</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.Syncfusion#UI#Xaml#Grid#Cells#IGridCellRenderer#ShouldGridTryToHandleKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Let Renderer decide whether the parent grid should be allowed to handle keys and prevent
            the key event from being handled by the visual UIElement for this renderer. If this method
            returns true the parent grid will handle arrow keys and set the Handled flag in the event
            data. Keys that the grid does not handle will be ignored and be routed to the UIElement 
            for this renderer.
            </summary>
            <param name="e">A <see cref="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs"/> object.</param>
            <returns>True if the parent grid should be allowed to handle keys; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.Arrange(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Windows.Foundation.Rect)">
            <summary>
            Renderer will arrange the UIElement using this method
            </summary>
            <param name="cellRowColumnIndex">Row Column Index of the cell</param>
            <param name="uiElement">Corresponding UiElement</param>
            <param name="cellRect">Cell Rect for arranging the UIElement</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.Measure(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Windows.Foundation.Size)">
            <summary>
            Method which is used to Measure the Cell UIElement
            </summary>
            <param name="cellRowColumnIndex">Row Column Index of the cell</param>
            <param name="uiElement">Corresponding UiElement</param>
            <param name="availableSize">Corresponding Size for measuring the  UIElement size</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.PrepareUIElements(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object,System.Boolean)">
            <summary>
            Method which is used to create and initiate the UIElement for Cell
            </summary>
            <param name="cellRowColumnIndex">Row Column Index of the cell</param>
            <param name="record">Record for the coresponding row</param>
            <param name="column">Corresponding Grid Column</param>
            <param name="cellContainer">Corresponding Cell Element</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.UnloadUIElements(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement)">
            <summary>
            Method which is used for Unload the UIElement of the cell.(For Recyclling Purpose)
            </summary>
            <param name="cellRowColumnIndex">Cell Row Column Index</param>
            <param name="uiElement">Corresponding Cell UIElement</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.Syncfusion#UI#Xaml#Grid#Cells#IGridCellRenderer#UpdateBindingInfo(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object,System.Boolean)">
            <summary>
            Method which is used to Update the Binding Information of the Cell UIElement
            </summary>
            <param name="cellRowColumnIndex">Row Column Index of the cell</param>
            <param name="uiElement">Corresponding UiElement</param>
            <param name="column">Corresponding column for update the binding info</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.UpdateCellStyle(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Method which is used to update the style info of the Cell
            </summary>
            <param name="cellRowColumnIndex">Row Column Index of the cell</param>
            <param name="uiElement">Corresponding UiElement</param>
            <param name="column">Corresponding column for update the style info</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.PreviewTextInput(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Called when text is entered in the Data Control
            </summary>
            <param name="args">KeyRoutedEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.SetCurrentCellState(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,System.Boolean,System.Boolean)">
            <summary>
            Update the current cell information in renderer while current cell was activated.
            </summary>
            <param name="currentCellIndex">CurrentCell Index</param>
            <param name="currentCellElement">CurrentCell UIElement</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.ResetCurrentCellState">
            <summary>
            Reset the current cell information in renderer while current cell was deactivated.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.Dispose">
            <summary>
            Releases all resources used by the.
            <see cref="T:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase">GridCellRendererBase</see>.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.PreviewInputText">
            <summary>
            Gets or sets the Preview Input Text for the Renderer.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.DataGrid">
            <summary>
            The DataGrid
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.SupportsRenderOptimization">
            <summary>
            Gets or sets whether the renderer supports rendering itsself directly to the
            drawing context. When this is possible the UIElement will only be created
            when the user moves the mouse over the cell or if the UIElement is needed for
            other reasons, e.g. animate after change. The benefit of rendering directly to the 
            DrawingContext instead of creating the UIElement is a much improved scrolling 
            performance. The default value is false.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.UseOnlyRendererElement">
            <summary>
            Gets or sets whether need to place the renderer element inside the GridCell or not
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.HasCurrentCellState">
            <summary>
            Specifies whether the cell state for the current cell has been set.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.CurrentCellIndex">
            <summary>
            Returns the cell's row column index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.CurrentCellElement">
            <summary>
            Returns the UI element of current cell.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.CurrentCellRendererElement">
            <summary>
            Returns the content of the current cell element.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.IsInEditing">
            <summary>
            Returns the current cell is in editing.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.IsFocused">
            <summary>
            Returns the current cell is focused.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.IsEditable">
            <summary>
            Gets or sets a valude that indicates whether the cell is editable.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.IsFocusible">
            <summary>
            Gets or sets a value that indicates whether the cell is focusable.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase.IsDropDownable">
            <summary>
            Gets or sets a value that indicates whether the cell can be dropped down.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRendererBase`2.OnPrepareUIElements(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object,System.Boolean)">
            <summary>
            Called from <see cref="!:IGridCellRenderer.PrepareUIElments"/> to
            prepare the cells UIElement children.
            VirtualizingCellRendererBase overrides this method and
            creates new UIElements and wires them with the parent cells control.
            </summary>
            <param name="cellRowColumnIndex">Row Column Index of the cell</param>
            <param name="record">Record for the coresponding row</param>
            <param name="column">Corresponding Grid Column</param>
            <param name="cellContainer">Corresponding Cell Element</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRendererBase`2.OnUnloadUIElements(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement)">
            <summary>
            Called from <see cref="M:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.UnloadUIElements(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement)"/> after a cell is scrolled out of view.
            VirtualizingCellRendererBase overrides this method and
            creates either removes the cell renderer visuals from the parent canvas
            or hide them and reuse it later in same canvas depending on whether
            <see cref="P:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRendererBase`2.AllowRecycle"/> was set.
            </summary>
            <param name="cellRowColumnIndex">Row Coloumn Index of the cell</param>
            <param name="uiElements">UIElement to unload</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRendererBase`2.OnArrange(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Windows.Foundation.Rect)">
            <summary>
            Called from <see cref="M:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.Arrange(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Windows.Foundation.Rect)"/> to
            arrange the cells UIElement children. 
            </summary>
            <param name="cellRowColumnIndex">Row Column Index of the cell</param>
            <param name="uiElement">Corresponding UiElement</param>
            <param name="cellRect">Cell Rect for arranging the UIElement</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRendererBase`2.OnMeasure(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Windows.Foundation.Size)">
            <summary>
            Called from <see cref="M:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.Measure(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Windows.Foundation.Size)"/> to
            Measure the cells UIElement children. 
            </summary>
            <param name="cellRowColumnIndex">Row Column Index of the cell</param>
            <param name="uiElement">Corresponding UiElement</param>
            <param name="availableSize">Corresponding Size for measuring the  UIElement size</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRendererBase`2.OnUpdateBindingInfo(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object,System.Boolean)">
            <summary>
            Called from <see cref="M:Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer.UpdateBindingInfo(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object,System.Boolean)"/> to
            Update the binding of the Cell UIElement corresponding to GridColumn.
            In our control we are reusing the cell elements for horizontal scrolling.
            Hence we need to update the binding details of the cell UIElement.
            </summary>
            <param name="cellRowColumnIndex">Row Column Index of the cell</param>
            <param name="uiElement">Corresponding UiElement</param>
            <param name="column">Corresponding column for update the binding info</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRendererBase`2.OnUpdateStyleInfo(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.UIElement,Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Called from <see cref="!:IGridCellRenderer.UpdateStyleInfo"/> to
            update the cell appearance as per the customer need through API's and Selectors.
            In our control we are reusing the cell elements for scrolling.
            Hence we need to update the styles of the cell UIElement.
            </summary>
            <param name="cellRowColumnIndex">Row Column Index of the cell</param>
            <param name="uiElement">Corresponding UiElement</param>
            <param name="column">Corresponding column for update the style info</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRendererBase`2.OnCreateEditUIElement">
            <summary>
            Creates a new UIElement of type specified with the class type parameter.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRendererBase`2.OnInitializeEditElement(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,`1,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Called to initialize the content of the cell through binding 
            using the information from the column (MappingName)
            You must override this method in your
            derived class.
            </summary>
            <param name="uiElement">Corresponding UIElement</param>
            <param name="column">Corresponding column for set the binding</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRendererBase`2.OnUpdateEditBinding(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,`1,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Called to update the binding information of the Cell UIElement 
            using the information from column.
            You must override this method in your
            derived class.
            </summary>
            <param name="cellRowcolumnIndex">Cell Row Column Index</param>
            <param name="element">Corresponding cell UIElement</param>
            <param name="column">Corresponding column for update the binding</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRendererBase`2.InitializeEditElement(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,`1,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Called from <see cref="!:OnPrepareUiElement"/> to initialize the content of the cell 
            using the information from the column (MappingName)
            . The method calls the virtual <see cref="M:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRendererBase`2.OnInitializeEditElement(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,`1,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)"/> which 
            you should override in your derived class.
            </summary>
            <param name="uiElement"></param>
            <param name="column"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRendererBase`2.CreateOrDisplayRecycleUIElement">
            <summary>
            Method which is return the UIElement for Cell.
            This method will create new element or Recycle the old element.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRendererBase`2.WireEditUIElement(`1)">
            <summary>
            Wire the Events to UIElement
            </summary>
            <param name="uiElement"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRendererBase`2.UnwireEditUIElement(`1)">
            <summary>
            Unwire the Events from UIElement
            </summary>
            <param name="uiElement"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRendererBase`2.OnWireEditUIElement(`1)">
            <summary>
            Called when [wire edit unique identifier element].
            </summary>
            <param name="uiElement">The unique identifier element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRendererBase`2.OnUnwireEditUIElement(`1)">
            <summary>
            Called when [unwire edit unique identifier element].
            </summary>
            <param name="uiElement">The unique identifier element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRendererBase`2.OnEditElementLoaded(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Called when [edit element loaded].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRendererBase`2.InitializeCellStyle(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,System.Object,Windows.UI.Xaml.UIElement,Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Method which is used to Initialize the custom style for cell
            by using corresponding API's and Selectors.
            </summary>
            <param name="cellRowColumnIndex">Cell Row Column Index</param>
            <param name="element">Corresponding cell UIElement</param>
            <param name="column">Corresponding column for update the style of cell</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRendererBase`2.SetCellStyle(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,System.Object,Windows.UI.Xaml.UIElement,Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Method which is used to set the Custom style for Cell.
            </summary>
            <param name="cellRowColumnIndex">Cell Row Column Index</param>
            <param name="element">Corresponding cell UIElement</param>
            <param name="column">Corresponding column for update the style of cell</param>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRendererBase`2.AllowRecycle">
            <summary>
            Gets or sets a value indicating whether elements can be recycled when scrolled out of view.
            In this case when a cell is scrolled out of view
            it is moved into a recycle bin and the next time a new element is scrolled into
            view the element is recovered from the recycle bin and reinitialized with the
            new content of the cell. The default value is false.
            </summary>
            <value><c>true</c> if elements can be recycled when scrolled out of view; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRenderer`2.RaiseCurrentCellValidatingEvent(System.Object,System.Object,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object@,System.Object)">
            <summary>
            Raises the current cell validating event.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
            <param name="column">The column.</param>
            <param name="changedNewValue">The changed new value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRenderer`2.RaiseCurrentCellValidatedEvent(System.Object,System.Object,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Raises the current cell validated event.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
            <param name="column">The column.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridVirtualizingCellRenderer`2.TextAlignmentToHorizontalAlignment(Windows.UI.Xaml.TextAlignment)">
            <summary>
            Texts the alignment to horizontal alignment.
            </summary>
            <param name="textAlignment">The text alignment.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellCheckBoxRenderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Grid.Cells.GridCellCheckBoxRenderer"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellCheckBoxRenderer.OnInitializeEditElement(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.Controls.CheckBox,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Method which is initialize the Renderer element Bindings with corresponding column values.
            </summary>
            <param name="rowColumnIndex">RowColumnIndex for the Renderer Element</param>
            <param name="uiElement">Corresponding Renderer Element</param>
            <param name="column">Column which is providing the information ofr Binding</param>
            <param name="dataContext"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellCheckBoxRenderer.OnUpdateEditBinding(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.Controls.CheckBox,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Method which is used to update the Renderer element Bindings with corresponding column values.
            </summary>
            <param name="cellRowcolumnIndex">Cell Row Column Index</param>
            <param name="element">Corresponding Renderer Element</param>
            <param name="column">Corresponding column for update the binding</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellCheckBoxRenderer.InitializeCellStyle(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,System.Object,Windows.UI.Xaml.UIElement,Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Initializes the cell style.
            </summary>
            <param name="cellRowColumnIndex">Index of the cell row column.</param>
            <param name="record">The record.</param>
            <param name="cell">The cell.</param>
            <param name="column">The column.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellCheckBoxRenderer.GetControlValue">
            <summary>
            Gets the control value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellCheckBoxRenderer.SetControlValue(System.Object)">
            <summary>
            Sets the control value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellCheckBoxRenderer.ShouldGridTryToHandleKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Shoulds the grid try automatic handle key down.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Core.KeyEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellCheckBoxRenderer.OnCheckBoxClick(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Called when [CheckBox click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellComboBoxRenderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Grid.Cells.GridCellComboBoxRenderer"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellComboBoxRenderer.OnCreateEditUIElement">
            <summary>
            Called when [create edit unique identifier element].
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellComboBoxRenderer.OnInitializeDisplayElement(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.Controls.ContentControl,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Called when [initialize display element].
            </summary>
            <param name="rowColumnIndex">Index of the row column.</param>
            <param name="uiElement">The unique identifier element.</param>
            <param name="column">The column.</param>
            <param name="dataContext">The data context.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellComboBoxRenderer.OnInitializeEditElement(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.Controls.ComboBox,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Called when [initialize edit element].
            </summary>
            <param name="rowColumnIndex">Index of the row column.</param>
            <param name="uiElement">The unique identifier element.</param>
            <param name="column">The column.</param>
            <param name="dataContext">The data context.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellComboBoxRenderer.GetControlValue">
            <summary>
            Gets the control value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellComboBoxRenderer.SetControlValue(System.Object)">
            <summary>
            Sets the control value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellComboBoxRenderer.ShouldGridTryToHandleKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Let Renderer decide whether the parent grid should be allowed to handle keys and prevent
            the key event from being handled by the visual UIElement for this renderer. If this method
            returns true the parent grid will handle arrow keys and set the Handled flag in the event
            data. Keys that the grid does not handle will be ignored and be routed to the UIElement
            for this renderer.
            </summary>
            <param name="e">A <see cref="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs"/> object.</param>
            <returns>
            True if the parent grid should be allowed to handle keys; false otherwise.
            </returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.Cells.DataContextHelper">
            <summary>
            DataContext Helper Class for GridCellDataTemplateRenderer.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellTemplateRenderer.OnInitializeDisplayElement(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.Controls.ContentControl,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Called when [initialize display element].
            </summary>
            <param name="rowColumnIndex">Index of the row column.</param>
            <param name="uiElement">The unique identifier element.</param>
            <param name="column">The column.</param>
            <param name="dataContext">The data context.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellTemplateRenderer.OnInitializeEditElement(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.Controls.ContentControl,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Called when [initialize edit element].
            </summary>
            <param name="rowColumnIndex">Index of the row column.</param>
            <param name="uiElement">The unique identifier element.</param>
            <param name="column">The column.</param>
            <param name="dataContext">The data context.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellTemplateRenderer.OnEnteredEditMode(Windows.UI.Xaml.UIElement)">
            <summary>
            Called when [entered edit mode].
            </summary>
            <param name="currentRendererElement">The current renderer element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellTemplateRenderer.OnEditElementLostFocus(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Called when [edit element lost focus].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.RoutedEventArgs"/> instance containing the event data.</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellTemplateRenderer.InitializeCellStyle(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,System.Object,Windows.UI.Xaml.UIElement,Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Initializes the cell style.
            </summary>
            <param name="cellRowColumnIndex">Index of the cell row column.</param>
            <param name="record">The record.</param>
            <param name="cell">The cell.</param>
            <param name="column">The column.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellTemplateRenderer.OnUnwireEditUIElement(Windows.UI.Xaml.Controls.ContentControl)">
            <summary>
            Called when [unwire edit unique identifier element].
            </summary>
            <param name="uiElement">The unique identifier element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellTemplateRenderer.OnUnwireDisplayUIElement(Windows.UI.Xaml.Controls.ContentControl)">
            <summary>
            Called when [unwire display unique identifier element].
            </summary>
            <param name="uiElement">The unique identifier element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellTemplateRenderer.ShouldGridTryToHandleKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Let Renderer decide whether the parent grid should be allowed to handle keys and prevent
            the key event from being handled by the visual UIElement for this renderer. If this method
            returns true the parent grid will handle arrow keys and set the Handled flag in the event
            data. Keys that the grid does not handle will be ignored and be routed to the UIElement
            for this renderer.
            </summary>
            <param name="e">A <see cref="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs"/> object.</param>
            <returns>
            True if the parent grid should be allowed to handle keys; false otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellTemplateRenderer.InitializeDisplayTemplate(Windows.UI.Xaml.Controls.ContentControl,Syncfusion.UI.Xaml.Grid.GridTemplateColumn,System.Object)">
            <summary>
            Applies the display data template.
            </summary>
            <param name="uiElement">The unique identifier element.</param>
            <param name="templateColumn">The template column.</param>
            <param name="dataContext">The data context.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellTemplateRenderer.InitializeEditTemplate(Windows.UI.Xaml.Controls.ContentControl,Syncfusion.UI.Xaml.Grid.GridTemplateColumn,System.Object)">
            <summary>
            Applies the edit data template.
            </summary>
            <param name="uiElement">The unique identifier element.</param>
            <param name="templateColumn">The template column.</param>
            <param name="dataContext">The data context.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellDataTemplateRenderer.OnInitializeDisplayElement(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.Controls.ContentControl,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Called when [initialize display element].
            </summary>
            <param name="rowColumnIndex">Index of the row column.</param>
            <param name="uiElement">The unique identifier element.</param>
            <param name="column">The column.</param>
            <param name="dataContext">The data context.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellDataTemplateRenderer.OnInitializeEditElement(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.Controls.ContentControl,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Called when [initialize edit element].
            </summary>
            <param name="rowColumnIndex">Index of the row column.</param>
            <param name="uiElement">The unique identifier element.</param>
            <param name="column">The column.</param>
            <param name="dataContext">The data context.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellDataTemplateRenderer.InitializeCellStyle(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,System.Object,Windows.UI.Xaml.UIElement,Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Initializes the cell style.
            </summary>
            <param name="cellRowColumnIndex">Index of the cell row column.</param>
            <param name="record">The record.</param>
            <param name="cell">The cell.</param>
            <param name="column">The column.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellDateTimeRenderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Grid.Cells.GridCellDateTimeRenderer"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellDateTimeRenderer.OnInitializeDisplayElement(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.Controls.TextBlock,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Called when [initialize display element].
            </summary>
            <param name="rowColumnIndex">Index of the row column.</param>
            <param name="uiElement">The UI element.</param>
            <param name="column">The column.</param>
            <param name="dataContext">The data context.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellDateTimeRenderer.OnInitializeEditElement(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.Controls.Input.SfDatePicker,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Called when [initialize edit element].
            </summary>
            <param name="rowColumnIndex">Index of the row column.</param>
            <param name="uiElement">The UI element.</param>
            <param name="column">The column.</param>
            <param name="dataContext">The data context.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellDateTimeRenderer.GetControlValue">
            <summary>
            Gets the control value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellDateTimeRenderer.OnEditElementLoaded(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Called when [unwire edit unique identifier element].
            </summary>
            <param name="uiElement">The unique identifier element.</param>
            
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellDateTimeRenderer.ShouldGridTryToHandleKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Let Renderer decide whether the parent grid should be allowed to handle keys and prevent
            the key event from being handled by the visual UIElement for this renderer. If this method
            returns true the parent grid will handle arrow keys and set the Handled flag in the event
            data. Keys that the grid does not handle will be ignored and be routed to the UIElement
            for this renderer.
            </summary>
            <param name="e">A <see cref="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs"/> object.</param>
            <returns>
            True if the parent grid should be allowed to handle keys; false otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellDateTimeRenderer.OnValueChanged(Windows.UI.Xaml.DependencyObject,Windows.UI.Xaml.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [text changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Controls.TextChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellDateTimeRenderer.ProcessUIElementPadding(Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Computes the Padding for the Display UIElement.
            </summary>
            <param name="column">The column.</param>
            <remarks>Padding Cannot be applied at RunTime, as Currently We dont haven't constructed Padding via Binding Expression</remarks>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellDateTimeRenderer.InitializeEditUIElement(Syncfusion.UI.Xaml.Controls.Input.SfDatePicker,Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Processes the edit binding.
            </summary>
            <param name="uiElement">The UI element.</param>
            <param name="column"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellHyperlinkRenderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Grid.Cells.GridCellHyperlinkRenderer"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellHyperlinkRenderer.OnInitializeEditElement(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.Controls.HyperlinkButton,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Called when [initialize edit element].
            </summary>
            <param name="rowColumnIndex">Index of the row column.</param>
            <param name="uiElement">The UI element.</param>
            <param name="column">The column.</param>
            <param name="dataContext">The data context.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellHyperlinkRenderer.OnWireEditUIElement(Windows.UI.Xaml.Controls.HyperlinkButton)">
            <summary>
            Called when [wire edit UI element].
            </summary>
            <param name="uiElement">The UI element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellImageRenderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Grid.Cells.GridCellImageRenderer"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellImageRenderer.OnInitializeEditElement(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.Controls.Image,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Called when [initialize edit element].
            </summary>
            <param name="rowColumnIndex">Index of the row column.</param>
            <param name="uiElement">The unique identifier element.</param>
            <param name="column">The column.</param>
            <param name="dataContext">The data context.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellImageRenderer.InitializeEditUIElement(Windows.UI.Xaml.Controls.Image,Syncfusion.UI.Xaml.Grid.GridImageColumn)">
            <summary>
            Initializes the edit unique identifier element.
            </summary>
            <param name="uiElement">The unique identifier element.</param>
            <param name="gridImageColumn">The grid image column.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellNumericRenderer.OnInitializeDisplayElement(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.Controls.TextBlock,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Called when [initialize display element].
            </summary>
            <param name="rowColumnIndex">Index of the row column.</param>
            <param name="uiElement">The UI element.</param>
            <param name="column">The column.</param>
            <param name="dataContext">The data context.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellNumericRenderer.OnInitializeEditElement(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.Controls.Input.SfNumericTextBox,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Called when [initialize edit element].
            </summary>
            <param name="rowColumnIndex">Index of the row column.</param>
            <param name="uiElement">The UI element.</param>
            <param name="column">The column.</param>
            <param name="dataContext">The data context.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellNumericRenderer.SetControlValue(System.Object)">
            <summary>
            Sets the control value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellNumericRenderer.GetControlValue">
            <summary>
            Gets the control value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellNumericRenderer.OnEditElementLoaded(System.Object,Windows.UI.Xaml.RoutedEventArgs)">
            <summary>
            Called when [edit element loaded].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellNumericRenderer.OnUnwireEditUIElement(Syncfusion.UI.Xaml.Controls.Input.SfNumericTextBox)">
            <summary>
            Called when [unwire edit UI element].
            </summary>
            <param name="uiElement">The UI element.</param>
            
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellNumericRenderer.OnPreviewTextInput(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Called when text is entered in the Data Control
            </summary>
            <param name="e">KeyRoutedEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellNumericRenderer.ShouldGridTryToHandleKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Let Renderer decide whether the parent grid should be allowed to handle keys and prevent
            the key event from being handled by the visual UIElement for this renderer. If this method
            returns true the parent grid will handle arrow keys and set the Handled flag in the event
            data. Keys that the grid does not handle will be ignored and be routed to the UIElement
            for this renderer.
            </summary>
            <param name="e">A <see cref="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs"/> object.</param>
            <returns>
            True if the parent grid should be allowed to handle keys; false otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellNumericRenderer.OnValueChanged(System.Object,Syncfusion.UI.Xaml.Controls.Input.ValueChangedEventArgs)">
            <summary>
            Called when [text changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Controls.TextChangedEventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellNumericRenderer.ProcessUIElementPadding(Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Computes the Padding for the Display UIElement.
            </summary>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellNumericRenderer.InitializeEditUIElement(Syncfusion.UI.Xaml.Controls.Input.SfNumericTextBox,Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Processes the edit binding.
            </summary>
            <param name="uiElement">The UI element.</param>
            <param name="column">GridColumn of the Editing Column</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererCollection">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase"/> objects in the view.
            </summary>
            <remarks>
            On the <see cref="T:Syncfusion.UI.Xaml.Grid.Columns"/>, you access the <see cref="T:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererCollection"/> through the <see cref="!:Columns.CellRenderers"/> property.
            <para/>
            The <see cref="T:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererCollection"/> uses standard <see cref="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererCollection.Add(System.String,Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer)"/> and <see cref="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererCollection.Remove(System.String)"/>
            methods to manipulate the collection.
            Use the Contains method to determine if a specific cell type exists in the collection.
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.ComponentModel.Disposable">
            <summary>
            This class provides a base class that implements the IDisposable interface
            as suggested in the .NET documentation using the Disposable pattern.
            </summary>
            <remarks>If you derive from this class, you only need to override the protected
            Dispose method and check the disposing parameter.</remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.ComponentModel.NonFinalizeDisposable">
            <summary>
            This is a base class for Disposable. It implements the IDisposable interface
            as suggested in the .NET documentation using the Disposable pattern but it does not
            implement a finalizer. If you need finalization you need to derive from Disposable
            or add a finalizer to your derived class and manually call Dispose from the Finalizer.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ComponentModel.NonFinalizeDisposable.Dispose">
            <overload>
            Releases all resources used by the Component.
            </overload>
            <summary>
            Releases all resources used by the Component.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ComponentModel.NonFinalizeDisposable.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
            <remarks>See the documentation for the <see cref="!:System.ComponentModel.Component"/> class and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ComponentModel.Disposable.Finalize">
            <summary>
            <see cref="M:System.Object.Finalize"/>.<para/>
            In C# and C++, finalizers are expressed using destructor syntax.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererCollection.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
            <remarks>See the documentation for the <see cref="!:System.ComponentModel.Component"/> class and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererCollection.Add(System.String,Syncfusion.UI.Xaml.Grid.Cells.IGridCellRenderer)">
            <summary>
            Add the Renderes to the Renderer dictionary.
            </summary>
            <param name="key"></param>
            <param name="renderer"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererCollection.Remove(System.String)">
            <summary>
            Remove the Renderer from dictionary for corresponding key vallue
            </summary>
            <param name="key"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererCollection.ContainsKey(System.String)">
            <summary>
            Checks whether the Renderer Dictionary contains the Corresponding Renderer Key.
            </summary>
            <param name="key"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererCollection.ContainsValue(Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase)">
            <summary>
            Cheks whether the Render Dictionary contains the corresponding renderer.
            </summary>
            <param name="cellRenderer"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererCollection.CopyTo(Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase[],System.Int32)">
            <summary>
            Copy the Renderer values to Array.
            </summary>
            <param name="array"></param>
            <param name="index"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererCollection.Clear">
            <summary>
            Clears the values in Renderer Dictionary.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an
            <see cref="T:System.Array" />, starting at a particular <see
            cref="T:System.Array" /> index.
            </summary>
            <param name="index">The zero-based index in <paramref name="array" /> at which
            copying begins. </param>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is
            the destination of the elements copied from <see
            cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" />
            must have zero-based indexing. </param>
            <filterpriority>2</filterpriority>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is
            multidimensional.-or- The number of elements in the source <see
            cref="T:System.Collections.ICollection" /> is greater than the available space
            from <paramref name="index" /> to the end of the destination <paramref
            name="array" />.-or-The type of the source <see
            cref="T:System.Collections.ICollection" /> cannot be cast automatically to the
            type of the destination <paramref name="array" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />
            is less than zero. </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is
            null. </exception>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererCollection.GetEnumerator">
            <summary>
            Returns the Enumerator for retriving the values.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererCollection.Item(System.String)">
            <summary>
            Indexer will return the correspoding renderer for the corresponding Key value.
            </summary>
            <param name="key"></param>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererCollection.Values">
            <summary>
            Gets the Renderes in the collection
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererCollection.Keys">
            <summary>
            Get the Key values of Renderes
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererCollection.Count">
            <summary>
            Gets the number of elements contained in the <see
            cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>
            The number of elements contained in the <see
            cref="T:System.Collections.ICollection" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see
            cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
            <returns>
            true if access to the <see cref="T:System.Collections.ICollection" /> is
            synchronized (thread safe); otherwise, false.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see
            cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>
            An object that can be used to synchronize access to the <see
            cref="T:System.Collections.ICollection" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellTextBlockRenderer.OnInitializeEditElement(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.Controls.TextBlock,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Method which is initialize the Renderer element Bindings with corresponding column values.
            </summary>
            <param name="uiElement">Corresponding Renderer Element</param>
            <param name="column">Column which is providing the information ofr Binding</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellTextBoxRenderer.OnInitializeDisplayElement(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.Controls.TextBlock,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Called when [initialize display element].
            </summary>
            <param name="rowColumnIndex">Index of the row column.</param>
            <param name="uiElement">The unique identifier element.</param>
            <param name="column">The column.</param>
            <param name="dataContext">The data context.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellTextBoxRenderer.OnInitializeEditElement(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.Controls.TextBox,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Called when [initialize edit element].
            </summary>
            <param name="rowColumnIndex">Index of the row column.</param>
            <param name="uiElement">The unique identifier element.</param>
            <param name="column">The column.</param>
            <param name="dataContext">The data context.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellTextBoxRenderer.GetControlValue">
            <summary>
            Gets the control value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellTextBoxRenderer.SetControlValue(System.Object)">
            <summary>
            Sets the control value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellTextBoxRenderer.OnUnwireEditUIElement(Windows.UI.Xaml.Controls.TextBox)">
            <summary>
            Called when [unwire edit unique identifier element].
            </summary>
            <param name="uiElement">The unique identifier element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellTextBoxRenderer.OnPreviewTextInput(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Raises the <see cref="E:PreviewTextInput"></see>
                event.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellTextBoxRenderer.ShouldGridTryToHandleKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Let Renderer decide whether the parent grid should be allowed to handle keys and prevent
            the key event from being handled by the visual UIElement for this renderer. If this method
            returns true the parent grid will handle arrow keys and set the Handled flag in the event
            data. Keys that the grid does not handle will be ignored and be routed to the UIElement
            for this renderer.
            </summary>
            <param name="e">A <see cref="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs"/> object.</param>
            <returns>
            True if the parent grid should be allowed to handle keys; false otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellTextBoxRenderer.OnTextChanged(System.Object,Windows.UI.Xaml.Controls.TextChangedEventArgs)">
            <summary>
            Called when [text changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Controls.TextChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellTextBoxRenderer.ProcessUIElementPadding(Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Computes the Padding for the Display UIElement.
            </summary>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellUpDownRenderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Grid.Cells.GridCellUpDownRenderer"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellUpDownRenderer.OnInitializeDisplayElement(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.Controls.TextBlock,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Called when [initialize display element].
            </summary>
            <param name="rowColumnIndex">Index of the row column.</param>
            <param name="uiElement">The UI element.</param>
            <param name="column">The column.</param>
            <param name="dataContext">The data context.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellUpDownRenderer.OnInitializeEditElement(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.Controls.Input.SfNumericUpDown,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Called when [initialize edit element].
            </summary>
            <param name="rowColumnIndex">Index of the row column.</param>
            <param name="uiElement">The UI element.</param>
            <param name="column">The column.</param>
            <param name="dataContext">The data context.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellUpDownRenderer.OnUpdateDisplayBinding(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.Controls.TextBlock,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Called when [update display binding].
            </summary>
            <param name="cellRowcolumnIndex">Index of the cell rowcolumn.</param>
            <param name="uiElement">The UI element.</param>
            <param name="column">The column.</param>
            <param name="dataContext">The data context.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellUpDownRenderer.OnUpdateEditBinding(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.Controls.Input.SfNumericUpDown,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Called when [update edit binding].
            </summary>
            <param name="cellRowcolumnIndex">Index of the cell rowcolumn.</param>
            <param name="element">The element.</param>
            <param name="column">The column.</param>
            <param name="dataContext">The data context.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellUpDownRenderer.ShouldGridTryToHandleKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Let Renderer decide whether the parent grid should be allowed to handle keys and prevent
            the key event from being handled by the visual UIElement for this renderer. If this method
            returns true the parent grid will handle arrow keys and set the Handled flag in the event
            data. Keys that the grid does not handle will be ignored and be routed to the UIElement
            for this renderer.
            </summary>
            <param name="e">A <see cref="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs"/> object.</param>
            <returns>
            True if the parent grid should be allowed to handle keys; false otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellUpDownRenderer.OnUnwireEditUIElement(Syncfusion.UI.Xaml.Controls.Input.SfNumericUpDown)">
            <summary>
            Called when text is entered in the Data Control
            </summary>
            <param name="e">KeyRoutedEventArgs</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellUpDownRenderer.ProcessEditBinding(Syncfusion.UI.Xaml.Controls.Input.SfNumericUpDown,Syncfusion.UI.Xaml.Grid.GridUpDownColumn)">
            <summary>
            Processes the edit binding.
            </summary>
            <param name="uiElement">The UI element.</param>
            <param name="upDownColumn">Up down column.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridCellUpDownRenderer.ProcessClearBinding(Syncfusion.UI.Xaml.Controls.Input.SfNumericUpDown)">
            <summary>
            Processes the clear binding.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.Cells.GridSummaryCellRenderer">
            <summary>
            Rederer for Covered cell which is used in Summary Rows and GroupCaption
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridUnBoundCellRenderer.OnInitializeDisplayElement(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.Controls.ContentControl,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Called when [initialize display element].
            </summary>
            <param name="rowColumnIndex">Index of the row column.</param>
            <param name="uiElement">The unique identifier element.</param>
            <param name="column">The column.</param>
            <param name="dataContext">The data context.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridUnBoundCellRenderer.OnInitializeEditElement(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Windows.UI.Xaml.Controls.ContentControl,Syncfusion.UI.Xaml.Grid.GridColumn,System.Object)">
            <summary>
            Method which initialize the element with respect corresponding UnBound value
            </summary>
            <param name="uiElement"></param>
            <param name="column"></param>
            <param name="dataContext"></param>
            <remarks></remarks>
            
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridUnBoundCellRenderer.GetControlValue">
            <summary>
            Gets the control value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridUnBoundCellRenderer.SetControlValue(System.Object)">
            <summary>
            Sets the control value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridUnBoundCellRenderer.OnPreviewTextInput(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Raises the <see cref="E:PreviewTextInput"/> event.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridUnBoundCellRenderer.ShouldGridTryToHandleKeyDown(Windows.UI.Xaml.Input.KeyRoutedEventArgs)">
            <summary>
            Shoulds the grid try automatic handle key down.
            </summary>
            <param name="e">The <see cref="T:Windows.UI.Xaml.Input.KeyRoutedEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.GridUnBoundCellRenderer.ProcessUIElementPadding(Syncfusion.UI.Xaml.Grid.GridColumn)">
            <summary>
            Computes the Padding for the Display UIElement.
            </summary>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Grid.Cells.VirtualizingCellUIElementBin`1">
            <summary>
            This class implements a cache of UIElement of the given type parameter T. It is used
            by the <see cref="!:GridVirtualizingCellRendererBase&lt;T&gt;"/> renderer to recycle UIElement 
            elements for cells that were scrolled out of view and delay unloading of UIElements.
            This reduces the number of times the UIElement needs to be created or unloaded and
            instead only the contents of the UIElement will be reinitialized with cell contents. <para/>
            </summary>
            <typeparam name="T">Type of the Element</typeparam>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.VirtualizingCellUIElementBin`1.Enqueue(Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase,`0)">
            <summary>
            Enqueues the specified UI element.
            </summary>
            <param name="uiElement">The UI element.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.Cells.VirtualizingCellUIElementBin`1.Dequeue(Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase)">
            <summary>
            Dequeues an UIElement from the specified canvas.
            </summary>
            <param name="canvas">The canvas.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Grid.Cells.VirtualizingCellUIElementBin`1.Item(Syncfusion.UI.Xaml.Grid.Cells.GridCellRendererBase)">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.Queue`1"/> for the specified Renderer.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.ComponentModel.DisposableWithEvent">
            <summary>
            This class provides a base class that implements the IDisposable interface
            as suggested in the .NET documentation using the Disposable pattern. After the
            object was disposed a <see cref="E:Syncfusion.UI.Xaml.Collections.ComponentModel.DisposableWithEvent.Disposed"/> event is raised.
            </summary>
            <remarks>If you derive from this class, you only need to override the protected
            Dispose method and check the disposing parameter.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ComponentModel.DisposableWithEvent.Dispose">
            <overload>
            Releases all resources used by the Component.
            </overload>
            <summary>
            Releases all resources used by the Component.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ComponentModel.DisposableWithEvent.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
            <remarks>See the documentation for the <see cref="!:System.ComponentModel.Component"/> class and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ComponentModel.DisposableWithEvent.OnDisposed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.UI.Xaml.Collections.ComponentModel.DisposableWithEvent.Disposed"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.ComponentModel.DisposableWithEvent.IsDisposed">
            <summary>
            Allows to detect if object is disposed or not. True indicates object is disposed,
            otherwise indicates object is still alive and ready for use.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.ComponentModel.DisposableWithEvent.IsDisposing">
            <summary>
            Returns True if object is executing the <see cref="M:Syncfusion.UI.Xaml.Collections.ComponentModel.DisposableWithEvent.Dispose"/> method call.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Collections.ComponentModel.DisposableWithEvent.Disposed">
            <summary>
            Occurs after the object was disposed.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.ComponentModel.IDisposedEvent">
            <summary>
            An interface for the <see cref="E:Syncfusion.UI.Xaml.Collections.ComponentModel.IDisposedEvent.Disposed"/> event.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.Collections.ComponentModel.IDisposedEvent.Disposed">
            <summary>
            Occurs when Dispose was called.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ComponentModel.SyncfusionHandledEventArgs.#ctor">
            <summary>
            Overloaded. Initializes a new instance of the SyncfusionHandledEventArgs class with the Handled property set to False.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ComponentModel.SyncfusionHandledEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SyncfusionHandledEventArgs class with the Handled property set to the given value.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.ComponentModel.SyncfusionHandledEventArgs.Handled">
            <summary>
            Indicates whether the event has been handled and no further processing of the event should happen.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableEntry`1">
            <summary>
            A leaf in the tree with value and optional sort key.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.TreeTableNode">
            <summary>
            A branch or leaf in the tree.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.ITreeTableNode">
            <summary>
            A branch or leaf in the tree.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableNode.GetPosition">
            <summary>
            returns the position in the tree.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableNode.GetCount">
            <summary>
            Returns the number of child nodes (+1 for the current node).
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableNode.IsEmpty">
            <summary>
            Indicates whether leaf is empty.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableNode.IsEntry">
            <summary>
            Indicates whether this is a leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableNode.GetLevel">
            <summary>
            Returns the tree level of this node.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableNode.GetMinimum">
            <summary>
            Returns the minimum value (of the leftmost leaf) of the branch in a sorted tree.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableNode.InvalidateCounterBottomUp(System.Boolean)">
            <summary>
            Walk up parent branches and reset counters.
            </summary>
            <param name="notifyParentRecordSource"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableNode.InvalidateSummariesBottomUp(System.Boolean)">
            <summary>
            Walk up parent branches and reset summaries.
            </summary>
            <param name="notifyParentRecordSource"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.ITreeTableNode.Parent">
            <summary>
            Gets / sets the parent branch.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableNode.GetPosition">
            <summary>
            Returns the position in the tree.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableNode.GetMinimum">
            <summary>
            Returns the minimum value (of the most-left leaf) of the branch in a sorted tree.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableNode.IsEmpty">
            <summary>
            Indicates whether leaf is empty.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableNode.IsEntry">
            <summary>
            Indicates whether this is a leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableNode.GetCount">
            <summary>
            Returns the number of child nodes (+1 for the current node).
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableNode.GetLevel">
            <summary>
            Returns the tree level of this node.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableNode.GetNodeInfo">
            <summary>
            Returns the Debug / text information about the node.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableNode.ToString">
            <summary>
            Returns the Debug / text information about the node.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableNode.InvalidateCounterBottomUp(System.Boolean)">
            <summary>
            Walks up parent branches and reset counters.
            </summary>
            <param name="notifyParentRecordSource"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableNode.InvalidateSummariesBottomUp(System.Boolean)">
            <summary>
            Walks up parent branches and reset summaries.
            </summary>
            <param name="notifyParentRecordSource"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableNode.Tree">
            <summary>
            Gets / sets the tree this node belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableNode.Parent">
            <summary>
            Gets / sets the parent branch.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.ITreeTableEntry">
            <summary>
            A leaf with value and optional sort key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableEntry.GetSortKey">
            <summary>
            Returns the sort key of this leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableEntry.CreateBranch(Syncfusion.UI.Xaml.Collections.TreeTable)">
            <summary>
            Creates a branch that can hold this entry when new leaves are inserted into the tree.
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.ITreeTableEntry.Value">
            <summary>
            Gets / sets the value attached to this leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableEntry`1.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
            <remarks>See the documentation for the <see cref="!:System.ComponentModel.Component"/> class and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableEntry`1.GetSortKey">
            <summary>
            Returns the sort key of this leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableEntry`1.GetMinimum">
            <summary>
            Returns the minimum value (of the most-left leaf) of the branch in a sorted tree.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableEntry`1.GetCount">
            <summary>
            Returns the number of child nodes (+1 for the current node).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableEntry`1.CreateBranch(Syncfusion.UI.Xaml.Collections.TreeTable)">
            <summary>
            Creates a branch that can hold this entry when new leaves are inserted into the tree.
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableEntry`1.GetNodeInfo">
            <summary>
            Returns the Debug / text information about the node.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableEntry`1.IsEntry">
            <summary>
            Indicates whether this is a leaf.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableEntry`1.Value">
            <summary>
            Gets or sets the value attached to this leaf.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1">
            <summary>
            A tree table.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.ITreeTable">
            <summary>
            Tree table interface definition.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTable.BeginInit">
            <summary>
            Optimizes insertion of many elements when tree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTable.EndInit">
            <summary>
            Ends optimization of insertion of elements when tree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTable.GetNextEntry(Syncfusion.UI.Xaml.Collections.ITreeTableEntry)">
            <summary>
            Optimized access to a subsequent entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTable.GetPreviousEntry(Syncfusion.UI.Xaml.Collections.ITreeTableEntry)">
            <summary>
            Optimized access to a previous entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.ITreeTable.Sorted">
            <summary>
            Indicates whether this is a sorted tree.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.ITreeTable.Comparer">
            <summary>
            A comparer used by sorted trees.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.ITreeTable.Root">
            <summary>
            Returns the root node.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.ITreeTable.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1"/>.
            </summary>
            <param name="sorted"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.Dispose">
            <summary>
            Disposes of the object.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.BeginInit">
            <summary>
            Optimizes insertion of many items when thisTree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.EndInit">
            <summary>
            Ends optimization of insertion of items when thisTree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.GetNextEntry(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableEntry{`0})">
            <summary>
            Optimized access to a subsequent entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.GetPreviousEntry(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableEntry{`0})">
            <summary>
            Optimized access to the previous entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.Insert(System.Int32,Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableEntry{`0})">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which the item should be inserted.</param>
            <param name="item">The item to insert. The value must not be a NULL reference (Nothing in Visual Basic). </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.Remove(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableEntry{`0})">
            <summary>
            Removes the specified item from the collection.
            </summary>
            <param name="item">The item to remove from the collection. If the value is NULL or the item is not contained
            in the collection, the method will do nothing.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the item to remove. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.IndexOf(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableEntry{`0})">
            <summary>
            Returns the zero-based index of the occurrence of the item in the collection.
            </summary>
            <param name="value">The item to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based index of the occurrence of the item within the entire collection, if found; otherwise -1.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.Add(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableEntry{`0})">
            <summary>
            Adds a value to the end of the collection.
            </summary>
            <param name="value">The item to be added to the end of the collection. The value must not be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based collection index at which the value has been added.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.Contains(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableEntry{`0})">
            <summary>
            Determines if the item belongs to this collection.
            </summary>
            <param name="item">The object to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic).</param>
            <returns>True if item is found in the collection; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.CopyTo(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableEntry{`0}[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the items copied from the  ArrayList. The array must have zero-based indexing. </param>
            <param name="index">The zero-based index in an array at which copying begins. </param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.InternalTree">
            <summary>
            The non-generic tree table with actual implementation.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.Root">
            <summary>
            Gets the root node.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.Sorted">
            <summary>
            Indicates whether thisTree is sorted.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.Comparer">
            <summary>
            Gets or sets the comparer used by sorted trees.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.Item(System.Int32)">
            <summary>
            Gets or sets the item at the zero-based index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.Count">
            <summary>
            Gets the number of items contained in the collection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
            <value></value>
            <returns>true if the collection is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.System#Collections#IList#IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
            <value></value>
            <returns>true if the collection has a fixed size; otherwise, false.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTable`1.IsSynchronized">
            <summary>
            Returns False.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.TreeTableEnumerator">
            <summary>
            Strongly typed enumerator for <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTable"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEnumerator.#ctor(Syncfusion.UI.Xaml.Collections.ITreeTable)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableEnumerator"/>.
            </summary>
            <param name="tree"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEnumerator.Reset">
            <summary>
            Resets the enumerator.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEnumerator.MoveNext">
            <summary>
            Indicates whether to move to the next node.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Returns the current enumerator.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableEnumerator.Current">
            <summary>
            Returns the current node.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeCollection`1.GetNext(`0)">
            <summary>
            Returns the next item in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeCollection`1.GetPrevious(`0)">
            <summary>
            Returns the previous item in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeCollection`1.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeCollectionEnumerator`1">
            <summary>
            Enumerator class for items of a <see cref="T:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeCollection`1"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeCollectionEnumerator`1.#ctor(Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeCollection{`0})">
            <summary>
            Initalizes the enumerator and attaches it to the collection.
            </summary>
            <param name="collection">The parent collection to enumerate.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeCollectionEnumerator`1.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first item in the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeCollectionEnumerator`1.MoveNext">
            <summary>
            Advances the enumerator to the next item of the collection.
            </summary>
            <returns>
            True if the enumerator was successfully advanced to the next item; False if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeCollectionEnumerator`1.Current">
            <summary>
            Gets the current item in the collection.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounterEntry`2">
            <summary>
            A tree leaf with value and summary information.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEntry">
            <summary>
            A tree leaf with value, sort key and counter information.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryEntry">
            <summary>
            A tree leaf with value and summary information.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.TreeTableEntry">
            <summary>
            A leaf in the tree with value and optional sort key.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntry.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
            <remarks>See the documentation for the <see cref="!:System.ComponentModel.Component"/> class and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntry.GetSortKey">
            <summary>
            Returns the sort key of this leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntry.GetMinimum">
            <summary>
            Returns the minimum value (of the most-left leaf) of the branch in a sorted tree.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntry.GetCount">
            <summary>
            Returns the number of child nodes (+1 for the current node).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntry.CreateBranch(Syncfusion.UI.Xaml.Collections.TreeTable)">
            <summary>
            Creates a branch that can hold this entry when new leaves are inserted into the tree.
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntry.GetNodeInfo">
            <summary>
            Returns the Debug / text information about the node.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntry.IsEntry">
            <summary>
            Indicates whether this is a leaf.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableEntry.Value">
            <summary>
            Gets / sets the value attached to this leaf.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.ITreeTableSummaryNode">
            <summary>
            Interface definition for a node that has one or more summaries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableSummaryNode.GetSummaries(Syncfusion.UI.Xaml.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
            <param name="emptySummaries">The empty summaries.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableSummaryNode.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty in this node and child nodes.
            </summary>
            <param name="notifyEntrySummary">if set to <c>true</c> notify entry summary.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.ITreeTableSummaryNode.HasSummaries">
            <summary>
            Indicates whether node has summaries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryEntry.CreateBranch(Syncfusion.UI.Xaml.Collections.TreeTable)">
            <summary>
            Creates a branch that can hold this entry when new leaves are inserted into the tree.
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryEntry.GetSummaries(Syncfusion.UI.Xaml.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
            <param name="emptySummaries">The empty summaries.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryEntry.OnGetSummaries(Syncfusion.UI.Xaml.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Called from <see cref="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryEntry.GetSummaries(Syncfusion.UI.Xaml.Collections.ITreeTableEmptySummaryArraySource)"/> when called the first time after summaries were invalidated.
            </summary>
            <param name="emptySummaries">The empty summaries.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryEntry.GetSummaryArraySource">
            <summary>
            Returns the value as <see cref="T:Syncfusion.UI.Xaml.Collections.ITreeTableSummaryArraySource"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryEntry.InvalidateSummariesBottomUp(System.Boolean)">
            <summary>
            Walks up parent branches and reset summaries.
            </summary>
            <param name="notifyParentRecordSource"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryEntry.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty in this node and child nodes.
            </summary>
            <param name="notifySummaryArraySource">if set to <c>true</c> notify summary array source.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryEntry.TreeTableWithSummary">
            <summary>
            Returns the tree this leaf belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryEntry.Parent">
            <summary>
            Gets / sets the parent branch.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryEntry.HasSummaries">
            <summary>
            Indicates whether the node has summaries.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.ITreeTableCounterNode">
            <summary>
            Interface definition for a node that has counters and summaries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableCounterNode.GetCounterTotal">
            <summary>
            The total of this node's counter and child nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableCounterNode.GetCounterPosition">
            <summary>
            The cumulative position of this node.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableCounterNode.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all counters dirty in this node and child nodes.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEntry.CreateBranch(Syncfusion.UI.Xaml.Collections.TreeTable)">
            <summary>
            Creates a branch that can hold this entry when new leaves are inserted into the tree.
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEntry.GetCounterPosition">
            <summary>
            Returns the cumulative position of this node.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEntry.GetCounterSource">
            <summary>
            Returns the value as <see cref="T:Syncfusion.UI.Xaml.Collections.ITreeTableCounterSource"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEntry.IsCounterDirty">
            <summary>
            Indicates whether the counter was set dirty.
            </summary>
            <returns>True if dirty; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEntry.GetCounterTotal">
            <summary>
            Returns the total of this node's counter and child nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEntry.InvalidateCounter">
            <summary>
            Reset cached counter.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEntry.InvalidateCounterBottomUp(System.Boolean)">
            <summary>
            Invalidates the counter bottom up.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEntry.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty in this node and child nodes.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEntry.TreeTableWithCounter">
            <summary>
            Returns the tree this leaf belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEntry.Parent">
            <summary>
            Gets / sets the parent branch.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounterEntry`2.GetCounterPosition">
            <summary>
            Returns the cumulative position of this node.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounterEntry`2.GetCounterTotal">
            <summary>
            Returns the total of this node's counter and child nodes.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounterEntry`2.Value">
            <summary>
            Gets or sets the value attached to this leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.#ctor(`1,System.Boolean)">
            <summary>
            Initializes a new <see cref="!:GenericTreeTableWithCounter&lt;V&gt;"/>.
            </summary>
            <param name="sorted"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.Dispose">
            <summary>
            Disposes of the object.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.BeginInit">
            <summary>
            Optimizes insertion of many items when thisTree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.EndInit">
            <summary>
            Ends optimization of insertion of items when thisTree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.GetNextEntry(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Optimized access to a subsequent entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.GetPreviousEntry(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Optimized access to the previous entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.Insert(System.Int32,Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which the item should be inserted.</param>
            <param name="item">The item to insert. The value must not be a NULL reference (Nothing in Visual Basic). </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.Remove(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Removes the specified item from the collection.
            </summary>
            <param name="item">The item to remove from the collection. If the value is NULL or the item is not contained
            in the collection, the method will do nothing.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the item to remove. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.IndexOf(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Returns the zero-based index of the occurrence of the item in the collection.
            </summary>
            <param name="value">The item to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based index of the occurrence of the item within the entire collection, if found; otherwise -1.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.Add(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Adds a value to the end of the collection.
            </summary>
            <param name="value">The item to be added to the end of the collection. The value must not be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based collection index at which the value has been added.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.Contains(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Determines if the item belongs to this collection.
            </summary>
            <param name="item">The object to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic).</param>
            <returns>True if item is found in the collection; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.CopyTo(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1}[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the items copied from the  ArrayList. The array must have zero-based indexing. </param>
            <param name="index">The zero-based index in an array at which copying begins. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty.
            </summary>
            <param name="notifySummariesSource">if set to <c>true</c> notify summaries source.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.GetSummaries(Syncfusion.UI.Xaml.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all counters dirty.
            </summary>
            <param name="notifyCounterSource"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.GetCounterTotal">
            <summary>
            Returns the total of all counters in this tree.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.GetStartCounterPosition">
            <summary>
            Returns the starting counter for this tree.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.GetEntryAtCounterPosition(`1,System.Int32)">
            <summary>
            Overloaded. Returns an entry at the specified counter position. A cookie defines the type of counter.
            </summary>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.GetEntryAtCounterPosition(`1,System.Int32,System.Boolean)">
            <summary>
            Returns an entry at the specified counter position. A cookie defines the type of counter.
            </summary>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <param name="preferLeftMost">Indicates if the leftmost entry should be returned if multiple tree elements have the
            same searchPosition.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.GetNextNotEmptyCounterEntry(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1},System.Int32)">
            <summary>
            Returns the subsequent entry in the collection for which the specific counter is not empty.
            A cookie defines the type of counter.
            </summary>
            <param name="current">The current.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.GetPreviousNotEmptyCounterEntry(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1},System.Int32)">
            <summary>
            Returns the previous entry in the collection for which the specific counter is not empty.
            A cookie defines the type of counter.
            </summary>
            <param name="current">The current.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.GetNextVisibleEntry(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Returns the next entry in the collection for which CountVisible counter is not empty.
            </summary>
            <param name="current">The current.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.GetPreviousVisibleEntry(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Returns the previous entry in the collection for which CountVisible counter is not empty.
            </summary>
            <param name="current">The current.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.InternalTree">
            <summary>
            The internal thisTree table.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.Root">
            <summary>
            Gets the root node.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.Sorted">
            <summary>
            Indicates whether thisTree is sorted.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.Comparer">
            <summary>
            Gets or sets the comparer used by sorted trees.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.Item(System.Int32)">
            <summary>
            Gets or sets the item at the zero-based index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.Count">
            <summary>
            Gets the number of items contained in the collection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
            <value></value>
            <returns>true if the collection is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
            <value></value>
            <returns>true if the collection has a fixed size; otherwise, false.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.IsSynchronized">
            <summary>
            Returns False.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithCounter`2.HasSummaries">
            <summary>
            Indicates whether the tree has summaries.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollection`2">
            <summary>
            A collection of items maintained in a binary tree
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.Dispose">
            <summary>
            Disposes of the object and releases internal objects.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetNext(`0)">
            <summary>
            Returns the next item in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetPrevious(`0)">
            <summary>
            Returns the previous item in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetEnumerator">
            <summary>
            Returns an enumerator for the entire collection.
            </summary>
            <returns>An Enumerator for the entire collection.</returns>
            <remarks>Enumerators only allow reading the data in the collection. 
            Enumerators cannot be used to modify the underlying collection.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty.
            </summary>
            <param name="notifySummariesSource">if set to <c>true</c> notify summaries source.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetSummaries(Syncfusion.UI.Xaml.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all counters dirty.
            </summary>
            <param name="notifyCounterSource"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetCounterTotal">
            <summary>
            Returns the total of all counters in this tree.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetStartCounterPosition">
            <summary>
            Returns the starting counter for this tree.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetItemAtCounterPosition(`1,System.Int32)">
            <summary>
            Overloaded. Returns an entry at the specified counter position. A cookie defines the type of counter.
            </summary>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetItemAtCounterPosition(`1,System.Int32,System.Boolean)">
            <summary>
            Returns an entry at the specified counter position. A cookie defines the type of counter.
            </summary>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <param name="preferLeftMost">Indicates if the leftmost entry should be returned if multiple tree elements have the
            same searchPosition.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetNextNotEmptyCounterItem(`0,System.Int32)">
            <summary>
            Returns the subsequent entry in the collection for which the specific counter is not empty.
            A cookie defines the type of counter.
            </summary>
            <param name="current">The current.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetPreviousNotEmptyCounterItem(`0,System.Int32)">
            <summary>
            Returns the previous entry in the collection for which the specific counter is not empty.
            A cookie defines the type of counter.
            </summary>
            <param name="current">The current.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetNextVisibleItem(`0)">
            <summary>
            Returns the next entry in the collection for which CountVisible counter is not empty.
            </summary>
            <param name="current">The current.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetPreviousVisibleItem(`0)">
            <summary>
            Returns the previous entry in the collection for which CountVisible counter is not empty.
            </summary>
            <param name="current">The current.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.HasSummaries">
            <summary>
            Indicates whether the tree has summaries.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollectionEnumerator`2">
            <summary>
            Enumerator class for items of a <see cref="!:GenericBinaryTreeWithCounterCollection&lt;V&gt;"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollectionEnumerator`2.#ctor(Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollection{`0,`1})">
            <summary>
            Initalizes the enumerator and attaches it to the collection.
            </summary>
            <param name="collection">The parent collection to enumerate.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollectionEnumerator`2.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first item in the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollectionEnumerator`2.MoveNext">
            <summary>
            Advances the enumerator to the next item of the collection.
            </summary>
            <returns>
            True if the enumerator was successfully advanced to the next item; False if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithCounterCollectionEnumerator`2.Current">
            <summary>
            Gets the current item in the collection.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummaryEntry`1">
            <summary>
            A tree leaf with value and summary information.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummaryEntry`1.Value">
            <summary>
            Gets or sets the value attached to this leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1"/>.
            </summary>
            <param name="sorted"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.Dispose">
            <summary>
            Disposes of the object.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.BeginInit">
            <summary>
            Optimizes insertion of many items when thisTree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.EndInit">
            <summary>
            Ends optimization of insertion of items when thisTree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.GetNextEntry(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummaryEntry{`0})">
            <summary>
            Optimized access to a subsequent entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.GetPreviousEntry(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummaryEntry{`0})">
            <summary>
            Optimized access to the previous entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.Insert(System.Int32,Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummaryEntry{`0})">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which the item should be inserted.</param>
            <param name="item">The item to insert. The value must not be a NULL reference (Nothing in Visual Basic). </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.Remove(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummaryEntry{`0})">
            <summary>
            Removes the specified item from the collection.
            </summary>
            <param name="item">The item to remove from the collection. If the value is NULL or the item is not contained
            in the collection, the method will do nothing.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the item to remove. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.IndexOf(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummaryEntry{`0})">
            <summary>
            Returns the zero-based index of the occurrence of the item in the collection.
            </summary>
            <param name="value">The item to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based index of the occurrence of the item within the entire collection, if found; otherwise -1.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.Add(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummaryEntry{`0})">
            <summary>
            Adds a value to the end of the collection.
            </summary>
            <param name="value">The item to be added to the end of the collection. The value must not be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based collection index at which the value has been added.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.Contains(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummaryEntry{`0})">
            <summary>
            Determines if the item belongs to this collection.
            </summary>
            <param name="item">The object to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic).</param>
            <returns>True if item is found in the collection; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.CopyTo(Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummaryEntry{`0}[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the items copied from the  ArrayList. The array must have zero-based indexing. </param>
            <param name="index">The zero-based index in an array at which copying begins. </param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty.
            </summary>
            <param name="notifySummariesSource">if set to <c>true</c> notify summaries source.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.GetSummaries(Syncfusion.UI.Xaml.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.InternalTree">
            <summary>
            The internal thisTree table.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.Root">
            <summary>
            Gets the root node.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.Sorted">
            <summary>
            Indicates whether thisTree is sorted.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.Comparer">
            <summary>
            Gets or sets the comparer used by sorted trees.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.Item(System.Int32)">
            <summary>
            Gets or sets the item at the zero-based index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.Count">
            <summary>
            Gets the number of items contained in the collection.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
            <value></value>
            <returns>true if the collection is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
            <value></value>
            <returns>true if the collection has a fixed size; otherwise, false.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.IsSynchronized">
            <summary>
            Returns False.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericTreeTableWithSummary`1.HasSummaries">
            <summary>
            Indicates whether the tree has summaries.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1">
            <summary>
            A collection of items maintained in a binary tree
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.Dispose">
            <summary>
            Disposes of the object and releases internal objects.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.GetNext(`0)">
            <summary>
            Returns the next item in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.GetPrevious(`0)">
            <summary>
            Returns the previous item in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator for the entire collection.
            </summary>
            <returns>An Enumerator for the entire collection.</returns>
            <remarks>Enumerators only allow reading the data in the collection. 
            Enumerators cannot be used to modify the underlying collection.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty.
            </summary>
            <param name="notifySummariesSource">if set to <c>true</c> notify summaries source.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.GetSummaries(Syncfusion.UI.Xaml.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.HasSummaries">
            <summary>
            Indicates whether the tree has summaries.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithSummaryCollectionEnumerator`1">
            <summary>
            Enumerator class for items of a <see cref="T:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithSummaryCollectionEnumerator`1.#ctor(Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithSummaryCollection{`0})">
            <summary>
            Initalizes the enumerator and attaches it to the collection.
            </summary>
            <param name="collection">The parent collection to enumerate.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithSummaryCollectionEnumerator`1.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first item in the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithSummaryCollectionEnumerator`1.MoveNext">
            <summary>
            Advances the enumerator to the next item of the collection.
            </summary>
            <returns>
            True if the enumerator was successfully advanced to the next item; False if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.Generic.GenericBinaryTreeWithSummaryCollectionEnumerator`1.Current">
            <summary>
            Gets the current item in the collection.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.TreeTableNodeColor">
            <summary>
            Used by TreeTable to balance the tree with algorithm based on Red-Black tree.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Collections.TreeTableNodeColor.Red">
            <summary>
            Red.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Collections.TreeTableNodeColor.Black">
            <summary>
            Black.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.ITreeTableBranch">
            <summary>
            A branch with left and right leaves or branches.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableBranch.SetLeft(Syncfusion.UI.Xaml.Collections.ITreeTableNode,System.Boolean,System.Boolean)">
            <summary>
            Sets the left node.
            </summary>
            <param name="value">The new node.</param>
            <param name="inAddMode">Indicates whether tree-table is in add-mode.</param>
            <param name="isSortedTree">Indicates whether tree-table is sorted.</param>
            <remarks>
            Call this method instead of simply setting <see cref="P:Syncfusion.UI.Xaml.Collections.ITreeTableBranch.Left"/> property if you want
            to avoid the round-trip call to check whether the tree is in add-mode
            or if tree-table is sorted.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableBranch.SetRight(Syncfusion.UI.Xaml.Collections.ITreeTableNode,System.Boolean)">
            <summary>
            Sets the right node.
            </summary>
            <param name="value">The new node.</param>
            <param name="inAddMode">Specifies if tree-table is in add-mode.</param>
            <remarks>
            Call this method instead of simply setting <see cref="P:Syncfusion.UI.Xaml.Collections.ITreeTableBranch.Right"/> property if you want
            to avoid the round-trip call to check whether the tree is in add-mode
            or if tree-table is sorted.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableBranch.GetLeftB">
            <summary>
            Returns the left branch cast to ITreeTableBranch.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableBranch.GetRightB">
            <summary>
            Returns the right branch cast to ITreeTableBranch.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableBranch.GetEntryPositionOfChild(Syncfusion.UI.Xaml.Collections.ITreeTableNode)">
            <summary>
            Returns the position in the tree table of the specified child node.
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableBranch.InvalidateCountBottomUp">
            <summary>
            Sets this object's child node Count dirty and
            marks parent nodes' child node Count dirty.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableBranch.InvalidateCountTopDown">
            <summary>
            Sets this object's child node Count dirty and steps
            through all child branches and marks their child node Count dirty.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableBranch.InvalidateMinimumBottomUp">
            <summary>
            Sets this object's child node Minimum dirty and
            marks parent nodes' child node Minimum dirty.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableBranch.InvalidateMinimumTopDown">
            <summary>
            Sets this object's child node Minimum dirty and steps
            through all child branches and marks their child node Minimum dirty.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.ITreeTableBranch.Left">
            <summary>
            Gets / sets the left node.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.ITreeTableBranch.Right">
            <summary>
            Gets / sets the right node.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.ITreeTableBranch.Color">
            <summary>
            Gets / sets the Red-Black tree color.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.TreeTableBranch">
            <summary>
            A branch in a tree.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableBranch.#ctor(Syncfusion.UI.Xaml.Collections.TreeTable)">
            <summary>
            Initializes a new branch.
            </summary>
            <param name="tree"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableBranch.GetMinimum">
            <summary>
            Returns the minimum value (of the most-left leaf) of the branch in a sorted tree.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableBranch.GetLeftB">
            <summary>
            Returns the left node cast to ITreeTableBranch.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableBranch.GetRightB">
            <summary>
            Returns the right node cast to ITreeTableBranch.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableBranch.SetLeft(Syncfusion.UI.Xaml.Collections.ITreeTableNode,System.Boolean,System.Boolean)">
            <summary>
            Sets the left node.
            </summary>
            <param name="value">The new node.</param>
            <param name="inAddMode">Indicates whether tree-table is in add-mode.</param>
            <param name="isSorted">Indicates whether tree-table is sorted.</param>
            <remarks>
            Call this method instead of simply setting <see cref="P:Syncfusion.UI.Xaml.Collections.TreeTableBranch.Left"/> property if you want
            to avoid the round-trip call to check whether the tree is in add-mode
            or if tree-table is sorted.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableBranch.SetRight(Syncfusion.UI.Xaml.Collections.ITreeTableNode,System.Boolean)">
            <summary>
            Sets the right node.
            </summary>
            <param name="value">The new node.</param>
            <param name="inAddMode">Indicates whether tree-table is in add-mode.</param>
            <remarks>
            Call this method instead of simply setting <see cref="P:Syncfusion.UI.Xaml.Collections.TreeTableBranch.Right"/> property if you want
            to avoid the round-trip call to check whether the tree is in add-mode
            or if tree-table is sorted.
            </remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableBranch.GetEntryPositionOfChild(Syncfusion.UI.Xaml.Collections.ITreeTableNode)">
            <summary>
            Returns the position in the tree table of the specific child node.
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableBranch.GetCount">
            <summary>
            Returns the number of child nodes (+1 for the current node).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableBranch.IsEntry">
            <summary>
            Indicates whether this is a leaf.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableBranch.InvalidateCountBottomUp">
            <summary>
            Sets this object's child node count dirty and
            walks up parent nodes and marks their child node count dirty.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableBranch.InvalidateCountTopDown">
            <summary>
            Sets this object's child node count dirty and steps
            through all child branches and marks their child node count dirty.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableBranch.InvalidateMinimumBottomUp">
            <summary>
            Sets this object's child node minimum dirty and
            marks parent nodes' child node minimum dirty.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableBranch.InvalidateMinimumTopDown">
            <summary>
            Sets this object's child node minimum dirty and steps
            through all child branches and marks their child node minimum dirty.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableBranch.Color">
            <summary>
            Gets / sets Red-Black tree algorithm helper.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableBranch.Left">
            <summary>
            Gets / sets the left leaf or branch.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableBranch.Right">
            <summary>
            Gets / sets the right tree or branch.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.TreeTableEmpty">
            <summary>
            An empty node.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.ITreeTableSource">
            <summary>
            This object owns a <see cref="T:Syncfusion.UI.Xaml.Collections.ITreeTable"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableSource.GetTreeTable">
            <summary>
            Returns a reference to an inner tree table.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.TreeTable">
            <summary>
            A tree table.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
            <remarks>See the documentation for the <see cref="!:System.ComponentModel.Component"/> class and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.#ctor(System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTable"/>.
            </summary>
            <param name="sorted"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.SetNodeAt(System.Int32,Syncfusion.UI.Xaml.Collections.ITreeTableNode)">
            <summary>
            Sets the node at the specified index.
            </summary>
            <param name="index">Index value where the node is to be inserted.</param>
            <param name="value">Value of the node that is to be inserted.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.GetPreviousEntry(Syncfusion.UI.Xaml.Collections.ITreeTableEntry)">
            <summary>
            Optimized access to the previous entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.GetNextEntry(Syncfusion.UI.Xaml.Collections.ITreeTableEntry)">
            <summary>
            Optimized access to a subsequent entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.Insert(System.Int32,Syncfusion.UI.Xaml.Collections.ITreeTableNode)">
            <summary>
            Inserts a node at the specified index.
            </summary>
            <param name="index">Index value where the node is to be inserted.</param>
            <param name="value">Value of the node to insert.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.Remove(Syncfusion.UI.Xaml.Collections.ITreeTableNode)">
            <summary>
            Removes the specified node.
            </summary>
            <param name="value">Node value to look for and remove.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.ResetCache">
            <summary>
            Resets the cache.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.Contains(Syncfusion.UI.Xaml.Collections.ITreeTableNode)">
            <summary>
            Indicates whether the node belongs to this tree.
            </summary>
            <param name="value">Node value to search for.</param>
            <returns>True if node belongs to this tree; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.IndexOf(Syncfusion.UI.Xaml.Collections.ITreeTableNode)">
            <summary>
            Returns the position of a node.
            </summary>
            <param name="value">Node value to look for.</param>
            <returns>Index of the node if found.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.Add(Syncfusion.UI.Xaml.Collections.ITreeTableNode)">
            <summary>
            Appends a node.
            </summary>
            <param name="value">Node value to append.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.BeginInit">
            <summary>
            Optimizes insertion of many elements when tree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.EndInit">
            <summary>
            Ends optimization of insertion of elements when tree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.AddSorted(Syncfusion.UI.Xaml.Collections.ITreeTableNode)">
            <summary>
            Adds a node into a sorted tree.
            </summary>
            <param name="value">Node value to add.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.AddIfNotExists(System.Object,Syncfusion.UI.Xaml.Collections.ITreeTableEntry)">
            <summary>
            Adds a node in a sorted tree only if no node with the same value has not been added yet.
            </summary>
            <param name="key"></param>
            <param name="value">Node value to add.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.IndexOfKey(System.Object)">
            <summary>
            Finds a node in a sorted tree.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.FindKey(System.Object)">
            <summary>
            Finds a node in a sorted tree that matches the specified key.
            </summary>
            <param name="key">The key to search.</param>
            <returns>The node; NULL if not found.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.FindHighestSmallerOrEqualKey(System.Object)">
            <summary>
            Finds the node in a sorted tree is just one entry ahead of the
            node with the specified key. It searches for the largest possible
            key that is smaller than the specified key.
            </summary>
            <param name="key">The key to search.</param>
            <returns>The node; NULL if not found.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.RemoveAt(System.Int32)">
            <summary>
            Removes a node at the specified position.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a node at the specified index.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the node with the specified value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.System#Collections#IList#Contains(System.Object)">
            <summary>
            Indicates whether the node belongs to this tree.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.Clear">
            <summary>
            Clears all nodes in the tree.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the index of the specified node.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds the specified node to the tree.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.GetCount">
            <summary>
            Returns the number of leaves.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the element from this collection into an array.
            </summary>
            <param name="array">The destination array.</param>
            <param name="index">The starting index in thedestination array.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.CopyTo(Syncfusion.UI.Xaml.Collections.ITreeTableNode[],System.Int32)">
            <summary>
            Copies the elements from this collection into an array.
            </summary>
            <param name="array">The destination array.</param>
            <param name="index">The starting index in the destination array.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTable.GetEnumerator">
            <summary>
            Returns a <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableEnumerator"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTable.Comparer">
            <summary>
            Gets / sets the comparer used by sorted trees.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTable.Tag">
            <summary>
            Gets / sets the tag that can be associated with this object.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTable.Sorted">
            <summary>
            Indicates whether tree is sorted.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTable.Root">
            <summary>
            Gets / sets the root node.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTable.Item(System.Int32)">
            <summary>
            Gets / sets an item at the specified index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTable.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTable.IsReadOnly">
            <summary>
            Indicates whether the tree is Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTable.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets / sets the item with the specified index.
            </summary>
            <param name="index">Index value of the item.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTable.IsFixedSize">
            <summary>
            Indicates whether the nodes can be added or removed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTable.IsSynchronized">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTable.System#Collections#ICollection#Count">
            <summary>
            Returns the number of leaves.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTable.SyncRoot">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.ITreeTableEntrySource">
            <summary>
            An object that holds an <see cref="T:Syncfusion.UI.Xaml.Collections.ITreeTableEntry"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.ITreeTableEntrySource.Entry">
            <summary>
            Gets a reference to the <see cref="T:Syncfusion.UI.Xaml.Collections.ITreeTableEntry"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection">
            <summary>
            A collection of <see cref="T:Syncfusion.UI.Xaml.Collections.ITreeTableEntrySource"/> objects
            that are internally using a <see cref="T:Syncfusion.UI.Xaml.Collections.ITreeTable"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.#ctor">
            <summary>
            Overloaded. Initializes a new <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.#ctor(System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.#ctor(Syncfusion.UI.Xaml.Collections.ITreeTable)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.BeginInit">
            <summary>
            Optimizes insertion of many elements when tree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.EndInit">
            <summary>
            Ends optimization of insertion of elements when tree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.Contains(Syncfusion.UI.Xaml.Collections.ITreeTableEntrySource)">
            <summary>
            Indicates whether object belongs to this collection.
            </summary>
            <param name="value">The value of the object.</param>
            <returns>True if object belongs to the collection; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.IndexOf(Syncfusion.UI.Xaml.Collections.ITreeTableEntrySource)">
            <summary>
            Returns the position of a object in the collection.
            </summary>
            <param name="value">The value of the object.</param>
            <returns>The position of the object.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.CopyTo(Syncfusion.UI.Xaml.Collections.ITreeTableEntrySource[],System.Int32)">
            <summary>
            Copies the contents of the collection to an array.
            </summary>
            <param name="array">Destination array.</param>
            <param name="index">Starting index of the destination array.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.GetEnumerator">
            <summary>
            Returns a strongly typed enumerator.
            </summary>
            <returns>A strongly types enumerator.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.Insert(System.Int32,Syncfusion.UI.Xaml.Collections.ITreeTableEntrySource)">
            <summary>
            Inserts an object at the specified index.
            </summary>
            <param name="index">Index value where the object is to be inserted.</param>
            <param name="value">Value of the object to insert.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.Add(Syncfusion.UI.Xaml.Collections.ITreeTableEntrySource)">
            <summary>
            Appends an object.
            </summary>
            <param name="value">The value of the object to append.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.Remove(Syncfusion.UI.Xaml.Collections.ITreeTableEntrySource)">
            <summary>
            Removes the object.
            </summary>
            <param name="value">The value of the object to remove.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a node at the specified index.
            </summary>
            <param name="index">Index value of the node to remove.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts the object at the specified index.
            </summary>
            <param name="index">Index value of the object to insert.</param>
            <param name="value">Value of the object to insert.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the specified object.
            </summary>
            <param name="value">Value of the object to remove.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Indicate whether the specified object belongs to this collection.
            </summary>
            <param name="value">Object value to look for.</param>
            <returns>True if object belongs to the collection; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.Clear">
            <summary>
            Clears all nodes in the tree.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the index of the specified object.
            </summary>
            <param name="value">Value of the object.</param>
            <returns>Index value of the object.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds the specified object to the collection.
            </summary>
            <param name="value">Value of the object to add.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies elements to destination array.
            </summary>
            <param name="array">Destination array.</param>
            <param name="index">Starting index of the destination array.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator.
            </summary>
            <returns>Enumerator.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.Item(System.Int32)">
            <summary>
            Gets / sets an <see cref="T:Syncfusion.UI.Xaml.Collections.ITreeTableEntrySource"/> at a specific position.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.IsReadOnly">
            <summary>
            Indicates whether tree is Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets / sets the item at the specified index.
            </summary>
            <param name="index">Index of the item.</param>
            <returns>The item at the specified index.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.IsFixedSize">
            <summary>
            Indicates whether the nodes can be added or removed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.IsSynchronized">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection.Count">
            <summary>
            Returns the number of objects in this collection.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollectionEnumerator">
            <summary>
            A strongly typed enumerator for the <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollectionEnumerator.#ctor(Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollection)">
            <summary>
            Initializes the <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollectionEnumerator"/>.
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollectionEnumerator.Reset">
            <summary>
            Resets the enumerator.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollectionEnumerator.MoveNext">
            <summary>
            Indicates whether to move to the next object in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollectionEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Returns the current enumerator.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableEntrySourceCollectionEnumerator.Current">
            <summary>
            Returns the current <see cref="T:Syncfusion.UI.Xaml.Collections.ITreeTableEntrySource"/> object.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.ITreeTableCounterSource">
            <summary>
            Interface definition for an object that has counters.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableCounterSource.GetCounter">
            <summary>
            Returns the counter object with counters.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableCounterSource.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all counters dirty in this object and child nodes.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableCounterSource.InvalidateCounterBottomUp">
            <summary>
            Marks all counters dirty in this object and parent nodes.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.ITreeTableCounter">
            <summary>
            Interface definition for a counter object.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableCounter.Combine(Syncfusion.UI.Xaml.Collections.ITreeTableCounter,System.Int32)">
            <summary>
            Combines this counter object with another counter and returns a new object. A cookie can specify
            a specific counter type.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableCounter.Compare(Syncfusion.UI.Xaml.Collections.ITreeTableCounter,System.Int32)">
            <summary>
            Compares this counter with another counter. A cookie can specify
            a specific counter type.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableCounter.IsEmpty(System.Int32)">
            <summary>
            Indicates whether the counter object is empty. A cookie can specify
            a specific counter type.
            </summary>
            <param name="cookie">The cookie.</param>
            <returns>
            	<c>true</c> if the specified cookie is empty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableCounter.GetValue(System.Int32)">
            <summary>
            Returns the integer value of the counter. A cookie specifies
            a specific counter type.
            </summary>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.ITreeTableCounter.Kind">
            <summary>
            Gets the Counter Kind.
            </summary>
            <value>The kind.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.TreeTableCounterCookies">
            <summary>
            Default counter cookies for identifying counter types.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Collections.TreeTableCounterCookies.CountAll">
            <summary>
            All counters.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Collections.TreeTableCounterCookies.CountVisible">
            <summary>
            Visible Counter.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounter">
            <summary>
            A counter that counts objects that are marked "Visible".
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounter.Empty">
            <summary>
            Returns an empty TreeTableVisibleCounter that represents zero visible elements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounter.#ctor(System.Double)">
            <summary>
            Initializes a <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounter"/> with a specified number of visible elements.
            </summary>
            <param name="visibleCount">The visible count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounter.GetVisibleCount">
            <summary>
            Returns the visible count.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounter.GetValue(System.Int32)">
            <summary>
            Returns the integer value of the counter. A cookie specifies
            a specific counter type.
            </summary>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounter.Syncfusion#UI#Xaml#Collections#ITreeTableCounter#Combine(Syncfusion.UI.Xaml.Collections.ITreeTableCounter,System.Int32)">
            <summary>
            Combines one tree object with another and returns the new object.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounter.CreateCounter">
            <summary>
            Factory method creates a new counter object of the same type as this object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounter.OnCombineCounters(Syncfusion.UI.Xaml.Collections.ITreeTableCounter,Syncfusion.UI.Xaml.Collections.ITreeTableCounter,System.Int32)">
            <summary>
            Called to combine the values of two counter objects. Results are saved back into this counter object.
            A cookie can filter the operation to a limited set of counter types.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="cookie">The cookie.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounter.Combine(Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounter,System.Int32)">
            <summary>
            Combines the counter values of this counter object with the values of another counter object
            and returns a new counter object.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounter.Compare(Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounter,System.Int32)">
            <summary>
            Compares this counter with another counter. A cookie can specify
            a specific counter type.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounter.IsEmpty(System.Int32)">
            <summary>
            Indicates whether the counter object is empty. A cookie can specify
            a specific counter type.
            </summary>
            <param name="cookie">The cookie.</param>
            <returns>
            	<c>true</c> if the specified cookie is empty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounter.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounter.Kind">
            <summary>
            The Counter Kind.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterBranch">
            <summary>
            A tree table branch with a counter.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryBranch">
            <summary>
            A tree table branch with a counter.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryBranch.#ctor(Syncfusion.UI.Xaml.Collections.TreeTable)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryBranch"/>.
            </summary>
            <param name="tree"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryBranch.GetLeftC">
            <summary>
            Returns the left branch node cast to ITreeTableSummaryNode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryBranch.GetRightC">
            <summary>
            Returns the right branch node cast to ITreeTableSummaryNode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryBranch.GetSummaries(Syncfusion.UI.Xaml.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
            <param name="emptySummaries">The empty summaries.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryBranch.InvalidateSummariesBottomUp(System.Boolean)">
            <summary>
            Walks up parent branches and reset summaries.
            </summary>
            <param name="notifyParentRecordSource"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryBranch.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty in this node and child nodes.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryBranch.TreeTableWithSummary">
            <summary>
            Returns the tree this branch belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryBranch.Parent">
            <summary>
            Gets / sets the parent branch.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryBranch.HasSummaries">
            <summary>
            Indicates whether this node has summaries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterBranch.#ctor(Syncfusion.UI.Xaml.Collections.TreeTable)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterBranch"/>.
            </summary>
            <param name="tree"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterBranch.GetCounterPositionOfChild(Syncfusion.UI.Xaml.Collections.ITreeTableNode)">
            <summary>
            Returns the cumulative counter position object of a child node with all counter values.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterBranch.GetLeftC">
            <summary>
            Returns the left branch node cast to ITreeTableCounterNode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterBranch.GetRightC">
            <summary>
            Returns the right branch node cast to ITreeTableCounterNode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterBranch.GetCounterTotal">
            <summary>
            Returns the total of this node's counter and child nodes (cached).
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterBranch.GetCounterPosition">
            <summary>
            Returns the cumulative position of this node.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterBranch.InvalidateCounterBottomUp(System.Boolean)">
            <summary>
            Invalidates the counter bottom up.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterBranch.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all counters dirty in this node and child nodes.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterBranch.TreeTableWithCounter">
            <summary>
            Returns the tree this branch belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterBranch.Parent">
            <summary>
            Gets / sets the parent branch.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter">
            <summary>
            A balanced tree with <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEntry"/> entries.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.TreeTableWithSummary">
            <summary>
            A balanced tree with <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryEntry"/> entries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummary.#ctor(System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableWithSummary"/>.
            </summary>
            <param name="sorted"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummary.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty.
            </summary>
            <param name="notifySummariesSource">if set to <c>true</c> notify summaries source.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummary.GetSummaries(Syncfusion.UI.Xaml.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummary.Insert(System.Int32,Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryEntry)">
            <summary>
            Inserts a <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryEntry"/> object at the specified index.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummary.Remove(Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryEntry)">
            <summary>
            Removes an object from the tree.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummary.Contains(Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryEntry)">
            <summary>
            Indicates whether an object belongs to the tree.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummary.IndexOf(Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryEntry)">
            <summary>
            Returns the index of an object in the tree.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummary.Add(Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryEntry)">
            <summary>
            Appends an object.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummary.CopyTo(Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryEntry[],System.Int32)">
            <summary>
            Copies the elements of this tree to an array.
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummary.GetEnumerator">
            <summary>
            Returns a strongly typed enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableWithSummary.HasSummaries">
            <summary>
            Indicates whether the tree has summaries.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableWithSummary.Item(System.Int32)">
            <summary>
            Gets / sets a TreeTableWithSummaryEntry.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter.#ctor(Syncfusion.UI.Xaml.Collections.ITreeTableCounter,System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter"/>.
            </summary>
            <param name="startPos"></param>
            <param name="sorted"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter.EndInit">
            <summary>
            Ends optimization of insertion of elements when tree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all counters dirty.
            </summary>
            <param name="notifyCounterSource"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter.GetCounterTotal">
            <summary>
            Returns the total of all counters in this tree.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter.GetStartCounterPosition">
            <summary>
            Returns the starting counter for this tree.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter.GetEntryAtCounterPosition(Syncfusion.UI.Xaml.Collections.ITreeTableCounter,System.Int32)">
            <summary>
            Overloaded. Returns an entry at the specified counter position. A cookie defines the type of counter.
            </summary>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter.GetEntryAtCounterPosition(Syncfusion.UI.Xaml.Collections.ITreeTableCounter,System.Int32,System.Boolean)">
            <summary>
            Returns an entry at the specified counter position. A cookie defines the type of counter.
            </summary>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <param name="preferLeftMost">Indicates if the leftmost entry should be returned if multiple tree elements have the
            same searchPosition.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter.GetEntryAtCounterPosition(Syncfusion.UI.Xaml.Collections.ITreeTableCounter,Syncfusion.UI.Xaml.Collections.ITreeTableCounter,System.Int32)">
            <summary>
            Gets the entry at counter position.
            </summary>
            <param name="start">The start.</param>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter.GetEntryAtCounterPosition(Syncfusion.UI.Xaml.Collections.ITreeTableCounter,Syncfusion.UI.Xaml.Collections.ITreeTableCounter,System.Int32,System.Boolean)">
            <summary>
            Gets the entry at counter position.
            </summary>
            <param name="start">The start.</param>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <param name="preferLeftMost">if set to <c>true</c> prefer left most.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter.GetNextNotEmptyCounterEntry(Syncfusion.UI.Xaml.Collections.ITreeTableEntry,System.Int32)">
            <summary>
            Returns the subsequent entry in the collection for which the specific counter is not empty.
            A cookie defines the type of counter.
            </summary>
            <param name="current">The current.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter.GetPreviousNotEmptyCounterEntry(Syncfusion.UI.Xaml.Collections.ITreeTableEntry,System.Int32)">
            <summary>
            Returns the previous entry in the collection for which the specific counter is not empty.
            A cookie defines the type of counter.
            </summary>
            <param name="current">The current.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter.GetNextVisibleEntry(Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEntry)">
            <summary>
            Returns the next entry in the collection for which CountVisible counter is not empty.
            </summary>
            <param name="current">The current.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter.GetPreviousVisibleEntry(Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEntry)">
            <summary>
            Returns the previous entry in the collection for which CountVisible counter is not empty.
            </summary>
            <param name="current">The current.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter.Insert(System.Int32,Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEntry)">
            <summary>
            Inserts a <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEntry"/> object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter.Remove(Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEntry)">
            <summary>
            Removes an object from the tree.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter.Contains(Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEntry)">
            <summary>
            Indicates whether an entry belongs to the tree.
            </summary>
            <param name="value">The entry.</param>
            <returns>
            	<c>true</c> if tree contains the specified entry; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter.IndexOf(Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEntry)">
            <summary>
            Returns the position of an object in the tree.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter.Add(Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEntry)">
            <summary>
            Appends an object.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter.CopyTo(Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEntry[],System.Int32)">
            <summary>
            Copies the elements of this tree to an array.
            </summary>
            <param name="array">The array.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter.GetEnumerator">
            <summary>
            Returns a strongly typed enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter.Item(System.Int32)">
            <summary>
            Gets / sets a TreeTableWithCounterEntry.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEnumerator">
            <summary>
            A strongly typed enumerator for the <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter"/> collection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEnumerator.#ctor(Syncfusion.UI.Xaml.Collections.TreeTable)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEnumerator"/>.
            </summary>
            <param name="tree"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableWithCounterEnumerator.Current">
            <summary>
            Returns the current <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableWithCounter"/> object.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounterSource">
            <summary>
            An object that counts objects that are marked "Visible". It implements
            the ITreeTableCounterSource interface and creates a <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounter"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounterSource.#ctor(System.Double)">
            <summary>
            Initializes the object with visible count.
            </summary>
            <param name="visibleCount">The visible count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounterSource.InvalidateCounterBottomUp">
            <summary>
            Marks all counters dirty in this object and parent nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounterSource.GetCounter">
            <summary>
            Returns the counter object with counters.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounterSource.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all counters dirty in this object and child nodes.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.ITreeTableSummary">
            <summary>
            Interface definition for a summary object.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableSummary.Combine(Syncfusion.UI.Xaml.Collections.ITreeTableSummary)">
            <summary>
            Combines this summary information with another object's summary and returns a new object.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.ITreeTableEmptySummaryArraySource">
            <summary>
            Provides a <see cref="M:Syncfusion.UI.Xaml.Collections.ITreeTableEmptySummaryArraySource.GetEmptySummaries"/> method.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableEmptySummaryArraySource.GetEmptySummaries">
            <summary>
            Gets an array of summary objects.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.ITreeTableSummaryArraySource">
            <summary>
            Interface definition for an object that has summaries.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableSummaryArraySource.GetSummaries(Syncfusion.UI.Xaml.Collections.ITreeTableEmptySummaryArraySource,System.Boolean@)">
            <summary>
            Returns an array of summary objects.
            </summary>
            <param name="emptySummaries">An array of empty summary objects.</param>
            <param name="changed">Returns True if summaries were recalculated; False if already cached.</param>
            <returns>An array of summary objects.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableSummaryArraySource.InvalidateSummariesTopDown">
            <summary>
            Marks all summaries dirty in this object and child nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableSummaryArraySource.InvalidateSummariesBottomUp">
            <summary>
            Marks all summaries dirty in this object and parent nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.ITreeTableSummaryArraySource.InvalidateSummary">
            <summary>
            Marks all summaries dirty in this object only.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryEnumerator">
            <summary>
            A strongly typed enumerator for the <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableWithSummary"/> collection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryEnumerator.#ctor(Syncfusion.UI.Xaml.Collections.TreeTable)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryEnumerator"/>.
            </summary>
            <param name="tree"></param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Collections.TreeTableWithSummaryEnumerator.Current">
            <summary>
            Returns the current <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableWithSummary"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.ScrollableContentViewer.ManipulationAnimation">
            <summary>
            This Method is used for Translation When the User Pulls the Grid along the Edges
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Grid.ScrollableContentViewer.WireEvents">
            <summary>
            Dispatch Timer is a DispatcherTimer Method, Checks for User Actions to hide the Scrollbars if the Control ain't active
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection">
            <summary>
            A collection of entities for which distances need to be counted. The
            collection provides methods for mapping from a distance position to
            an entity and vice versa.<para/>
            For example, in a scrollable grid control you have rows with different heights. 
            Use this collection to determine the total height for all rows in the grid,
            quickly detemine the row index for a given point and also quickly determine
            the point at which a row is displayed. This also allows a mapping between the 
            scrollbars value and the rows or columns associated with that value.
            </summary>
            <remarks>
            DistanceCounterCollection uses a high-water mark technique for allocating
            objects up to the modified entry with the highest index. When you modify 
            the size of an entry the collection ensures that that objects are allocated 
            for all entries up to the given index. Entries that are after the modified 
            entry are assumed to have the DefaultSize and will not be allocated. 
            <para/>
            The best-case scenario is when all lines have the same DefaultSize. In such
            case the internal collection remains completely empty and will not cause 
            any overhead. This makes DistanceCounterCollection also an attractive solution
            for the scenario where all entries have the same size (e.g. a databound grid
            where all rows have same height).
            </remarks>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection">
            <summary>
            A collection of entities for which distances need to counted. The
            collection provides methods for mapping from a distance position to
            an entity and vice versa.<para/>
            For example, in a scrollable grid control you have rows with different heights. 
            Use this collection to determine the total height for all rows in the grid,
            quickly detemine the row index for a given point and also quickly determine
            the point at which a row is displayed. This also allows a mapping between the 
            scrollbars value and the rows or columns associated with that value.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection.SetRange(System.Int32,System.Int32,System.Double)">
            <summary>
            Hides a specified range of entities (lines, rows or colums)
            </summary>
            <param name="from">The index for the first entity&gt;</param>
            <param name="to">The raw index for the last entity</param>
            <param name="distance">The distance.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection.ResetRange(System.Int32,System.Int32)">
            <summary>
            Resets the range by restoring the default distance
            for all entries in the specified range.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection.GetNextVisibleIndex(System.Int32)">
            <summary>
            Skip subsequent entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection.GetPreviousVisibleIndex(System.Int32)">
            <summary>
            Skip previous entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection.IndexOfCumulatedDistance(System.Double)">
            <summary>
            Gets the index of an entity in this collection for which
            the cumulated count of previous distances is greater or equal
            the specified cumulatedDistance. (e.g. return row index for
            pixel position).
            </summary>
            <param name="cumulatedDistance">The cumulated count of previous distances.</param>
            <returns>The entity index.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection.GetCumulatedDistanceAt(System.Int32)">
            <summary>
            Gets the cumulated count of previous distances for the
            entity at the specifiec index. (e.g. return pixel position
            for a row index).
            </summary>
            <param name="index">The entity index.</param>
            <returns>The cumulated count of previous distances for the
            entity at the specifiec index.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection.SetNestedDistances(System.Int32,Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection)">
            <summary>
            Assigns a collection with nested entities to an item.
            </summary>
            <param name="index">The index.</param>
            <param name="nestedCollection">The nested collection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection.GetNestedDistances(System.Int32)">
            <summary>
            Gets the nested entities at a given index. If the index does not hold
            a mested distances collection the method returns null.
            </summary>
            <param name="index">The index.</param>
            <returns>The nested collection or null.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection.GetNextScrollValue(System.Double)">
            <summary>
            Gets the distance position of the next entity after a given point. 
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection.GetPreviousScrollValue(System.Double)">
            <summary>
            Gets the distance position of the entity preceeding a given point. If the point
            is in between entities the starting point of the matching entity
            is returned.
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection.GetAlignedScrollValue(System.Double)">
            <summary>
            Gets the aligned scroll value which is the starting point of the entity
            found at the given distance position.
            </summary>
            <param name="point">The point.</param>
            <returns>The starting point of the entity.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection.ConnectWithParent(Syncfusion.UI.Xaml.Collections.ITreeTableCounterSource)">
            <summary>
            Connects a nested distance collection with a parent.
            </summary>
            <param name="treeTableCounterSource">The nested tree table visible counter source.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection.Insert(System.Int32,System.Int32)">
            <summary>
            Insert entities in the collection.
            </summary>
            <param name="insertAt">Insert position.</param>
            <param name="count">The number of entities to be inserted.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection.Remove(System.Int32,System.Int32)">
            <summary>
            Removes enities from the collection.
            </summary>
            <param name="removeAt">Index of the first entity to be removed.</param>
            <param name="count">The number of entities to be removed.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection.Count">
            <summary>
            The raw number of entities (lines, rows or columns).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection.DefaultDistance">
            <summary>
            The default distance (row height or column width) an entity spans 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection.TotalDistance">
            <summary>
            The total distance all entities span (e.g. total height of all rows in grid)
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection.Item(System.Int32)">
            <summary>
            Gets or sets the distance for an entity.
            </summary>
            <param name="index">The index for the entity</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.#ctor">
            <summary>
            Constructs the class and initializes the internal tree.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.SetRange(System.Int32,System.Int32,System.Double)">
            <summary>
            Hides a specified range of entities (lines, rows or colums)
            </summary>
            <param name="from">The index for the first entity&gt;</param>
            <param name="to">The raw index for the last entity</param>
            <param name="distance">The distance.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.SetNestedDistances(System.Int32,Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection)">
            <summary>
            Assigns a collection with nested entities to an item.
            </summary>
            <param name="index">The index.</param>
            <param name="nestedCollection">The nested collection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.GetNestedDistances(System.Int32)">
            <summary>
            Gets the nested entities at a given index. If the index does not hold
            a mested distances collection the method returns null.
            </summary>
            <param name="index">The index.</param>
            <returns>The nested collection or null.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.GetNextScrollValue(System.Double)">
            <summary>
            Gets the distance position of the next entity after a given point. 
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.GetPreviousScrollValue(System.Double)">
            <summary>
            Gets the distance position of the entity preceeding a given point. If the point
            is in between entities the starting point of the matching entity
            is returned.
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.GetAlignedScrollValue(System.Double)">
            <summary>
            Gets the aligned scroll value which is the starting point of the entity
            found at the given distance position.
            </summary>
            <param name="point">The point.</param>
            <returns>The starting point of the entity.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.ConnectWithParent(Syncfusion.UI.Xaml.Collections.ITreeTableCounterSource)">
            <summary>
            Connects a nested distance collection with a parent.
            </summary>
            <param name="nestedTreeTableVisibleCounterSource">The nested tree table visible counter source.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.ResetRange(System.Int32,System.Int32)">
            <summary>
            Resets the range by restoring the default distance
            for all entries in the specified range.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.GetNextVisibleIndex(System.Int32)">
            <summary>
            Skip subsequent entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.GetPreviousVisibleIndex(System.Int32)">
            <summary>
            Skip previous entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.IndexOfCumulatedDistance(System.Double)">
            <summary>
            Gets the index of an entity in this collection for which
            the cumulated count of previous distances is greater or equal
            the specified cumulatedDistance. (e.g. return row index for
            pixel position).
            </summary>
            <param name="cumulatedDistance">The cumulated count of previous distances.</param>
            <returns>The entity index.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.GetCumulatedDistanceAt(System.Int32)">
            <summary>
            Gets the cumulated count of previous distances for the
            entity at the specifiec index. (e.g. return pixel position
            for a row index).
            </summary>
            <param name="index">The entity index.</param>
            <returns>The cumulated count of previous distances for the
            entity at the specifiec index.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.Insert(System.Int32,System.Int32)">
            <summary>
            Insert entities in the collection.
            </summary>
            <param name="insertAt">Insert position.</param>
            <param name="count">The number of entities to be inserted.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.Remove(System.Int32,System.Int32)">
            <summary>
            Removes enities from the collection.
            </summary>
            <param name="removeAt">Index of the first entity to be removed.</param>
            <param name="count">The number of entities to be removed.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.Count">
            <summary>
            The raw number of entities (lines, rows or columns).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.DefaultDistance">
            <summary>
            The default distance (row height or column width) an entity spans 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.TotalDistance">
            <summary>
            The total distance all entities span (e.g. total height of all rows in grid)
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.Item(System.Int32)">
            <summary>
            Gets or sets the distance for an entity.
            </summary>
            <param name="index">The index for the entity</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource">
            <summary>
            An object that maintains a collection of nested distances and wires
            it to a parent distance collection. The object is used by the 
            DistanceCounterCollection.SetNestedDistances method to associated
            the nested distances with an index in the parent collection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource.#ctor(Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection,Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource"/> class.
            </summary>
            <param name="parentDistances">The parent distances.</param>
            <param name="nestedDistances">The nested distances.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource.InvalidateCounterBottomUp">
            <summary>
            Marks all counters dirty in this object and parent nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource.GetCounter">
            <summary>
            Returns the <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounter"/> object with counters.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource.Entry">
            <summary>
            Gets or sets the counter entry.
            </summary>
            <value>The entry.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource.ParentDistances">
            <summary>
            Gets the parent distances.
            </summary>
            <value>The parent distances.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource.NestedDistances">
            <summary>
            Gets the nested distances.
            </summary>
            <value>The nested distances.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset">
            <summary>
            A collection of entities that is shared with a parent collection for which distances
            need to counted. The collection only is a subset for a specific range in
            the parent distance collection.
            <para/>
            When you change the size of an element in this collection the change will
            also be reflected in the parent collection and vice versa.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.IDistancesHost">
            <summary>
            An object that implements the <see cref="P:Syncfusion.UI.Xaml.ScrollAxis.IDistancesHost.Distances"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.IDistancesHost.Distances">
            <summary>
            Gets or sets the distances.
            </summary>
            <value>The distances.</value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset.#ctor(Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset"/> class.
            </summary>
            <param name="trackedParentCollection">The parent collection for which a subset is "tracked".</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset.Clear">
            <summary>
            Restores the distances in the parent collection for this subset to their default distance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset.SetRange(System.Int32,System.Int32,System.Double)">
            <summary>
            Hides a specified range of entities (lines, rows or colums)
            </summary>
            <param name="from">The index for the first entity&gt;</param>
            <param name="to">The raw index for the last entity</param>
            <param name="distance"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset.ResetRange(System.Int32,System.Int32)">
            <summary>
            Resets the range by restoring the default distance
            for all entries in the specified range.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset.GetNextVisibleIndex(System.Int32)">
            <summary>
            Skip subsequent entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset.GetPreviousVisibleIndex(System.Int32)">
            <summary>
            Skip previous entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset.IndexOfCumulatedDistance(System.Double)">
            <summary>
            Gets the index of an entity in this collection for which
            the cumulated count of previous distances is greater or equal
            the specified cumulatedDistance. (e.g. return row index for
            pixel position).
            </summary>
            <param name="cumulatedDistance">The cumulated count of previous distances.</param>
            <returns>The entity index.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset.GetCumulatedDistanceAt(System.Int32)">
            <summary>
            Gets the cumulated count of previous distances for the
            entity at the specifiec index. (e.g. return pixel position
            for a row index).
            </summary>
            <param name="index">The entity index.</param>
            <returns>
            The cumulated count of previous distances for the
            entity at the specifiec index.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset.SetNestedDistances(System.Int32,Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection)">
            <summary>
            Assigns a collection with nested entities to an item.
            </summary>
            <param name="index">The index.</param>
            <param name="nestedCollection">The nested collection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset.GetNestedDistances(System.Int32)">
            <summary>
            Gets the nested entities at a given index. If the index does not hold
            a mested distances collection the method returns null.
            </summary>
            <param name="index">The index.</param>
            <returns>The nested collection or null.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset.GetNextScrollValue(System.Double)">
            <summary>
            Gets the distance position of the next entity after a given point.
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset.GetPreviousScrollValue(System.Double)">
            <summary>
            Gets the distance position of the entity preceeding a given point. If the point
            is in between entities the starting point of the matching entity
            is returned.
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset.GetAlignedScrollValue(System.Double)">
            <summary>
            Gets the aligned scroll value which is the starting point of the entity
            found at the given distance position.
            </summary>
            <param name="point">The point.</param>
            <returns>The starting point of the entity.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset.Syncfusion#UI#Xaml#ScrollAxis#IDistanceCounterCollection#ConnectWithParent(Syncfusion.UI.Xaml.Collections.ITreeTableCounterSource)">
            <summary>
            This method is not supported for DistanceCounterSubset.
            </summary>
            <param name="treeTableCounterSource">The nested tree table visible counter source.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset.Insert(System.Int32,System.Int32)">
            <summary>
            Insert entities in the collection.
            </summary>
            <param name="insertAt">Insert position.</param>
            <param name="count">The number of entities to be inserted.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset.Remove(System.Int32,System.Int32)">
            <summary>
            Removes enities from the collection.
            </summary>
            <param name="removeAt">Index of the first entity to be removed.</param>
            <param name="count">The number of entities to be removed.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset.Start">
            <summary>
            Gets or sets the starting index of this collection in the parent collection.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset.End">
            <summary>
            Gets or sets the ending index of this collection in the parent collection.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset.Count">
            <summary>
            The raw number of entities (lines, rows or columns).
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset.DefaultDistance">
            <summary>
            The default distance (row height or column width) an entity spans
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset.TotalDistance">
            <summary>
            The total distance all entities span (e.g. total height of all rows in grid)
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceCounterSubset.Item(System.Int32)">
            <summary>
            Gets or sets the distance for an entity.
            </summary>
            <value></value>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection">
            <summary>
            A collection of entities for which distances need to be counted. The
            collection provides methods for mapping from a distance position to
            an entity and vice versa.<para/>
            For example, in a scrollable grid control you have rows with different heights. 
            Use this collection to determine the total height for all rows in the grid,
            quickly detemine the row index for a given point and also quickly determine
            the point at which a row is displayed. This also allows a mapping between the 
            scrollbars value and the rows or columns associated with that value.
            </summary>
            <remarks>
            DistanceCounterCollection internally uses ranges for allocating
            objects up to the modified entry with the highest index. When you modify 
            the size of an entry the collection ensures that that objects are allocated 
            for all entries up to the given index. Entries that are after the modified 
            entry are assumed to have the DefaultSize and will not be allocated. 
            <para/>
            Ranges will only be allocated for those lines that have different sizes.
            If you do for example only change the size of line 100 to be 10 then the collection
            will internally create two ranges: Range 1 from 0-99 with DefaultSize and
            Range 2 from 100-100 with size 10. This approach makes this collection
            work very efficient with grid scenarios where often many rows have
            the same height.
            </remarks>
        </member>
        <member name="F:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.Empty">
            <summary>
            Returns an empty collection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.#ctor(System.Double)">
            <summary>
            Constructs the class and initializes the internal tree.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.SetNestedDistances(System.Int32,Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection)">
            <summary>
            Assigns a collection with nested entities to an item.
            </summary>
            <param name="index">The index.</param>
            <param name="nestedCollection">The nested collection.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.GetNestedDistances(System.Int32)">
            <summary>
            Gets the nested entities at a given index. If the index does not hold
            a mested distances collection the method returns null.
            </summary>
            <param name="index">The index.</param>
            <returns>The nested collection or null.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.GetNextScrollValue(System.Double)">
            <summary>
            Gets the distance position of the next entity after a given point. 
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.GetPreviousScrollValue(System.Double)">
            <summary>
            Gets the distance position of the entity preceeding a given point. If the point
            is in between entities the starting point of the matching entity
            is returned.
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.GetAlignedScrollValue(System.Double)">
            <summary>
            Gets the aligned scroll value which is the starting point of the entity
            found at the given distance position.
            </summary>
            <param name="point">The point.</param>
            <returns>The starting point of the entity.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.ConnectWithParent(Syncfusion.UI.Xaml.Collections.ITreeTableCounterSource)">
            <summary>
            Connects a nested distance collection with a parent.
            </summary>
            <param name="treeTableCounterSource">The nested tree table visible counter source.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.GetNextVisibleIndex(System.Int32)">
            <summary>
            Skip subsequent entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.GetPreviousVisibleIndex(System.Int32)">
            <summary>
            Skip previous entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.IndexOfCumulatedDistance(System.Double)">
            <summary>
            Gets the index of an entity in this collection for which
            the cumulated count of previous distances is greater or equal
            the specified cumulatedDistance. (e.g. return row index for
            pixel position).
            </summary>
            <param name="cumulatedDistance">The cumulated count of previous distances.</param>
            <returns>The entity index.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.GetCumulatedDistanceAt(System.Int32)">
            <summary>
            Gets the cumulated count of previous distances for the
            entity at the specifiec index. (e.g. return pixel position
            for a row index).
            </summary>
            <param name="index">The entity index.</param>
            <returns>The cumulated count of previous distances for the
            entity at the specifiec index.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.SetRange(System.Int32,System.Int32,System.Double)">
            <summary>
            Hides a specified range of entities (lines, rows or colums)
            </summary>
            <param name="from">The index for the first entity&gt;</param>
            <param name="to">The raw index for the last entity</param>
            <param name="distance">The distance.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.ResetRange(System.Int32,System.Int32)">
            <summary>
            Resets the range by restoring the default distance
            for all entries in the specified range.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.Insert(System.Int32,System.Int32)">
            <summary>
            Insert entities in the collection.
            </summary>
            <param name="insertAt">Insert position.</param>
            <param name="count">The number of entities to be inserted.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.Insert(System.Int32,System.Int32,System.Double)">
            <summary>
            Insert entities in the collection.
            </summary>
            <param name="insertAt">Insert position.</param>
            <param name="count">The number of entities to be inserted.</param>
            <param name="distance">The distance to be set.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.Remove(System.Int32,System.Int32)">
            <summary>
            Removes enities from the collection.
            </summary>
            <param name="removeAt">Index of the first entity to be removed.</param>
            <param name="count">The number of entities to be removed.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.Count">
            <summary>
            The raw number of entities (lines, rows or columns).
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.DefaultDistance">
            <summary>
            The default distance (row height or column width) an entity spans 
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.TotalDistance">
            <summary>
            The total distance all entities span (e.g. total height of all rows in grid)
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.Item(System.Int32)">
            <summary>
            Gets or sets the distance for an entity.
            </summary>
            <param name="index">The index for the entity</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource">
            <summary>
            An object that maintains a collection of nested distances and wires
            it to a parent distance collection. The object is used by the 
            DistanceCounterCollection.SetNestedDistances method to associated
            the nested distances with an index in the parent collection.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounterSource">
            <summary>
            An object that counts objects that are marked "Visible". It implements
            the ITreeTableCounterSource interface and creates a <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounter"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounterSource.#ctor(System.Double,System.Int32)">
            <summary>
            Initializes the object with visible count.
            </summary>
            <param name="visibleCount">The visible count.</param>
            <param name="lineCount">The line count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounterSource.ToString">
            <summary>
            Returns a string describing the state of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounterSource.LineCount">
            <summary>
            Gets or sets the line count.
            </summary>
            <value>The line count.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounterSource.SingleLineDistance">
            <summary>
            Gets or sets the distance of a single line.
            </summary>
            <value>The single line distance.</value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource.#ctor(Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection,Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection,Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounterEntry)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource"/> class.
            </summary>
            <param name="parentDistances">The parent distances.</param>
            <param name="nestedDistances">The nested distances.</param>
            <param name="entry">The entry.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource.InvalidateCounterBottomUp">
            <summary>
            Marks all counters dirty in this object and parent nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource.GetCounter">
            <summary>
            Returns the <see cref="T:Syncfusion.UI.Xaml.Collections.TreeTableVisibleCounter"/> object with counters.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource.Entry">
            <summary>
            Gets or sets the counter entry.
            </summary>
            <value>The entry.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource.ParentDistances">
            <summary>
            Gets the parent distances.
            </summary>
            <value>The parent distances.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource.NestedDistances">
            <summary>
            Gets the nested distances.
            </summary>
            <value>The nested distances.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounterKind">
            <summary>
            A collection of integers used to specify various counter kinds.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounterKind.CountAll">
            <summary>
            All counters.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounterKind.Distance">
            <summary>
            Visible Counter.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounterKind.Lines">
            <summary>
            Line Counter.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounter">
            <summary>
            A counter that counts objects that are marked "Visible".
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounter.Empty">
            <summary>
            Returns an empty DistanceLineCounter that represents zero visible elements.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounter.#ctor(System.Double,System.Int32)">
            <summary>
            Initializes a <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounter"/> with a pecified number of visible elements.
            </summary>
            <param name="distance">The visible count.</param>
            <param name="lineCount">The line count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounter.GetValue(System.Int32)">
            <summary>
            Returns the integer value of the counter. A cookie specifies
            a specific counter type.
            </summary>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounter.Syncfusion#UI#Xaml#Collections#ITreeTableCounter#Combine(Syncfusion.UI.Xaml.Collections.ITreeTableCounter,System.Int32)">
            <summary>
            Combines one tree obkect with another and returns the new object.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounter.Combine(Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounter,System.Int32)">
            <summary>
            Combines the counter values of this counter object with the values of another counter object
            and returns a new counter object.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounter.Compare(Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounter,System.Int32)">
            <summary>
            Compares this counter with another counter. A cookie can specify
            a specific counter type.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounter.IsEmpty(System.Int32)">
            <summary>
            Indicates whether the counter object is empty. A cookie can specify
            a specific counter type.
            </summary>
            <param name="cookie">The cookie.</param>
            <returns>
            	<c>true</c> if the specified cookie is empty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounter.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounter.LineCount">
            <summary>
            Gets the line count.
            </summary>
            <value>The line count.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounter.Distance">
            <summary>
            Gets the distance.
            </summary>
            <value>The distance.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounter.Kind">
            <summary>
            The Counter Kind.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.DistanceLineCounterTree">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost">
            <summary>
            A collection that manages lines with varying height and hidden state. 
            It has properties for header and footer lines, total line count, default
            size of a line and also lets you add nested collections. Methods
            are provided for changing the values and getting the total extent.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.ILineSizeHost">
            <summary>
            A collection that manages lines with varying height and hidden state. 
            It has properties for header and footer lines, total line count, default
            size of a line and also lets you add nested collections.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ILineSizeHost.GetDefaultLineSize">
            <summary>
            Returns the default line size.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ILineSizeHost.GetLineCount">
            <summary>
            Returns the line count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ILineSizeHost.GetSize(System.Int32,System.Int32@)">
            <summary>
            Gets the size.
            </summary>
            <param name="index">The index.</param>
            <param name="repeatValueCount">The number of subsequent values with same size.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ILineSizeHost.GetHeaderLineCount">
            <summary>
            Gets the header line count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ILineSizeHost.GetFooterLineCount">
            <summary>
            Gets the footer line count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ILineSizeHost.GetHidden(System.Int32,System.Int32@)">
            <summary>
            Gets the hidden state for a line.
            </summary>
            <param name="index">The index.</param>
            <param name="repeatValueCount">The number of subsequent lines with same state.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ILineSizeHost.InitializeScrollAxis(Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase)">
            <summary>
            Initializes the scroll axis.
            </summary>
            <param name="scrollAxis">The scroll axis.</param>
        </member>
        <member name="E:Syncfusion.UI.Xaml.ScrollAxis.ILineSizeHost.LineSizeChanged">
            <summary>
            Occurs when a lines size was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.ScrollAxis.ILineSizeHost.LineHiddenChanged">
            <summary>
            Occurs when a lines hidden state changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.ScrollAxis.ILineSizeHost.DefaultLineSizeChanged">
            <summary>
            Occurs when the default line size changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.ScrollAxis.ILineSizeHost.LineCountChanged">
            <summary>
            Occurs when the line count was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.ScrollAxis.ILineSizeHost.HeaderLineCountChanged">
            <summary>
            Occurs when the header line count was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.ScrollAxis.ILineSizeHost.FooterLineCountChanged">
            <summary>
            Occurs when the footer line count was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.ScrollAxis.ILineSizeHost.LinesInserted">
            <summary>
            Occurs when lines were inserted.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.ScrollAxis.ILineSizeHost.LinesRemoved">
            <summary>
            Occurs when lines were removed.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost.GetNestedLines(System.Int32)">
            <summary>
            Gets the nested lines.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost.SetNestedLines(System.Int32,Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost)">
            <summary>
            Sets the nested lines.
            </summary>
            <param name="index">The index.</param>
            <param name="nestedLines">The nested lines.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost.InsertLines(System.Int32,System.Int32,Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost)">
            <summary>
            Insert a number of lines.
            </summary>
            <param name="insertAtLine">The index of the first line to insert.</param>
            <param name="count">The count.</param>
            <param name="moveLines">A container with saved state from a preceeding <see cref="M:Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost.RemoveLines(System.Int32,System.Int32,Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost)"/> call when lines should be moved. When it is null empty lines with default size are inserted.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost.RemoveLines(System.Int32,System.Int32,Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost)">
            <summary>
            Removes a number of lines.
            </summary>
            <param name="removeAtLine">The index of the first line to be removed.</param>
            <param name="count">The count.</param>
            <param name="moveLines">A container to save state for a subsequent <see cref="M:Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost.InsertLines(System.Int32,System.Int32,Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost)"/> call when lines should be moved.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost.CreateMoveLines">
            <summary>
            Creates the object which holds temporary state when moving lines.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost.SetHidden(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the hidden state for a range of lines.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="hide">if set to <c>true</c> hide the lines.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost.SetRange(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets the line size for a range.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="size">The size.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost.TotalExtent">
            <summary>
            Gets the total extent which is the total of all line sizes. Note: This propert only 
            works if the DistanceCollection has been setup for pixel scrolling; otherwise it returns
            double.NaN.
            </summary>
            <value>The total extent or double.NaN.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost.SupportsNestedLines">
            <summary>
            Gets whether the host supports nesting.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost.SupportsInsertRemove">
            <summary>
            Gets whether the host supports inserting and removing lines.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost.DefaultLineSize">
            <summary>
            Gets or sets the default size of lines.
            </summary>
            <value>The default size of lines.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost.FooterLineCount">
            <summary>
            Gets or sets the footer line count.
            </summary>
            <value>The footer line count.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost.HeaderLineCount">
            <summary>
            Gets or sets the header line count.
            </summary>
            <value>The header line count.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost.LineCount">
            <summary>
            Gets or sets the line count.
            </summary>
            <value>The line count.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost.Item(System.Int32)">
            <summary>
            Gets or sets the line size at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.EmptyLineSizeHost">
            <summary>
            Implements the <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.ILineSizeHost"/> interface for an empty collection
            that cannot be modified.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.ScrollAxis.EmptyLineSizeHost.Empty">
            <summary>
            Returns the empty collection.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.INestedDistancesHost">
            <summary>
            An object that implements the <see cref="M:Syncfusion.UI.Xaml.ScrollAxis.INestedDistancesHost.GetDistances(System.Int32)"/> method.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.INestedDistancesHost.GetDistances(System.Int32)">
            <summary>
            Gets the nested distances if a line contains a nested lines collection; null otherwise.
            </summary>
            <param name="line">The line.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.IScrollBar">
            <summary>
            Defines an interface that provides all properties to configure a scrollbar.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.IScrollBar.LargeChange">
            <summary>
            Gets or sets a value to be added to or subtracted from the value of the property when the scroll box is moved a large distance.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.IScrollBar.Maximum">
            <summary>
            Gets or sets the upper limit of values of the scrollable range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.IScrollBar.Minimum">
            <summary>
            Gets or sets the lower limit of values of the scrollable range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.IScrollBar.SmallChange">
            <summary>
            Gets or sets the value to be added to or subtracted from the value of the property when the scroll box is moved a small distance.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.IScrollBar.Value">
            <summary>
            Gets or sets a numeric value that represents the current position of the scroll box on the scroll bar control.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.IScrollBar.Enabled">
            <summary>
            Gets or sets a number that represents the current position of the scroll box on the scroll bar control.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis">
            <summary>
            The LineScrollAxis implements scrolling only for whole lines. You can
            hide lines and LineScrollAxis provides a mapping mechanism between the
            index of the line and the scroll index and vice versa. Hidden lines
            are not be counted when the scroll index is determined for a line.
            <para/>
            The LineScrollAxis does not support scrolling in between lines (pixel scrolling).
            This can be of advantage if you have a large number of lines with varying
            line sizes. In such case the LineScrollAxis does not need to maintain
            a collection that tracks line sizes whereas the <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis"/> does need to.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase">
            <summary>
            ScrollAxisBase is an abstract base class and implements scrolling
            logic for both horizontal and vertical scrolling in a <see cref="!:ScrollAxisControl"/>.
            Logical units in the ScrollAxisBase are called "Lines". With the 
            <see cref="!:ScrollAxisControl.ScrollRows"/> a line representes rows in a grid 
            and with <see cref="!:ScrollAxisControl.ScrollRows"/> a line represents columns in a grid.
            <para/>
            ScrollAxisBase has support for frozen header and footer lines, maintaining a
            scroll position and updating and listening to scrollbars. It also maintains
            a collection of <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo"/> items for all the lines that are
            visible in the viewing area. ScrollAxisBase wires itself with a 
            <see cref="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.ScrollLinesHost"/> and reacts to changes in line count,
            line sizes, hidden state and default line size.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.#ctor(Syncfusion.UI.Xaml.ScrollAxis.IScrollBar,Syncfusion.UI.Xaml.ScrollAxis.ILineSizeHost)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase"/> class.
            </summary>
            <param name="sb">The sb.</param>
            <param name="scrollLinesHost">The scroll lines host.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.UpdateScrollBar">
            <summary>
            Updates the scroll bar.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.SetLineHiddenState(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the hidden state of the lines.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="hide">if set to <c>true</c> [hide].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.SetLineSize(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets the size of the lines.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.GetLineSize(System.Int32,System.Int32@)">
            <summary>
            Gets size from ScrollLinesHost or if the line is being resized then get temporary value
            previously set with <see cref="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.SetLineResize(System.Int32,System.Double)"/>
            </summary>
            <param name="index">The index.</param>
            <param name="repeatSizeCount">The number of subsequent values with same size.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.GetLineSize(System.Int32)">
            <summary>
            Gets the size of the line.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.SetLineResize(System.Int32,System.Double)">
            <summary>
            Set temporary value for a line size during a resize operation without commiting
            value to SrollLinesHost.
            </summary>
            <param name="index">The index.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.ResetLineResize">
            <summary>
            Resets temporary value for line size after a resize operation 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.GetScrollLinesHostSize(System.Int32,System.Int32@)">
            <summary>
            Gets size from ScrollLinesHost or if the line is being resized then get temporary value
            previously set with <see cref="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.SetLineResize(System.Int32,System.Double)"/>. If size is negative then <see cref="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.DefaultLineSize"/> is returned.
            </summary>
            <param name="index">The index.</param>
            <param name="repeatSizeCount">The number of subsequent values with same size.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.OnLinesRemoved(System.Int32,System.Int32)">
            <summary>
            Called when lines were removed in ScrollLinesHost.
            </summary>
            <param name="removeAt">Index of the first removed line.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.OnLinesInserted(System.Int32,System.Int32)">
            <summary>
            Called when lines were inserted in ScrollLinesHost.
            </summary>
            <param name="insertAt">Index of the first inserted line.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.SetHeaderLineCount(System.Int32)">
            <summary>
            Sets the header line count.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.SetFooterLineCount(System.Int32)">
            <summary>
            Sets the footer line count.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.GetScrollLineIndex(System.Int32@,System.Double@)">
            <summary>
            Gets the index of the scroll line.
            </summary>
            <param name="scrollLindeIndex">Index of the scroll linde.</param>
            <param name="scrollLineOffset">The scroll line offset.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.SetScrollLineIndex(System.Int32,System.Double)">
            <summary>
            Sets the index of the scroll line.
            </summary>
            <param name="scrollLindeIndex">Index of the scroll linde.</param>
            <param name="scrollLineOffset">The scroll line offset.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.GetPreviousScrollLineIndex(System.Int32)">
            <summary>
            Gets the index of the previous scroll line.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.GetNextScrollLineIndex(System.Int32)">
            <summary>
            Gets the index of the next scroll line.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.ScrollToNextPage">
            <summary>
            Scrolls to next page.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.ScrollToPreviousPage">
            <summary>
            Scrolls to previous page.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.ScrollToNextLine">
            <summary>
            Scrolls to next line.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.ScrollToPreviousLine">
            <summary>
            Scrolls to previous line.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.AlignScrollLine">
            <summary>
            Aligns the scroll line.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.ScrollInView(System.Int32,System.Double)">
            <summary>
            Scrolls the line into viewable area.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <param name="lineSize">Size of the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.ScrollInView(System.Int32)">
            <summary>
            Scrolls the line into viewable area.
            </summary>
            <param name="lineIndex">Index of the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.MouseWheel(System.Int32)">
            <summary>
            This method is called in response to a MouseWheel event.
            </summary>
            <param name="delta">The delta.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.MarkDirty">
            <summary>
            Force recalculation of visible lines and scrollbar properties
            next time GetVisibleLines is called.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.GetVisibleLines">
            <summary>
            Gets the visible lines collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.ResetVisibleLines">
            <summary>
            Resets the visible lines collection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.VisiblePointToLineIndex(System.Double,System.Boolean)">
            <summary>
            Gets the visible line index for a point in the display.
            </summary>
            <param name="point">The point.</param>
            <param name="allowOutsideLines">Set this true if point can be below corner of last line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.VisiblePointToLineIndex(System.Double)">
            <summary>
            Gets the visible line index for a point in the display.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.GetVisibleLineAtPoint(System.Double)">
            <summary>
            Gets the visibles line for a point in the display.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.GetVisibleLineAtLineIndex(System.Int32)">
            <summary>
            Gets the visibles line that displays the line with the given absolut line index.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.GetVisibleLineAtLineIndex(System.Int32,System.Boolean)">
            <summary>
            Gets the visibles line that displays the line with the given absolut line index. If the
            line is outside the view and you specify allowCreateEmptyLineIfNotVisible then
            the method will create an empty line and initializes its LineIndex and LineSize.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <param name="allowCreateEmptyLineIfNotVisible">if set to <c>true</c> and if the
            line is outside the view then
            the method will create an empty line and initializes its LineIndex and LineSize.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.IsLineVisible(System.Int32)">
            <summary>
            Determines if the line with the given absolut line index is visible.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.AnyVisibleLines(System.Int32,System.Int32)">
            <summary>
            Determines if any of the lines with the given absolut line index are visible.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.GetOriginAndCornerOfBodyRegion(System.Double@,System.Double@)">
            <summary>
            Gets the origin and corner points of body region.
            </summary>
            <param name="origin">The origin.</param>
            <param name="corner">The corner.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.AdjustFooterExtentToAvoidGap(System.Double,System.Double)">
            <summary>
            Adjusts the footer extent to avoid gap between last visible line of body region
            and first line of footer in case the view is larger than the height/width of all
            lines.
            </summary>
            <param name="footerSize">Size of the footer.</param>
            <param name="arrangeSize">Size of the arrange.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.GetVisibleSection(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Return indexes for VisibleLinesCollection for area identified by section.
            </summary>
            <param name="section">0 - Header, 1 - Body, 2 - Footer</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.GetVisibleLinesRange(System.Int32)">
            <summary>
            Returns the first and last VisibleLine.LineIndex for area identified by section.
            </summary>
            <param name="section">0 - Header, 1 - Body, 2 - Footer</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.GetVisibleSection(Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisRegion,System.Int32@,System.Int32@)">
            <summary>
            Return indexes for VisibleLinesCollection for area identified by section.
            </summary>
            <param name="section">0 - Header, 1 - Body, 2 - Footer</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.GetBorderRangeClipPoints(Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo,Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo)">
            <summary>
            Returns the clipping area for the specified visible lines. Only if <see cref="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.IsClippedOrigin"/> is true for
            first line or if <see cref="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.IsClippedCorner"/> is true for last line then the area will be clipped. Otherwise
            the whole area from 0 to <see cref="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.RenderSize"/> is returned.
            </summary>
            <param name="firstLine">The first line.</param>
            <param name="lastLine">The last line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.GetLineNearCorner(System.Double,System.Double)">
            <summary>
            Gets the line near the given corner point. Use this method for hit-testing row or 
            column lines for resizing cells.
            </summary>
            <param name="point">The point.</param>
            <param name="hitTestPrecision">The hit test precision in points.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.GetLineNearCorner(System.Double,System.Double,Syncfusion.UI.Xaml.ScrollAxis.CornerSide)">
            <summary>
            Gets the line near the given corner point. Use this method for hit-testing row or 
            column lines for resizing cells.
            </summary>
            <param name="point">The point.</param>
            <param name="hitTestPrecision">The hit test precision in points.</param>
            <param name="side">The hit test corner.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.GetLinesAndVisibility(System.Int32,System.Int32,System.Boolean,System.Boolean@,System.Boolean@,Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo@,Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo@)">
            <summary>
            Returns points for given absolut line indexes
            </summary>
            <param name="firstIndex">The first index.</param>
            <param name="lastIndex">The last index.</param>
            <param name="allowAdjust">if set to <c>true</c> return the first visible line if firstIndex
            is above viewable area or return last visible line if lastIndex is after viewable area
            (works also for header and footer).
            </param>
            <param name="firstVisible">if set to <c>true</c> indicates the line with index 
            firstIndex is visible in viewable area.</param>
            <param name="lastVisible">if set to <c>true</c> indicates the line with index 
            lastIndex is visible in viewable area..</param>
            <param name="firstLine">The first line or null if allowAdjust is false and line 
            is not in viewable area.</param>
            <param name="lastLine">The last line or null if allowAdjust is false and line 
            is not in viewable area.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.GetVisibleLinesClipPoints(System.Int32,System.Int32)">
            <summary>
            Gets the visible lines clip points (clipped origin of first line and clipped 
            corner of last line). If both lines are above or below viewable area an empty 
            span is returned. If lines are both above and below viewable are then the 
            range for all viewable lines is returned.
            </summary>
            <param name="firstIndex">The first index.</param>
            <param name="lastIndex">The last index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.GetClipPoints(Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisRegion)">
            <summary>
            Gets the clip points for a region.
            </summary>
            <param name="region">The region.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.RangeToRegionPoints(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns an array with 3 ranges indicating the first and last point for the given lines in each region.
            </summary>
            <param name="first">The index of the first line.</param>
            <param name="last">The index of the last line.</param>
            <param name="allowEstimatesForOutOfViewLines">if set to <c>true</c> allow estimates for out of view lines.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.RangeToPoints(Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisRegion,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns the first and last point for the given lines in a region.
            </summary>
            <param name="region">The region.</param>
            <param name="first">The index of the first line.</param>
            <param name="last">The index of the last line.</param>
            <param name="allowEstimatesForOutOfViewLines">if set to <c>true</c> allow estimates for out of view lines.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.RaiseChanged(Syncfusion.UI.Xaml.ScrollAxis.ScrollChangedAction)">
            <summary>
            Raises the changed event.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.GetNextPage(System.Int32)">
            <summary>
            Determines the line one page down from the given line.
            </summary>
            <param name="lineIndex">The current line.</param>
            <returns>The line index of the line one page down</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.GetPreviousPage(System.Int32)">
            <summary>
            Determines the line one page up from the given line.
            </summary>
            <param name="lineIndex">The current line.</param>
            <returns>The line index of the line one page up</returns>
        </member>
        <member name="E:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.Changed">
            <summary>
            Occurs when a property was changed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.IsPixelScroll">
            <summary>
            Gets a value indicating whether this axis supports pixel scrolling.
            </summary>
            <value>
            	<c>true</c> if this instance supports pixel scrolling; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.StartLineIndex">
            <summary>
            Gets or sets the index of the first line in a parent axis. This is used for shared 
            or nested scroll axis (e.g. a nested grid with shared axis in a covered cell).
            </summary>
            <value>The index of the first line..</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.ScrollBar">
            <summary>
            Gets the scroll bar state.
            </summary>
            <value>The scroll bar state.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.LineCount">
            <summary>
            Gets or sets the line count.
            </summary>
            <value>The line count.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.DefaultLineSize">
            <summary>
            Gets or sets the default size of lines.
            </summary>
            <value>The default size of lines.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.ScrollLinesHost">
            <summary>
            Gets the scroll lines host.
            </summary>
            <value>The scroll lines host.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.RenderSize">
            <summary>
            Gets or sets the size (either height or width) of the parent control.
            </summary>
            <value>The size of the the parent control.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.ScrollPageSize">
            <summary>
            Gets the size (either height or width) of the parent control excluding the 
            area occupied by Header and Footer. This size is used for scrolling down
            or up one page.
            </summary>
            <value>The size of the the parent control.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.Clip">
            <summary>
            Gets or sets the clipping region. Depending on the orientation of
            the axis, this is either the left and right or top and bottom
            values of the clipping rectangle in the parent control.
            </summary>
            <value>The clip.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.ViewSize">
            <summary>
            Gets the view size of the (either height or width) of the parent control. Normally
            the ViewSize is the same as <see cref="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.RenderSize"/>. Only if the parent control
            has more space then needed to display all lines, the ViewSize will be less. In 
            such case the ViewSize is the total height for all lines.
            </summary>
            <value>The size of the view.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.HeaderExtent">
            <summary>
            Gets the header extent. This is total height (or width) of the header lines.
            </summary>
            <value>The header extent.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.HeaderLineCount">
            <summary>
            Gets the header line count.
            </summary>
            <value>The header line count.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.FooterExtent">
            <summary>
            Gets the footer extent. This is total height (or width) of the footer lines.
            </summary>
            <value>The footer extent.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.FooterLineCount">
            <summary>
            Gets the footer line count.
            </summary>
            <value>The footer line count.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.ScrollLineIndex">
            <summary>
            Gets or sets the index of the first visible Line in the Body region.
            </summary>
            <value>The index of the scroll line.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.ViewCorner">
            <summary>
            Gets the view corner which is the point after the last visible line
            of the body region.
            </summary>
            <value>The view corner.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.IsFooterVisible">
            <summary>
            Gets a value indicating whether footer lines are visible.
            </summary>
            <value>
            	<c>true</c> if footer lines are visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.FirstFooterLineIndex">
            <summary>
            Gets the index of the first footer line.
            </summary>
            <value>The index of the first footer line.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.LastBodyVisibleLine">
            <summary>
            Gets the last visible line.
            </summary>
            <value>The last visible line.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.LastBodyVisibleLineIndex">
            <summary>
            Gets the index of the last visible line.
            </summary>
            <value>The index of the last visible line.</value>
        </member>
        <member name="F:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.distances">
            <summary>
            distances holds the visible lines. Each visible line
            has a distance of 1.0. Hidden lines have a distance of 0.0.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.#ctor(Syncfusion.UI.Xaml.ScrollAxis.IScrollBar,Syncfusion.UI.Xaml.ScrollAxis.ILineSizeHost)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis"/> class.
            </summary>
            <param name="sb">The state of the scrollbar.</param>
            <param name="scrollLinesHost">The scroll lines host.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.UpdateDistances">
            <summary>
            Updates the linesize for visible lines to be "1" for LineScrollAxis
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.SetHeaderLineCount(System.Int32)">
            <summary>
            Sets the header line count.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.SetFooterLineCount(System.Int32)">
            <summary>
            Sets the footer line count.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.GetScrollLineIndex(System.Int32@,System.Double@)">
            <summary>
            Gets the index of the scroll line.
            </summary>
            <param name="scrollLindeIndex">Index of the scroll linde.</param>
            <param name="scrollLineDelta">The scroll line delta.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.SetScrollLineIndex(System.Int32,System.Double)">
            <summary>
            Sets the index of the scroll line.
            </summary>
            <param name="scrollLindeIndex">Index of the scroll linde.</param>
            <param name="scrollLineDelta">The scroll line delta.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.SetLineHiddenState(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the hidden state of the lines.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="hide">if set to <c>true</c> [hide].</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.SetLineSize(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets the size of the lines. Will do nothing for a <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis"/>
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.UpdateScrollBar">
            <summary>
            Initialize scrollbar properties from line count in header, footer and body.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.GetPreviousScrollLineIndex(System.Int32)">
            <summary>
            Gets the index of the previous scroll line.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.GetNextScrollLineIndex(System.Int32)">
            <summary>
            Gets the index of the next scroll line.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.ScrollToNextPage">
            <summary>
            Scrolls to next page.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.ScrollToPreviousPage">
            <summary>
            Scrolls to previous page.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.ScrollToNextLine">
            <summary>
            Scrolls to next line.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.ScrollToPreviousLine">
            <summary>
            Scrolls to previous line.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.AlignScrollLine">
            <summary>
            Aligns the scroll line.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.RangeToRegionPoints(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns an array with 3 ranges indicating the first and last point for the given lines in each region.
            </summary>
            <param name="first">The index of the first line.</param>
            <param name="last">The index of the last line.</param>
            <param name="allowEstimatesForOutOfViewLines">if set to <c>true</c> allow estimates for out of view lines.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.RangeToPoints(Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisRegion,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns the first and last point for the given lines in a region.
            </summary>
            <param name="region">The region.</param>
            <param name="first">The index of the first line.</param>
            <param name="last">The index of the last line.</param>
            <param name="allowEstimatesForOutOfViewLines">if set to <c>true</c> allow estimates for out of view lines.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.MouseWheel(System.Int32)">
            <summary>
            This method is called in response to a MouseWheel event.
            </summary>
            <param name="delta">The delta.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.ScrollInView(System.Int32,System.Double)">
            <summary>
            Scrolls the line into viewable area.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <param name="lineSize"></param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.OnLinesInserted(System.Int32,System.Int32)">
            <summary>
            Called when lines were inserted in ScrollLinesHost.
            </summary>
            <param name="insertAt">Index of the first inserted line.</param>
            <param name="count">The count.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.LineCount">
            <summary>
            Gets or sets the line count.
            </summary>
            <value>The line count.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.DefaultLineSize">
            <summary>
            Gets or sets the default size of lines.
            </summary>
            <value>The default size of lines.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.HeaderExtent">
            <summary>
            Gets the header extent. This is total height (or width) of the header lines.
            </summary>
            <value>The header extent.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.FooterExtent">
            <summary>
            Gets the footer extent. This is total height (or width) of the footer lines.
            </summary>
            <value>The footer extent.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.ScrollLineIndex">
            <summary>
            Gets or sets the index of the first visible Line in the Body region.
            </summary>
            <value>The index of the scroll line.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.ViewSize">
            <summary>
            Gets the view size of the (either height or width) of the parent control. Normally
            the ViewSize is the same as <see cref="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.RenderSize"/>. Only if the parent control
            has more space then needed to display all lines, the ViewSize will be less. In
            such case the ViewSize is the total height for all lines.
            </summary>
            <value>The size of the view.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.LineScrollAxis.IsPixelScroll">
            <summary>
            Gets a value indicating whether this axis supports pixel scrolling.
            </summary>
            <value>
            	<c>true</c> if this instance supports pixel scrolling; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection">
            <summary>
            A collection that manages lines with varying height and hidden state. 
            It has properties for header and footer lines, total line count, default
            size of a line and also lets you add nested collections.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.Empty">
            <summary>
            Returns an empty collection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.SetRange(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets the line size for a range.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.SetHidden(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the hidden state for a range of lines.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="hide">if set to <c>true</c> hide the lines.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.GetNestedLines(System.Int32)">
            <summary>
            Gets the nested lines.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.SetNestedLines(System.Int32,Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost)">
            <summary>
            Sets the nested lines. 
            </summary>
            <param name="index">The index.</param>
            <param name="nestedLines">The nested lines. If parameter is null the line will be converted to a normal (not nested) line with default line size.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.ResetNestedLines">
            <summary>
            Reset the line to become a normal (not nested) line with default line size.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.ResetNestedLines(System.Int32)">
            <summary>
            Reset the line to become a normal (not nested) line with default line size.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.GetDefaultLineSize">
            <summary>
            Returns the default line size.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.GetLineCount">
            <summary>
            Returns the line count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.GetSize(System.Int32,System.Int32@)">
            <summary>
            Gets the size.
            </summary>
            <param name="index">The index.</param>
            <param name="repeatValueCount">The number of subsequent values with same size.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.GetHeaderLineCount">
            <summary>
            Gets the header line count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.GetFooterLineCount">
            <summary>
            Gets the footer line count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.GetHidden(System.Int32,System.Int32@)">
            <summary>
            Gets the hidden state for a line.
            </summary>
            <param name="index">The index.</param>
            <param name="repeatValueCount">The number of subsequent lines with same state.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.InitializeScrollAxis(Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase)">
            <summary>
            Initializes the scroll axis.
            </summary>
            <param name="scrollAxis">The scroll axis.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.GetDistances(System.Int32)">
            <summary>
            Gets the nested distances if a line contains a nested lines collection; null otherwise.
            </summary>
            <param name="line">The line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.InsertLines(System.Int32,System.Int32)">
            <summary>
            Inserts lines in the collection and raises the <see cref="E:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.LinesInserted"/> event.
            </summary>
            <param name="insertAtLine">The index of the first line to insert.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.InsertLines(System.Int32,System.Int32,Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost)">
            <summary>
            Inserts lines in the collection and raises the <see cref="E:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.LinesInserted"/> event.
            </summary>
            <param name="insertAtLine">The index of the first line to insert.</param>
            <param name="count">The count.</param>
            <param name="movelines">A container with saved state from a preceeding <see cref="M:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.RemoveLines(System.Int32,System.Int32)"/> call when lines should be moved. When it is null empty lines with default size are inserted.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.RemoveLines(System.Int32,System.Int32)">
            <summary>
            Removes lines from the collection and raises the <see cref="E:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.LinesRemoved"/> event.
            </summary>
            <param name="removeAtLine">The index of the first line to be removed.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.RemoveLines(System.Int32,System.Int32,Syncfusion.UI.Xaml.ScrollAxis.IEditableLineSizeHost)">
            <summary>
            Removes lines from the collection and raises the <see cref="E:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.LinesRemoved"/> event.
            </summary>
            <param name="removeAtLine">The index of the first line to be removed.</param>
            <param name="count">The count.</param>
            <param name="movelines">A container to save state for a subsequent <see cref="M:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.InsertLines(System.Int32,System.Int32)"/> call when lines should be moved.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.CreateMoveLines">
            <summary>
            Creates the object which holds temporary state when moving lines.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.SetHiddenInterval(System.Int32,System.Int32,System.Boolean[])">
            <summary>
            Initialize the collection with a pattern of hidden lines. 
            </summary>
            <param name="start">The index of the first line where the pattern should be
            started to be applied.</param>
            <param name="lineCount">The pattern is applied up to until the lineCount given. 
            The last initialized line is at index lineCount-1.</param>
            <param name="values">The pattern that is applied repeatedly.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.SetHiddenState(System.Boolean[])">
            <summary>
            Set the hidden state all at once in one operation. Use this method if you want to change the hidden
            state of many rows at once since this will be much faster instead of individually setting rows hidden.
            </summary>
            <param name="values">The new hidden state for rows. </param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.TotalExtent">
            <summary>
            Gets the total extent which is the total of all line sizes. Note: This propert only 
            works if the DistanceCollection has been setup for pixel scrolling; otherwise it returns
            double.NaN.
            </summary>
            <value>The total extent or double.NaN.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.HeaderLineCount">
            <summary>
            Gets or sets the header line count.
            </summary>
            <value>The header line count.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.FooterLineCount">
            <summary>
            Gets or sets the footer line count.
            </summary>
            <value>The footer line count.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.LineCount">
            <summary>
            Gets or sets the line count.
            </summary>
            <value>The line count.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.DefaultLineSize">
            <summary>
            Gets or sets the default size of lines.
            </summary>
            <value>The default size of lines.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.Item(System.Int32)">
            <summary>
            Gets or sets the line size at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.SupportsNestedLines">
            <summary>
            Gets whether the host supports nesting.
            </summary>
            <value></value>
        </member>
        <member name="E:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.LineSizeChanged">
            <summary>
            Occurs when a lines size was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.LineHiddenChanged">
            <summary>
            Occurs when a lines hidden state changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.DefaultLineSizeChanged">
            <summary>
            Occurs when the default line size changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.LineCountChanged">
            <summary>
            Occurs when the line count was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.HeaderLineCountChanged">
            <summary>
            Occurs when the header line count was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.FooterLineCountChanged">
            <summary>
            Occurs when the footer line count was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.LinesInserted">
            <summary>
            Occurs when lines were inserted.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.LinesRemoved">
            <summary>
            Occurs when lines were removed.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.Distances">
            <summary>
            Gets or sets the distances.
            </summary>
            <value>The distances.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.LineSizeCollection.SupportsInsertRemove">
            <summary>
            Gets whether the host supports inserting and removing lines.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.EmptyLineSizeCollection">
            <summary>
            An empty LineSizeCollection.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.ScrollAxis.EmptyLineSizeCollection.Empty">
            <summary>
            Returns an empty collection.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis">
            <summary>
            PixelScrollAxis implements scrolling logic for both horizontal and vertical 
            scrolling in a <see cref="!:ScrollAxisControl"/>.
            Logical units in the ScrollAxisBase are called "Lines". With the 
            <see cref="!:ScrollAxisControl.ScrollRows"/> a line representes rows in a grid 
            and with <see cref="!:ScrollAxisControl.ScrollRows"/> a line represents columns in a grid.
            <para/>
            PixelScrollAxis supports pixel scrolling and calculates the total height or
            width of all lines.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.distances">
            <summary>
            Distances holds the line sizes. Hidden lines
            have a distance of 0.0. 
            </summary>        
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.#ctor(Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase,Syncfusion.UI.Xaml.ScrollAxis.IScrollBar,Syncfusion.UI.Xaml.ScrollAxis.ILineSizeHost,Syncfusion.UI.Xaml.ScrollAxis.IDistancesHost)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis"/> class which 
            is nested as a single line in a parent scroll axis.
            </summary>
            <param name="parentScrollAxis">The parent scroll axis.</param>
            <param name="sb">The scrollbar state.</param>
            <param name="scrollLinesHost">The scroll lines host.</param>
            <param name="distancesHost">The distances host.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.#ctor(Syncfusion.UI.Xaml.ScrollAxis.IScrollBar,Syncfusion.UI.Xaml.ScrollAxis.ILineSizeHost,Syncfusion.UI.Xaml.ScrollAxis.IDistancesHost)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis"/> class.
            </summary>
            <param name="sb">The scrollbar state.</param>
            <param name="scrollLinesHost">The scroll lines host.</param>
            <param name="distancesHost">The distances host.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.SetLineHiddenState(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the hidden state of the lines.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="hide">if set to <c>true</c> hide lines.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.SetLineSize(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets the size of the lines.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.SetLineResize(System.Int32,System.Double)">
            <summary>
            Set temporary value for a line size during a resize operation without commiting
            value to SrollLinesHost.
            </summary>
            <param name="index">The index.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.ResetLineResize">
            <summary>
            Resets temporary value for line size after a resize operation
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.SetHeaderLineCount(System.Int32)">
            <summary>
            Sets the header line count.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.SetFooterLineCount(System.Int32)">
            <summary>
            Sets the footer line count.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.UpdateScrollBar">
            <summary>
            Initialize scrollbar properties from header and footer size and total size of lines in body.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.GetScrollLineIndex(System.Int32@,System.Double@)">
            <summary>
            Gets the index of the scroll line.
            </summary>
            <param name="scrollLindeIndex">Index of the scroll linde.</param>
            <param name="scrollLineDelta">The scroll line delta.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.SetScrollLineIndex(System.Int32,System.Double)">
            <summary>
            Sets the index of the scroll line.
            </summary>
            <param name="scrollLindeIndex">Index of the scroll linde.</param>
            <param name="scrollLineDelta">The scroll line delta.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.GetPreviousScrollLineIndex(System.Int32)">
            <summary>
            Gets the index of the previous scroll line.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.GetNextScrollLineIndex(System.Int32)">
            <summary>
            Gets the index of the next scroll line.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.ScrollToNextPage">
            <summary>
            Scrolls to next page.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.ScrollToPreviousPage">
            <summary>
            Scrolls to previous page.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.ScrollToNextLine">
            <summary>
            Scrolls to next line.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.ScrollToPreviousLine">
            <summary>
            Scrolls to previous line.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.AlignScrollLine">
            <summary>
            Aligns the scroll line.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.SetNestedLines(System.Int32,Syncfusion.UI.Xaml.ScrollAxis.IDistanceCounterCollection)">
            <summary>
            Associates a collection of nested lines with a line in this axis.
            </summary>
            <param name="index">The index.</param>
            <param name="nestedLines">The nested lines.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.RangeToRegionPoints(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns an array with 3 ranges indicating the first and last point for the given lines in each region.
            </summary>
            <param name="first">The index of the first line.</param>
            <param name="last">The index of the last line.</param>
            <param name="allowEstimatesForOutOfViewLines">if set to <c>true</c> allow estimates for out of view lines.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.RangeToPoints(Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisRegion,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns the first and last point for the given lines in a region.
            </summary>
            <param name="region">The region.</param>
            <param name="first">The index of the first line.</param>
            <param name="last">The index of the last line.</param>
            <param name="allowEstimatesForOutOfViewLines">if set to <c>true</c> allow estimates for out of view lines.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.GetCumulatedOrigin(Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo)">
            <summary>
            Gets the cumulated origin taking scroll position into account. The
            returned value is between ScrollBar.Minimum and ScrollBar.Maximum.
            </summary>
            <param name="line">The line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.GetCumulatedCorner(Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo)">
            <summary>
            Gets the cumulated corner taking scroll position into account. The
            returned value is between ScrollBar.Minimum and ScrollBar.Maximum.
            </summary>
            <param name="line">The line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.MouseWheel(System.Int32)">
            <summary>
            This method is called in response to a MouseWheel event.
            </summary>
            <param name="delta">The delta.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.ScrollInView(System.Int32,System.Double)">
            <summary>
            Scrolls the line into viewable area.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <param name="lineSize">Size of the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.OnLinesRemoved(System.Int32,System.Int32)">
            <summary>
            Called when lines were removed in ScrollLinesHost.
            </summary>
            <param name="removeAt">Index of the first removed line.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.OnLinesInserted(System.Int32,System.Int32)">
            <summary>
            Called when lines were inserted in ScrollLinesHost.
            </summary>
            <param name="insertAt">Index of the first inserted line.</param>
            <param name="count">The count.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.IsPixelScroll">
            <summary>
            Gets a value indicating whether this axis supports pixel scrolling.
            </summary>
            <value>
            	<c>true</c> if this instance supports pixel scrolling; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.Distances">
            <summary>
            Gets the distances collection which is used internally
            for mapping from a point position to
            a line index and vice versa.
            </summary>
            <value>The distances collection.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.TotalExtent">
            <summary>
            Gets the total extent of all line sizes.
            </summary>
            <value>The total extent.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.LineCount">
            <summary>
            Gets or sets the line count.
            </summary>
            <value>The line count.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.DefaultLineSize">
            <summary>
            Gets or sets the default size of lines.
            </summary>
            <value>The default size of lines.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.HeaderExtent">
            <summary>
            Gets the header extent. This is total height (or width) of the header lines.
            </summary>
            <value>The header extent.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.FooterExtent">
            <summary>
            Gets the footer extent. This is total height (or width) of the footer lines.
            </summary>
            <value>The footer extent.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.ScrollLineIndex">
            <summary>
            Gets or sets the index of the first visible Line in the Body region.
            </summary>
            <value>The index of the scroll line.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.PixelScrollAxis.ViewSize">
            <summary>
            Gets the view size of the (either height or width) of the parent control. Normally
            the ViewSize is the same as <see cref="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisBase.RenderSize"/>. Only if the parent control
            has more space then needed to display all lines, the ViewSize will be less. In
            such case the ViewSize is the total height for all lines.
            </summary>
            <value>The size of the view.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.RangeChangedEventHandler">
            <summary>
            Handles events with <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.RangeChangedEventArgs"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.RangeChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.RangeChangedEventArgs">
            <summary>
            Holds <see cref="P:Syncfusion.UI.Xaml.ScrollAxis.RangeChangedEventArgs.From"/> and <see cref="P:Syncfusion.UI.Xaml.ScrollAxis.RangeChangedEventArgs.To"/> integer properties.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.RangeChangedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.RangeChangedEventArgs"/> class.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.RangeChangedEventArgs.From">
            <summary>
            Gets from.
            </summary>
            <value>From.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.RangeChangedEventArgs.To">
            <summary>
            Gets to.
            </summary>
            <value>To.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.LinesRemovedEventHandler">
            <summary>
            Handles events with <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.LinesRemovedEventArgs"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.LinesRemovedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.LinesRemovedEventArgs">
            <summary>
            Holds <see cref="P:Syncfusion.UI.Xaml.ScrollAxis.LinesRemovedEventArgs.RemoveAt"/> and <see cref="P:Syncfusion.UI.Xaml.ScrollAxis.LinesRemovedEventArgs.Count"/> integer properties.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LinesRemovedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.LinesRemovedEventArgs"/> class.
            </summary>
            <param name="removeAt">RemoveAt.</param>
            <param name="count">Count.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.LinesRemovedEventArgs.RemoveAt">
            <summary>
            Gets removeAt.
            </summary>
            <value>RemoveAt.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.LinesRemovedEventArgs.Count">
            <summary>
            Gets count.
            </summary>
            <value>Count.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.LinesInsertedEventHandler">
            <summary>
            Handles events with <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.LinesInsertedEventArgs"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.LinesInsertedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.LinesInsertedEventArgs">
            <summary>
            Holds <see cref="P:Syncfusion.UI.Xaml.ScrollAxis.LinesInsertedEventArgs.InsertAt"/> and <see cref="P:Syncfusion.UI.Xaml.ScrollAxis.LinesInsertedEventArgs.Count"/> integer properties.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.LinesInsertedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.LinesInsertedEventArgs"/> class.
            </summary>
            <param name="insertAt">InsertAt.</param>
            <param name="count">Count.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.LinesInsertedEventArgs.InsertAt">
            <summary>
            Gets insertAt.
            </summary>
            <value>InsertAt.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.LinesInsertedEventArgs.Count">
            <summary>
            Gets count.
            </summary>
            <value>Count.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.HiddenRangeChangedEventHandler">
            <summary>
            Handles events with <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.HiddenRangeChangedEventArgs"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.HiddenRangeChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.HiddenRangeChangedEventArgs">
            <summary>
            Holds <see cref="P:Syncfusion.UI.Xaml.ScrollAxis.HiddenRangeChangedEventArgs.From"/> and <see cref="P:Syncfusion.UI.Xaml.ScrollAxis.HiddenRangeChangedEventArgs.To"/> integer properties.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.HiddenRangeChangedEventArgs.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.RangeChangedEventArgs"/> class.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.HiddenRangeChangedEventArgs.From">
            <summary>
            Gets from.
            </summary>
            <value>From.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.HiddenRangeChangedEventArgs.To">
            <summary>
            Gets to.
            </summary>
            <value>To.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex">
            <summary>
            Holds the coordinates for a cell. 
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex"/> with row and column coordinates.
            </summary>
            <param name="r">The row index.</param>
            <param name="c">The column index.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if <paramref name="obj"/> and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex.ToString">
            <summary>
            Returns the type name with state of this instance.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex.op_Equality(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="r1">The r1.</param>
            <param name="r2">The r2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex.op_Inequality(Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex,Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="r1">The r1.</param>
            <param name="r2">The r2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex.Empty">
            <summary>
            Gets the empty instance with RowIndex and ColumnIndex set to int.MinValue
            </summary>
            <value>The empty.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex.ColumnIndex">
            <summary>
            The column index.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.RowColumnIndex.RowIndex">
            <summary>
            The row index.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.CornerSide">
            <summary>
            Corner side enumeration.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.ScrollAxis.CornerSide.Both">
            <summary>
            Includes both Left and right side or Top and Bottom side.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.ScrollAxis.CornerSide.Left">
            <summary>
            Left side alone.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.ScrollAxis.CornerSide.Right">
            <summary>
            Right side alone.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.ScrollAxis.CornerSide.Top">
            <summary>
            Top side alone.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.ScrollAxis.CornerSide.Bottom">
            <summary>
            Bottom side alone.
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisRegion">
            <summary>
            A scroll axis has three regions: Header, Body and Footer.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisRegion.Header">
            <summary>
            The header (at top or left side)
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisRegion.Body">
            <summary>
            The body (center between header and footer)
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.ScrollAxis.ScrollAxisRegion.Footer">
            <summary>
            The footer (at bottom or right side)
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo">
            <summary>
            Provides all properties to configure a scrollbar.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed and raises the <see cref="E:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo.CopyTo(Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo)">
            <summary>
            Copies current settings to another object.
            </summary>
            <param name="sb">another object.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo"/> is equal to the current <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo"/>.
            </summary>
            <param name="obj">The <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo"/> to compare with the current <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo"/>.</param>
            <returns>
            true if the specified <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo"/> is equal to the current <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo.Enabled">
            <summary>
            Gets or sets a number that represents the current position of the scroll box on the scroll bar control.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo.LargeChange">
            <summary>
            Gets or sets a value to be added to or subtracted from the value of the property when the scroll box is moved a large distance.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo.Maximum">
            <summary>
            Gets or sets the upper limit of values of the scrollable range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo.Minimum">
            <summary>
            Gets or sets the lower limit of values of the scrollable range.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo.SmallChange">
            <summary>
            Gets or sets the value to be added to or subtracted from the value of the property when the scroll box is moved a small distance.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo.Value">
            <summary>
            Gets or sets a numeric value that represents the current position of the scroll box on the scroll bar control.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo.ValueChanged">
            <summary>
             <para>Occurs when the <see cref="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo.Value"/> property has changed.</para>
            </summary>
        </member>
        <member name="E:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo.ValueChanging">
            <summary>
             <para>Occurs before the <see cref="P:Syncfusion.UI.Xaml.ScrollAxis.ScrollInfo.Value"/> property is changed.</para>
            </summary>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.ValueChangingEventHandler">
            <summary>
            Handles events with <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.ValueChangingEventArgs"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.ValueChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.ValueChangingEventArgs">
            <summary>
            Holds <see cref="P:Syncfusion.UI.Xaml.ScrollAxis.ValueChangingEventArgs.NewValue"/> and <see cref="P:Syncfusion.UI.Xaml.ScrollAxis.ValueChangingEventArgs.OldValue"/> properties.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.ValueChangingEventArgs.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.ValueChangingEventArgs"/> class.
            </summary>
            <param name="newValue">NewValue.</param>
            <param name="oldValue">OldValue.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ValueChangingEventArgs.NewValue">
            <summary>
            Gets newValue.
            </summary>
            <value>NewValue.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.ValueChangingEventArgs.OldValue">
            <summary>
            Gets oldValue.
            </summary>
            <value>OldValue.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.RangeValuePair`1">
            <summary>
            Holds a range together with a value assigned to the range.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.RangeValuePair`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.RangeValuePair`1"/> class.
            </summary>
            <param name="start">The start and end of the range.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.RangeValuePair`1.#ctor(System.Int32,System.Int32,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.RangeValuePair`1"/> class.
            </summary>
            <param name="start">The start.</param>
            <param name="count">The count.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.RangeValuePair`1.CompareTo(System.Object)">
            <summary>
            Compares the current range with the range of the other object. The value is 
            ignored.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than <paramref name="obj"/>. Zero This instance is equal to <paramref name="obj"/>. Greater than zero This instance is greater than <paramref name="obj"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.RangeValuePair`1.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> with state information about this object.
            </summary>
            <returns>
            Returns a <see cref="T:System.String"/> with state information about this object.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.RangeValuePair`1.Start">
            <summary>
            Gets or sets the start of the range.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.RangeValuePair`1.Count">
            <summary>
            Gets or sets the count of the range.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.RangeValuePair`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.RangeValuePair`1.End">
            <summary>
            Gets or sets the end of the range.
            </summary>
            <value>The end.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.SortedRangeValueList`1">
            <summary>
            A sorted list with <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.RangeValuePair`1"/> ordered by the
            start index of the ranges. SortedRangeValueList ensures that ranges 
            of the elements inside the list do not overlap and it also ensures
            that there are no empty gaps meaning that the subsequent range will
            always have the Start position be set to the End position of the previous
            range plus one.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.SortedRangeValueList`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.SortedRangeValueList`1"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.SortedRangeValueList`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.SortedRangeValueList`1"/> class.
            </summary>
            <param name="defaultValue">The default value used for filling gaps.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.SortedRangeValueList`1.GetRange(System.Int32,System.Int32@)">
            <summary>
            Gets a range that countains the specified index and also 
            returns a count indicating the delta between the index and the 
            end of the range.
            </summary>
            <param name="index">The index.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.SortedRangeValueList`1.Insert(System.Int32,System.Int32)">
            <summary>
            Inserts a range intialized with <see cref="P:Syncfusion.UI.Xaml.ScrollAxis.SortedRangeValueList`1.DefaultValue"/> at
            the specified index. When necessary it splits a range and creates
            a new range value pair.
            </summary>
            <param name="insertAt">The insertion point.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.SortedRangeValueList`1.Insert(System.Int32,System.Int32,`0)">
            <summary>
            Inserts a range intialized with a given value at
            the specified index. When necessary it splits a range and creates
            a new range value pair.
            </summary>
            <param name="insertAt">The insertion point.</param>
            <param name="count">The count.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.SortedRangeValueList`1.Insert(System.Int32,System.Int32,Syncfusion.UI.Xaml.ScrollAxis.SortedRangeValueList{`0})">
            <summary>
            Inserts a range intialized with <see cref="P:Syncfusion.UI.Xaml.ScrollAxis.SortedRangeValueList`1.DefaultValue"/> at
            the specified index. When necessary it splits a range and creates
            a new range value pair.
            </summary>
            <param name="insertAt">The insertion point.</param>
            <param name="count">The count.</param>
            <param name="moveRanges">Allocate this object before a preceeding Remove call when moving ranges. 
            Otherwise specify null.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.SortedRangeValueList`1.Insert(System.Int32,System.Int32,`0,Syncfusion.UI.Xaml.ScrollAxis.SortedRangeValueList{`0})">
            <summary>
            Inserts a range intialized with a given value at
            the specified index. When necessary it splits a range and creates
            a new range value pair.
            </summary>
            <param name="insertAt">The insertion point.</param>
            <param name="count">The count.</param>
            <param name="value">The value.</param>
            <param name="moveRanges">Allocate this object before a preceeding Remove call when moving ranges. 
            Otherwise specify null.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.SortedRangeValueList`1.Remove(System.Int32,System.Int32)">
            <summary>
            Removes a range at the specified index. When necessary ranges
            are merged when preceeding and subsquent ranges have the same
            value.
            </summary>
            <param name="removeAt">The index for the range to be removed.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.SortedRangeValueList`1.Remove(System.Int32,System.Int32,Syncfusion.UI.Xaml.ScrollAxis.SortedRangeValueList{`0})">
            <summary>
            Removes a range at the specified index. When necessary ranges
            are merged when preceeding and subsquent ranges have the same
            value.
            </summary>
            <param name="removeAt">The index for the range to be removed.</param>
            <param name="count">The count.</param>
            <param name="moveRanges">Allocate this object before a Remove call when moving ranges
            and pass it to a subsequent Insert call. Otherwise specify null.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.SortedRangeValueList`1.SetRange(System.Int32,System.Int32,`0)">
            <summary>
            Sets the value for a range at the specified index. When necessary ranges
            are split or merged to make sure integrity of the list is maintained.
            (SortedRangeValueList ensures that ranges
            of the elements inside the list do not overlap and it also ensures
            that there are no empty gaps meaning that the subsequent range will
            always have the Start position be set to the End position of the previous
            range plus one.)
            </summary>
            <param name="index">The index for the range to be changed.</param>
            <param name="count">The count.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.SortedRangeValueList`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.SortedRangeValueList`1.System#Collections#Generic#IEnumerable{Syncfusion#UI#Xaml#ScrollAxis#RangeValuePair{T}}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.SortedRangeValueList`1.DefaultValue">
            <summary>
            Gets or sets the default value used for filling gaps.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.SortedRangeValueList`1.Count">
            <summary>
            Gets the count which is the same as the end position of
            the last range.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.SortedRangeValueList`1.Item(System.Int32)">
            <summary>
            Gets the value of the range that contains the specified index
            or changes the value of the range. When necessary it splits a range and creates
            a new range value pair to hold the new value for the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo">
            <summary>
            Contains information about a visible line (can also be a row or column).
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo"/> class.
            </summary>
            <param name="visibleIndex">Visible index of the line.</param>
            <param name="lineIndex">Absolute index of the line.</param>
            <param name="size">The size.</param>
            <param name="clippedOrigin">The clipped origin.</param>
            <param name="scrollOffset">The scroll offset.</param>
            <param name="isHeader">if set to <c>true</c> line is a header.</param>
            <param name="isFooter">if set to <c>true</c> line is a footer.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo"/> class. Used for BinarySearch.
            </summary>
            <param name="clippedOrigin">The clipped origin.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo"/> class. Used for BinarySearch.
            </summary>
            <param name="lineIndex">Index of the line.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.ToString">
            <summary>
            Returns the type name with state of this instance.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.CompareTo(Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.VisibleIndex">
            <summary>
            Gets the visible index of the line.
            </summary>
            <value>The visible index of the line.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.IsVisible">
            <summary>
            Determines if the line is visible.
            </summary>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.LineIndex">
            <summary>
            Gets the index of the line.
            </summary>
            <value>The index of the line.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.Size">
            <summary>
            Gets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.ClippedSize">
            <summary>
            Gets the size of the clipped area.
            </summary>
            <value>The size of the clipped area.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.Corner">
            <summary>
            Gets the corner.
            </summary>
            <value>The corner.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.ClippedCorner">
            <summary>
            Gets the clipped corner.
            </summary>
            <value>The clipped corner.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.ClippedOrigin">
            <summary>
            Gets the clipped origin.
            </summary>
            <value>The clipped origin.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.Origin">
            <summary>
            Gets the origin.
            </summary>
            <value>The origin.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.ScrollOffset">
            <summary>
            Gets the scroll offset.
            </summary>
            <value>The scroll offset.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.ClippedCornerExtent">
            <summary>
            Gets the clipped corner extent.
            </summary>
            <value>The clipped corner extent.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.IsClipped">
            <summary>
            Gets a value indicating whether this instance is clipped.
            </summary>
            <value>
            	<c>true</c> if this instance is clipped; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.IsClippedCorner">
            <summary>
            Gets a value indicating whether this instance corner is clipped.
            </summary>
            <value>
            	<c>true</c> if this instance corner is clipped; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.IsClippedOrigin">
            <summary>
            Gets a value indicating whether this instance origin is clipped.
            </summary>
            <value>
            	<c>true</c> if this instance origin is clipped; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.IsClippedBody">
            <summary>
            Determines whether this instance is clipped taking into consideration whether it is the the first or last visible line 
            and no clipping is needed for these cases.
            </summary>
            <param name="isFirstRow"></param>
            <param name="isLastRow"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.Region">
            <summary>
            Gets the axis region this line belongs to.
            </summary>
            <value>The axis region.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.IsHeader">
            <summary>
            Gets a value indicating whether this instance is a header.
            </summary>
            <value><c>true</c> if this instance is a header; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo.IsFooter">
            <summary>
            Gets a value indicating whether this instance is a footer.
            </summary>
            <value><c>true</c> if this instance is a footer; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.UI.Xaml.ScrollAxis.VisibleLinesCollection">
            <summary>
            A strong-typed collection of <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.VisibleLineInfo"/> items.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.VisibleLinesCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.ScrollAxis.VisibleLinesCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.VisibleLinesCollection.GetVisibleLineAtPoint(System.Double)">
            <summary>
            Gets the visible line at point.
            </summary>
            <param name="point">The point.</param>
            <returns>visible line at point.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.VisibleLinesCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.VisibleLinesCollection.GetVisibleLineAtLineIndex(System.Int32)">
            <summary>
            Gets the the visible line at line index.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <returns>visible line at line index.</returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.ScrollAxis.VisibleLinesCollection.GetVisibleLineNearLineIndex(System.Int32)">
            <summary>
            Gets the visible line for a line index. If the line specified
            line is hidden the next visible line is returned.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <returns>The first visible line for a line index that is not hidden.</returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLinesCollection.VisibleLineIndexes">
            <summary>
            Gets the visible line indexes.
            </summary>
            <value>The visible line indexes.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLinesCollection.FirstBodyVisibleIndex">
            <summary>
            Gets the index of the first visible line in the body region.
            </summary>
            <value>The index of the first visible line in the body region.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLinesCollection.FirstFooterVisibleIndex">
            <summary>
            Gets the index of the first visible line in the footer region.
            </summary>
            <value>The index of the first visible line in the footer region.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.ScrollAxis.VisibleLinesCollection.LastBodyVisibleIndex">
            <summary>
            Gets the index of the last visible line in the body region.
            </summary>
            <value>The index of the last visible line in the body region.</value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Utility.BaseCommand.#ctor(System.Action{System.Object})">
            <summary>
            Creates a new command that can always execute.
            </summary>
            <param name="execute">The execution logic.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Utility.BaseCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object})">
            <summary>
            Creates a new command.
            </summary>
            <param name="execute">The execution logic.</param>
            <param name="canExecute">The execution status logic.</param>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Utility.DoubleSpan">
            <summary>
            Holds a start and end value with double precision.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Utility.DoubleSpan.Empty">
            <summary>
            An empty object.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Utility.DoubleSpan.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Utility.DoubleSpan"/> struct.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Utility.DoubleSpan.ToString">
            <summary>
            Returns a string with start and end values.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Utility.DoubleSpan.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Utility.DoubleSpan.Start">
            <summary>
            Gets or sets the start.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Utility.DoubleSpan.End">
            <summary>
            Gets or sets the end.
            </summary>
            <value>The end.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Utility.DoubleSpan.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>The length.</value>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Utility.GridUtil.GetNavigatableDescendants(Windows.UI.Xaml.UIElement,System.Collections.Generic.List{Windows.UI.Xaml.Controls.Control}@)">
            <summary>
            Generic method to get the navigatable child Controls
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Utility.GridUtil.GetChildObject``1(Windows.UI.Xaml.DependencyObject,System.String)">
            <summary>
            Generic method to get the child object
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Utility.GridUtil.IsComplexType(System.Type)">
            <summary>
            Indicates whether the specified Type has nested properties.
            </summary>
            <param name="t">The Type to be checked.</param>
            <returns>True if nested properties are found; False otherwise.</returns>
        </member>
        <member name="T:Syncfusion.UI.Xaml.Utility.Int32Span">
            <summary>
            Holds a start and end value with integer precision.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Utility.Int32Span.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Utility.Int32Span"/> struct.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Utility.Int32Span.Start">
            <summary>
            Gets or sets the start.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Utility.Int32Span.End">
            <summary>
            Gets or sets the end.
            </summary>
            <value>The end.</value>
        </member>
        <member name="P:Syncfusion.UI.Xaml.Utility.Int32Span.Count">
            <summary>
            Gets or sets the count (equals end - start + 1)
            </summary>
            <value>The count.</value>
        </member>
    </members>
</doc>
